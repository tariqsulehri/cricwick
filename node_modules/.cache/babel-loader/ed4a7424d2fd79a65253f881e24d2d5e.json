{"ast":null,"code":"import _objectSpread from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport { login } from '../../services/authService';\nimport { Globals } from '../../global';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this));\n    _this.GetUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, data, gen;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return login(_this.state.user.username);\n\n            case 2:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              _context.next = 6;\n              return _this.setState(function () {\n                return {\n                  generic: data.generic_response\n                };\n              });\n\n            case 6:\n              console.log(_this.state.generic);\n              localStorage.setItem('user', JSON.stringify(_this.state.user));\n              localStorage.setItem('generic', JSON.stringify(_this.state.generic));\n              gen = localStorage.getItem('generic');\n              console.log(\"Generic Response : \", Globals.selectedTelco, gen);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      user: {\n        username: '',\n        password: ''\n      },\n      generic: [],\n      error: ''\n    };\n    _this.handleUserChange = _this.handleUserChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.dismissError = _this.dismissError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"dismissError\",\n    value: function dismissError() {\n      this.setState({\n        error: ''\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      evt.preventDefault();\n\n      if (!this.state.user.username) {\n        return this.setState({\n          error: 'Username is required'\n        });\n      } // if (!this.state.user.password) {\n      //   return this.setState({ error: 'Password is required' });\n      // }\n\n\n      console.log(\"Form Submitted...\");\n      this.GetUser(this.state.user.username); // localStorage.setItem('user', JSON.stringify(this.state.user));\n      // localStorage.setItem('generic', JSON.stringify(this.state.generic));\n\n      return this.setState({\n        error: ''\n      });\n    }\n  }, {\n    key: \"handleUserChange\",\n    value: function handleUserChange(evt) {\n      var user = _objectSpread({}, this.state.user);\n\n      user.username = evt.target.value;\n      this.setState({\n        user: user\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // NOTE: I use data-attributes for easier E2E testing\n      // but you don't need to target those (any css-selector will work)\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.error && React.createElement(\"h3\", {\n        \"data-test\": \"error\",\n        onClick: this.dismissError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.dismissError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u2716\"), this.state.error), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Enter your Number :\"), React.createElement(\"input\", {\n        type: \"text\",\n        \"data-test\": \"username\",\n        value: this.state.user.username,\n        onChange: this.handleUserChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Log In\",\n        \"data-test\": \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\login\\login.jsx"],"names":["React","Component","login","Globals","Login","GetUser","state","user","username","data","setState","generic","generic_response","console","log","localStorage","setItem","JSON","stringify","gen","getItem","selectedTelco","password","error","handleUserChange","bind","handleSubmit","dismissError","evt","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {login}  from '../../services/authService';\r\nimport {Globals} from '../../global';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        user : {username: '', password: '' },\r\n        generic : [],\r\n        error: ''\r\n    };\r\n\r\n    this.handleUserChange = this.handleUserChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.dismissError = this.dismissError.bind(this);\r\n  }\r\n\r\n  dismissError() {\r\n    this.setState({ error: '' });\r\n  }\r\n\r\n  GetUser = async ()=>{\r\n      const {data} = await login(this.state.user.username);\r\n      await this.setState(()=>{\r\n            return{\r\n                 generic : data.generic_response\r\n            }\r\n      })\r\n\r\n      console.log(this.state.generic);\r\n      localStorage.setItem('user', JSON.stringify(this.state.user));\r\n      localStorage.setItem('generic', JSON.stringify(this.state.generic));\r\n\r\n      const gen  = localStorage.getItem('generic');\r\n      console.log(\"Generic Response : \", Globals.selectedTelco ,gen);\r\n      \r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n       \r\n    if (!this.state.user.username) {\r\n      return this.setState({ error: 'Username is required' });\r\n    }\r\n\r\n    // if (!this.state.user.password) {\r\n    //   return this.setState({ error: 'Password is required' });\r\n    // }\r\n    console.log(\"Form Submitted...\"); \r\n    this.GetUser(this.state.user.username);\r\n\r\n    \r\n    \r\n    // localStorage.setItem('user', JSON.stringify(this.state.user));\r\n    // localStorage.setItem('generic', JSON.stringify(this.state.generic));\r\n    \r\n    return this.setState({ error: '' });\r\n  }\r\n\r\n  handleUserChange(evt) {\r\n    const user = {...this.state.user}; \r\n    user.username =  evt.target.value;\r\n    this.setState({\r\n      user : user\r\n    });\r\n  };\r\n\r\n    render() {\r\n    // NOTE: I use data-attributes for easier E2E testing\r\n    // but you don't need to target those (any css-selector will work)\r\n\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          {\r\n            this.state.error &&\r\n            <h3 data-test=\"error\" onClick={this.dismissError}>\r\n              <button onClick={this.dismissError}>✖</button>\r\n              {this.state.error}\r\n            </h3>\r\n          }\r\n          <label>Enter your Number :</label>\r\n          <input type=\"text\" data-test=\"username\" value={this.state.user.username} onChange={this.handleUserChange} />\r\n          <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}