{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\common\\\\pointsTable.jsx\";\nimport React, { Component } from 'react';\nimport config from '../../config.json';\nimport http from 'superagent';\nimport Loading from '../common/loading';\nimport '../../assets/css/ranking/ranking.css';\n\nvar PointsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PointsTable, _Component);\n\n  function PointsTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PointsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PointsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      page: 1,\n      perPage: 5,\n      showFull: false\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadSeriesRecords();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var viewable_id, Url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              viewable_id = _this.props.viewable_id; // 1) All Videos :\n              //    Base URL =   https://back.cricwick.net/api\n              //    Composed =  /series_points_table/284\n\n              Url = config.apiEndPoint + '/' + 'series_points_table' + '/' + viewable_id;\n              console.log(Url);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return http.get(Url).then(function (res) {\n                _this.setState(function () {\n                  return {\n                    isLoaded: true,\n                    isLoading: false,\n                    seriesData: res.body,\n                    hasMore: true\n                  };\n                });\n              });\n\n            case 6:\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _this.setState({\n                isLoaded: false,\n                error: _context2.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[3, 8]]);\n    }));\n\n    _this.handleClikc = function (article) {\n      _this.setState({\n        showFull: true,\n        article: article\n      });\n    };\n\n    _this.hideDetail = function () {\n      _this.setState({\n        showFull: !_this.state.showFull\n      });\n    };\n\n    _this.renderPointTable = function (data) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped table-condensed table-hover table-borderless rank-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Rank\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Team's\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Mat\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Won\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Lost\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Tie's\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Pts\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"NRR\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, data.map(function (points, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, points.team), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, points.match_played), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, points.match_won), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, points.match_lost), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, points.match_tied), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, points.points), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, points.net_run_rate));\n      }))));\n    };\n\n    return _this;\n  }\n\n  _createClass(PointsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          seriesData = _this$state.seriesData,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \" Error : \", error.response);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      } else {\n        console.log(seriesData['points_table'].length);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, seriesData['points_table'].length > 0 ? this.renderPointTable(seriesData['points_table']) : React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Points Table not available yet...\")));\n      }\n    }\n  }]);\n\n  return PointsTable;\n}(Component);\n\nexport default PointsTable;","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\common\\pointsTable.jsx"],"names":["React","Component","config","http","Loading","PointsTable","state","error","isLoaded","isLoading","hasMore","seriesData","page","perPage","showFull","componentDidMount","loadSeriesRecords","viewable_id","props","Url","apiEndPoint","console","log","get","then","res","setState","body","handleClikc","article","hideDetail","renderPointTable","data","map","points","i","team","match_played","match_won","match_lost","match_tied","net_run_rate","response","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport config from '../../config.json';\r\nimport http from 'superagent';\r\nimport Loading from '../common/loading';\r\nimport '../../assets/css/ranking/ranking.css';\r\n\r\nclass PointsTable extends Component {\r\n    state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        isLoading: false,\r\n        hasMore: true,\r\n        seriesData: [],\r\n        page: 1,\r\n        perPage: 5,\r\n        showFull: false,\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { viewable_id } = this.props;\r\n\r\n        // 1) All Videos :\r\n        //    Base URL =   https://back.cricwick.net/api\r\n        //    Composed =  /series_points_table/284\r\n\r\n        const Url = config.apiEndPoint\r\n            + '/'\r\n            + 'series_points_table'\r\n            + '/'\r\n            + viewable_id\r\n\r\n        console.log(Url);\r\n\r\n        try {\r\n            await http\r\n                .get(Url)\r\n                .then(res => {\r\n                    this.setState(() => {\r\n                        return {\r\n                            isLoaded: true,\r\n                            isLoading: false,\r\n                            seriesData: res.body,\r\n                            hasMore: true\r\n                        }\r\n                    });\r\n                })\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoaded: false,\r\n                error: error\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleClikc = (article) => {\r\n        this.setState({\r\n            showFull: true, article\r\n        });\r\n    }\r\n\r\n    hideDetail = () => {\r\n        this.setState({\r\n            showFull: !this.state.showFull\r\n        });\r\n    }\r\n\r\n\r\n    renderPointTable = (data) => {\r\n        return (\r\n            <div>\r\n                <table className='table table-striped table-condensed table-hover table-borderless rank-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Team's</th>\r\n                            <th>Mat</th>\r\n                            <th>Won</th>\r\n                            <th>Lost</th>\r\n                            <th>Tie's</th>\r\n                            <th>Pts</th>\r\n                            <th>NRR</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((points, i) => (\r\n                            <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{points.team}</td>\r\n                                <td>{points.match_played}</td>\r\n                                <td>{points.match_won}</td>\r\n                                <td>{points.match_lost}</td>\r\n                                <td>{points.match_tied}</td>\r\n                                <td>{points.points}</td>\r\n                                <td>{points.net_run_rate}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { seriesData, error, isLoaded } = this.state;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.response}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<Loading />);\r\n        } else {\r\n            console.log(seriesData['points_table'].length);\r\n            return (\r\n                <div>\r\n                    {/* <!-- This  following Code is for  ODI/T20/TEST Ranking  --> */}\r\n                    <div className=\"card p-3 mb-1\">\r\n                        {seriesData['points_table'].length > 0 ? \r\n                           this.renderPointTable(seriesData['points_table'])\r\n                        : <h6>Points Table not available yet...</h6> }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PointsTable;"]},"metadata":{},"sourceType":"module"}