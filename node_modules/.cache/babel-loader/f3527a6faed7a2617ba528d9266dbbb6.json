{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\series\\\\series.jsx\";\nimport React, { Component } from 'react';\nimport request from 'superagent';\nimport Loading from '../common/loading';\nimport Match from 'mathjs';\nimport { NavLink, Route } from 'react-router-dom';\nimport Live from './live';\nimport '../../assets/css/series/series.css'; //import axios                from 'axios';\n\nvar Series =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Series, _Component);\n\n  function Series(props) {\n    var _this;\n\n    _classCallCheck(this, Series);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Series).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, page, perPage, baseUrl, Url;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, page = _this$state.page, perPage = _this$state.perPage, baseUrl = _this$state.baseUrl; // fetch(\"http://back.cricwick.net/api/v3/view_lists/get_by_name?view=home\")\n              //Home Series Api  \n\n              Url = baseUrl + '/' + '?page=' + page + '&per_page=' + perPage; //console.log(Url);\n              //console.log(hasMore);\n\n              request.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState(function () {\n                  return {\n                    isLoaded: true,\n                    isLoading: false,\n                    seriesData: res.body,\n                    hasMore: res.length < perPage\n                  };\n                });\n              }).catch(function (error) {\n                _this.setState(function () {\n                  return {\n                    isLoaded: false,\n                    error: error\n                  };\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.handleScroll =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var offset, height;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              offset = document.documentElement.scrollTop + window.innerHeight;\n              height = document.documentElement.offsetHeight; //console.log(\"offset : \", Math.ceil(offset));\n              //console.log(\"height : \", height);\n\n              if (!(Match.ceil(offset) === height)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 5;\n              return _this.setState(function (prevState) {\n                return {\n                  page: prevState.page + 1\n                };\n              });\n\n            case 5:\n              _this.loadSeriesRecord();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      selectedType: 'live_series',\n      urlPath: 'live',\n      baseUrl: 'https://back.cricwick.net/api/v2/series',\n      page: 1,\n      telco: 'mobilink',\n      perPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(Series, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords(); // this.state.seriesData['live_series'].map((item,i)=>(\n      //       console.log(item)\n      // ));\n      //console.log( \"From Component Did Mount : \" , this.state.seriesData);\n    }\n  }, {\n    key: \"render\",\n    // handleClick = (selectedType, urlPath) => {\n    //     if (!selectedType) {\n    //         this.setState(()=>{ return {selectedType: 'live_series', urlPath: urlPath } });\n    //     } else {\n    //         this.setState(()=>{ return {selectedType: 'live_series', urlPath: urlPath } });\n    //     }\n    // }\n    value: function render() {\n      var _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          seriesData = _this$state2.seriesData,\n          selectedType = _this$state2.selectedType;\n      var match = this.props.match;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-block mb-1 p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"short-menu-buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: \"btn btn-default\",\n          to: \"\".concat(match.url, \"/live\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Live\"), React.createElement(NavLink, {\n          className: \"btn btn-default\",\n          to: \"\".concat(match.url, \"/Upcoming\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Upcoming\"), React.createElement(NavLink, {\n          className: \"btn btn-default\",\n          to: \"\".concat(match.url, \"/Result\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Result\")), \";\"), React.createElement(\"div\", {\n          className: \"card card-block p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"\".concat(match.url, \"/live/\"),\n          render: React.createElement(Live, {\n            data: \"seriesData\",\n            selectedType: \"live\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Series;\n}(Component);\n\nexport default Series; // <Route\n//   path='/dashboard'\n//   render={(props) => <Dashboard {...props} isAuthed={true} />}\n// />\n//  <Route\n//   path='/dashboard'\n//   component={() => <Dashboard isAuthed={true} />}\n// /> \n// <Route\n//   path='/dashboard'\n//   component={Dashboard}\n//   isAuthed={true}\n// />","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\series\\series.jsx"],"names":["React","Component","request","Loading","Match","NavLink","Route","Live","Series","props","loadSeriesRecords","state","page","perPage","baseUrl","Url","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","hasMore","length","catch","error","handleScroll","offset","document","documentElement","scrollTop","window","innerHeight","height","offsetHeight","ceil","prevState","loadSeriesRecord","selectedType","urlPath","telco","match","message","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport request              from 'superagent';\r\nimport Loading              from '../common/loading';\r\nimport Match                from  'mathjs';\r\nimport {NavLink, Route}     from 'react-router-dom';\r\nimport Live from './live';\r\nimport '../../assets/css/series/series.css';\r\n//import axios                from 'axios';\r\n\r\n\r\n\r\n\r\nclass Series extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            selectedType:'live_series',\r\n            urlPath : 'live', \r\n            baseUrl: 'https://back.cricwick.net/api/v2/series',\r\n            page: 1,\r\n            telco:'mobilink',\r\n            perPage: 10,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n        // this.state.seriesData['live_series'].map((item,i)=>(\r\n        //       console.log(item)\r\n        // ));\r\n        //console.log( \"From Component Did Mount : \" , this.state.seriesData);\r\n    }\r\n   \r\n    loadSeriesRecords = async () =>{\r\n        const {page, perPage, baseUrl} =  this.state;\r\n          // fetch(\"http://back.cricwick.net/api/v3/view_lists/get_by_name?view=home\")\r\n          //Home Series Api  \r\n      \r\n          const Url = baseUrl + '/'\r\n                      + '?page=' + page\r\n                      + '&per_page=' + perPage;\r\n\r\n          //console.log(Url);\r\n          //console.log(hasMore);\r\n          \r\n          request\r\n              .get(Url)\r\n              .set('Accept','application/json')\r\n              .then(res => {\r\n                  this.setState(() => {\r\n                      return {\r\n                          isLoaded: true,\r\n                          isLoading: false,\r\n                          seriesData: res.body,\r\n                          hasMore: (res.length < perPage)\r\n                      }\r\n                  });\r\n              })\r\n              .catch(error => {\r\n                  this.setState(()=>{\r\n                      return {\r\n                          isLoaded: false,\r\n                          error\r\n                      }\r\n                  });\r\n             });\r\n      }\r\n\r\n\r\n      handleScroll = async() => {\r\n        \r\n        let offset = (document.documentElement.scrollTop + window.innerHeight);\r\n        let height = document.documentElement.offsetHeight;\r\n\r\n       //console.log(\"offset : \", Math.ceil(offset));\r\n       //console.log(\"height : \", height);\r\n\r\n\r\n        if (Match.ceil(offset) === height) {\r\n            await this.setState((prevState)=>{ return {page: prevState.page + 1 }});\r\n            this.loadSeriesRecord();\r\n        }\r\n\r\n    }  \r\n\r\n    // handleClick = (selectedType, urlPath) => {\r\n        \r\n    //     if (!selectedType) {\r\n    //         this.setState(()=>{ return {selectedType: 'live_series', urlPath: urlPath } });\r\n    //     } else {\r\n    //         this.setState(()=>{ return {selectedType: 'live_series', urlPath: urlPath } });\r\n    //     }\r\n        \r\n    // }\r\n    \r\n    \r\n\r\n\r\n    render() {\r\n        const { error, isLoaded, seriesData, selectedType} = this.state;\r\n        const {match} =  this.props;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<Loading/>);\r\n        } else {\r\n\r\n        return (\r\n            <div>\r\n                <div className='card card-block mb-1 p-3'>\r\n                    {/* <span  className='short-menu-buttons'>\r\n                        <button className='btn btn-default' onClick={() => this.handleClick('live_series'     , 'live')} >Live</button>\r\n                        <button className='btn btn-default' onClick={() => this.handleClick('upcoming_series' ,'upcoming')}>Upcomming</button>\r\n                        <button className='btn btn-default' onClick={() => this.handleClick('recent_series'   , 'recent')}>Result</button>\r\n                    </span> */}\r\n\r\n                    <span className='short-menu-buttons'>\r\n                        <NavLink  className='btn btn-default' to={`${match.url}/live`}>Live</NavLink>\r\n                        <NavLink  className='btn btn-default' to={`${match.url}/Upcoming`}>Upcoming</NavLink>\r\n                        <NavLink  className='btn btn-default' to={`${match.url}/Result`}>Result</NavLink>\r\n                    </span>;\r\n\r\n\r\n\r\n                </div>\r\n                  \r\n                <div className=\"card card-block p-3 mb-1\">\r\n                      <Route path = {`${match.url}/live/`} render = {<Live data='seriesData' selectedType='live'/>}/>\r\n                </div>  \r\n\r\n            </div>\r\n        );\r\n    }\r\n  } \r\n}\r\n\r\nexport default Series;\r\n\r\n\r\n\r\n// <Route\r\n//   path='/dashboard'\r\n//   render={(props) => <Dashboard {...props} isAuthed={true} />}\r\n// />\r\n\r\n//  <Route\r\n//   path='/dashboard'\r\n//   component={() => <Dashboard isAuthed={true} />}\r\n// /> \r\n\r\n\r\n// <Route\r\n//   path='/dashboard'\r\n//   component={Dashboard}\r\n//   isAuthed={true}\r\n// />"]},"metadata":{},"sourceType":"module"}