{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\home\\\\renderMatch.jsx\";\nimport React, { Component } from 'react';\n\nvar RenderMatch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RenderMatch, _Component);\n\n  function RenderMatch(props) {\n    var _this;\n\n    _classCallCheck(this, RenderMatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderMatch).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(RenderMatch, [{\n    key: \"renderMatchTeamATag\",\n    value: function renderMatchTeamATag(match) {\n      var tagText = ''; // if(match.innings.length > 0) {\n      //   tagText = \n      //   <span> \n      //       {match.innings[0].runs}{ \" \"}/{ \" \"}\n      //       {match.innings[0].wickets} {\" \"} \n      //       ({match.innings[0].overs}) \n      //   </span>\n      // }\n\n      return tagText;\n    }\n  }, {\n    key: \"renderMatchTeamBTag\",\n    value: function renderMatchTeamBTag(match) {\n      var tagText = ''; // if(!match.innings){\n      //    console.log(match.innings)\n      //    tagText =  <span></span>\n      //    return \n      // }   \n      // if (match.innings.length >= 1) {\n      //     tagText =\n      //         <span>\n      //             {match.innings[1].runs}{\" \"}/{\" \"}\n      //             {match.innings[1].wickets} {\" \"}\n      //             ({match.innings[1].overs})\n      //         </span>\n      // }\n\n      return tagText;\n    } //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \n\n  }, {\n    key: \"renderMatchStatus\",\n    value: function renderMatchStatus(match) {\n      var tagText = '';\n\n      if (match.match_state === 'Scheduled') {\n        return tagText;\n      }\n\n      if (match.break_type === \"\") {\n        tagText = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, match.match_state, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      } else {\n        tagText = React.createElement(\"span\", {\n          style: {\n            padding: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, match.break_type, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match; // match_state: \"Over\", detail: \"South Africa won by 6 wickets\"\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.headerTextMatchStatusClass(match.match_state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderMatchStatus(match)), match.title, \", \", ' at ', \"  \", React.createElement(\"span\", {\n        style: {\n          color: 'Gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, match.venue.title), React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 25 + \"px\",\n          height: 25 + \"px\"\n        },\n        src: match.teamA.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, match.teamA.short_name), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.renderMatchTeamBTag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 25 + \"px\",\n          height: 25 + \"px\"\n        },\n        src: match.teamB.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, match.teamB.short_name), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.renderMatchTeamATag(match)), React.createElement(\"div\", {\n        className: \"card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RenderMatch;\n}(Component);\n\nexport default RenderMatch;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\home\\renderMatch.jsx"],"names":["React","Component","RenderMatch","props","state","match","tagText","match_state","break_type","padding","headerTextMatchStatusClass","renderMatchStatus","title","color","venue","width","height","teamA","flag_url","short_name","renderMatchTeamBTag","teamB","renderMatchTeamATag"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass RenderMatch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    renderMatchTeamATag(match) {\r\n        let tagText = '';\r\n\r\n        // if(match.innings.length > 0) {\r\n        //   tagText = \r\n        //   <span> \r\n        //       {match.innings[0].runs}{ \" \"}/{ \" \"}\r\n        //       {match.innings[0].wickets} {\" \"} \r\n        //       ({match.innings[0].overs}) \r\n        //   </span>\r\n        // }\r\n\r\n        return tagText;\r\n    }\r\n\r\n    renderMatchTeamBTag(match) {\r\n        let tagText = '';\r\n\r\n        // if(!match.innings){\r\n        //    console.log(match.innings)\r\n        //    tagText =  <span></span>\r\n        //    return \r\n        // }   \r\n\r\n        // if (match.innings.length >= 1) {\r\n        //     tagText =\r\n        //         <span>\r\n        //             {match.innings[1].runs}{\" \"}/{\" \"}\r\n        //             {match.innings[1].wickets} {\" \"}\r\n        //             ({match.innings[1].overs})\r\n        //         </span>\r\n\r\n        // }\r\n        return tagText;\r\n    }\r\n\r\n//This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \r\nrenderMatchStatus(match) {\r\n    let tagText = '';\r\n\r\n   if (match.match_state === 'Scheduled') {\r\n       return tagText;\r\n   }\r\n   \r\n    if (match.break_type === \"\") {\r\n        tagText = <span>\r\n                     {match.match_state} <br/>\r\n                  </span>\r\n    } else{\r\n        tagText = <span style={{padding:0}}>\r\n                     {match.break_type} <br/>\r\n                  </span>\r\n    }\r\n    return tagText;\r\n}\r\n//-------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n    render() {\r\n        const { match} = this.props;\r\n\r\n        // match_state: \"Over\", detail: \"South Africa won by 6 wickets\"\r\n\r\n        return (\r\n            <div>\r\n\r\n                {/* Following Code Render Live and Scheduled Matched */}\r\n                {/* If Break Type is Empty Then It Will Show  Break Type Otherr Wise MATCH_STATUS */}\r\n                <span className={this.headerTextMatchStatusClass(match.match_state)}>\r\n                    {this.renderMatchStatus(match)}\r\n                </span>\r\n\r\n                {/* Following Code Render Header text for Live-Matches */}\r\n                {/* eg:  Title, Venue, Match Start Date */}\r\n                {match.title}, {' at '}  <span style={{ color: 'Gray' }}>{match.venue.title}</span>\r\n\r\n\r\n                <img className='header-flag-image' style={{ width: 25 + \"px\", height: 25 + \"px\" }}\r\n                    src={match.teamA.flag_url} alt=\"no Iamge\" />\r\n\r\n                <span className=\"header-text-teams-shortname\">\r\n                    {match.teamA.short_name}\r\n                </span>\r\n\r\n                <span className=\"header-text-teama-score\">\r\n                    {this.renderMatchTeamBTag(match)}\r\n                </span>\r\n                <br />\r\n\r\n                {/* Following Code Render Flags or team B */}\r\n                <img className='header-flag-image' style={{ width: 25 + \"px\", height: 25 + \"px\" }}\r\n                    src={match.teamB.flag_url} alt=\"no Iamge\" />\r\n                <span className=\"header-text-teams-shortname\">\r\n                    {match.teamB.short_name}\r\n                </span>\r\n\r\n                {/* Following Code Render Score team B */}\r\n                <span className=\"header-text-teama-score\">\r\n                    {this.renderMatchTeamATag(match)}\r\n                </span>\r\n                <div className='card-footer'>\r\n                    {}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RenderMatch;"]},"metadata":{},"sourceType":"module"}