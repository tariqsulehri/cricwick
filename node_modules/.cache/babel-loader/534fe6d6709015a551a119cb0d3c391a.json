{"ast":null,"code":"import _objectSpread from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport http from \"../../services/httpService\"; //import {userAuthentication}  from \"../../services/userService\";\n\nimport * as authService from \"../../services/authService\";\nimport Input from \"../common/input\";\nimport config from '../../config.json';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, page, perPage, Url;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, page = _this$state.page, perPage = _this$state.perPage;\n              Url = _this.state.baseUrl + '/' + '?page=' + page + '&per_page=' + perPage;\n              console.log(\"Series : \", Url);\n              _context.prev = 3;\n              _context.next = 6;\n              return http.get(Url, {\n                responseType: 'json'\n              }).then(function (response) {\n                _this.setState({\n                  data: response.data\n                });\n\n                _this.state.data['live_series'].map(function (item, i) {\n                  return console.log(\"From Loop : \", item);\n                });\n              });\n\n            case 6:\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(\"Error\", _context.t0);\n              window.location.href = '/404notfound';\n\n            case 12:\n              ;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[3, 8]]);\n    }));\n\n    _this.handleSumbit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var account, _ref3, jwt, errors;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                account = _this.state.account;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return authService.login(account.username);\n\n              case 5:\n                _ref3 = _context2.sent;\n                jwt = _ref3.data;\n                console.log(jwt);\n                localStorage.setItem('token', jwt);\n\n                _this.props.history.push('/');\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                if (_context2.t0.response && _context2.t0.response.status === 400) {\n                  errors = _objectSpread({}, _this.state.errors);\n                  errors.username = _context2.t0.response.data;\n\n                  _this.setState({\n                    errors: errors\n                  });\n                }\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (_ref4) {\n      var input = _ref4.currentTarget;\n\n      var account = _objectSpread({}, _this.state.account);\n\n      account[input.name] = input.value;\n\n      _this.setState({\n        account: account\n      });\n    };\n\n    _this.state = {\n      errors: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      data: null,\n      baseUrl: 'https://back.cricwick.net/api/v2/series',\n      page: 1,\n      perPage: 10,\n      account: {\n        pin: \"\",\n        userid: \"\",\n        username: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.loadSeriesRecords();\n      console.log(\"url : \", config.telco_app_load);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var account = this.state.account;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSumbit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: account.name,\n        id: account.name,\n        value: account.name,\n        label: \"Please Enter Your Number\",\n        placeHolder: \"03xx xxxx xxx\",\n        focus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-img-bottom\",\n        src: require('../../assets/telcos/img-download.gif'),\n        alt: \"NoImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\login\\login.jsx"],"names":["React","Component","http","authService","Input","config","Login","props","loadSeriesRecords","state","page","perPage","Url","baseUrl","console","log","get","responseType","then","response","setState","data","map","item","i","window","location","href","handleSumbit","e","preventDefault","account","login","username","jwt","localStorage","setItem","history","push","status","errors","handleChange","input","currentTarget","name","value","isLoaded","isLoading","hasMore","seriesData","pin","userid","telco_app_load","require"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAkB,4BAAlB,C,CACA;;AACA,OAAQ,KAAKC,WAAb,MAA+B,4BAA/B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAGMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;AADe,UAsBnBC,iBAtBmB;AAAA;AAAA;AAAA;AAAA,6BAsBC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACU,MAAKC,KADf,EACRC,IADQ,eACRA,IADQ,EACFC,OADE,eACFA,OADE;AAGVC,cAAAA,GAHU,GAGJ,MAAKH,KAAL,CAAWI,OAAX,GAAqB,GAArB,GACN,QADM,GACKH,IADL,GAEN,YAFM,GAESC,OALL;AAOhBG,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,GAAzB;AAPgB;AAAA;AAAA,qBASPV,IAAI,CAACc,GAAL,CAASJ,GAAT,EAAc;AAAEK,gBAAAA,YAAY,EAAE;AAAhB,eAAd,EAAwCC,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AAC1D,sBAAKC,QAAL,CAAc;AAAEC,kBAAAA,IAAI,EAAEF,QAAQ,CAACE;AAAjB,iBAAd;;AACA,sBAAKZ,KAAL,CAAWY,IAAX,CAAgB,aAAhB,EAA+BC,GAA/B,CAAmC,UAACC,IAAD,EAAOC,CAAP;AAAA,yBAC/BV,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B,CAD+B;AAAA,iBAAnC;AAGH,eALI,CATO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBZT,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAU,cAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;;AAlBY;AAmBf;;AAnBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtBD;;AAAA,UA8CnBC,YA9CmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA8CJ,kBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACC,cAAF;AACOC,gBAAAA,OAFI,GAEQ,MAAKtB,KAFb,CAEJsB,OAFI;AAAA;AAAA;AAAA,uBAIsB5B,WAAW,CAAC6B,KAAZ,CAAkBD,OAAO,CAACE,QAA1B,CAJtB;;AAAA;AAAA;AAIQC,gBAAAA,GAJR,SAIEb,IAJF;AAKLP,gBAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAA9B;;AACA,sBAAK3B,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;;AAPK;AAAA;;AAAA;AAAA;AAAA;;AAUP,oBAAI,aAAGnB,QAAH,IAAe,aAAGA,QAAH,CAAYoB,MAAZ,KAAuB,GAA1C,EAA+C;AACrCC,kBAAAA,MADqC,qBACvB,MAAK/B,KAAL,CAAW+B,MADY;AAE3CA,kBAAAA,MAAM,CAACP,QAAP,GAAkB,aAAGd,QAAH,CAAYE,IAA9B;;AACA,wBAAKD,QAAL,CAAc;AAAEoB,oBAAAA,MAAM,EAANA;AAAF,mBAAd;AACH;;AAdM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9CI;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA8EnBC,YA9EmB,GA8EJ,iBAA4B;AAAA,UAAXC,KAAW,SAA1BC,aAA0B;;AACvC,UAAMZ,OAAO,qBAAO,MAAKtB,KAAL,CAAWsB,OAAlB,CAAb;;AACAA,MAAAA,OAAO,CAACW,KAAK,CAACE,IAAP,CAAP,GAAuBF,KAAK,CAACG,KAA7B;;AACA,YAAKzB,QAAL,CAAc;AACRW,QAAAA,OAAO,EAACA;AADA,OAAd;AAGH,KApFkB;;AAEf,UAAKtB,KAAL,GAAa;AACT+B,MAAAA,MAAM,EAAE,IADC;AAETM,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,OAAO,EAAE,IAJA;AAKTC,MAAAA,UAAU,EAAE,EALH;AAMT5B,MAAAA,IAAI,EAAE,IANG;AAOTR,MAAAA,OAAO,EAAE,yCAPA;AAQTH,MAAAA,IAAI,EAAE,CARG;AASTC,MAAAA,OAAO,EAAE,EATA;AAUToB,MAAAA,OAAO,EAAC;AAACmB,QAAAA,GAAG,EAAC,EAAL;AAASC,QAAAA,MAAM,EAAC,EAAhB;AAAoBlB,QAAAA,QAAQ,EAAC;AAA7B;AAVC,KAAb;AAFe;AAelB;;;;wCAEmB;AAChB;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,MAAM,CAAC+C,cAA7B;AACH;;;6BAkEQ;AAAA,UACErB,OADF,GACc,KAAKtB,KADnB,CACEsB,OADF;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAKG,OAAO,CAACa,IAAxB;AACO,QAAA,EAAE,EAAOb,OAAO,CAACa,IADxB;AAEO,QAAA,KAAK,EAAIb,OAAO,CAACa,IAFxB;AAGO,QAAA,KAAK,EAAG,0BAHf;AAIO,QAAA,WAAW,EAAG,eAJrB;AAKO,QAAA,KAAK,EAAI,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI;AACO,QAAA,SAAS,EAAC,sBADjB;AAEO,QAAA,IAAI,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CADJ,EAgBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAC,iBAAf;AACA,QAAA,GAAG,EAAES,OAAO,CAAC,sCAAD,CADZ;AACsD,QAAA,GAAG,EAAC,SAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CAhBL,CADJ;AAwBH;;;;EAjHepD,S;;AAoHpB,eAAeK,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport http  from \"../../services/httpService\";\r\n//import {userAuthentication}  from \"../../services/userService\";\r\nimport  * as authService  from \"../../services/authService\";\r\nimport Input from \"../common/input\";\r\nimport config from '../../config.json';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            errors: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            data: null,\r\n            baseUrl: 'https://back.cricwick.net/api/v2/series',\r\n            page: 1,\r\n            perPage: 10,\r\n            account:{pin:\"\", userid:\"\", username:\"\"}\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.loadSeriesRecords();\r\n        console.log(\"url : \", config.telco_app_load);\r\n    }\r\n\r\n    loadSeriesRecords = async() => {\r\n        const { page, perPage } = this.state;\r\n\r\n        const Url = this.state.baseUrl + '/'\r\n            + '?page=' + page\r\n            + '&per_page=' + perPage;\r\n\r\n        console.log(\"Series : \", Url);\r\n        try {\r\n           await http.get(Url, { responseType: 'json' }).then(response => {\r\n                this.setState({ data: response.data });\r\n                this.state.data['live_series'].map((item, i) => (\r\n                    console.log(\"From Loop : \", item)\r\n                ));\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error\", err);\r\n            window.location.href = '/404notfound';\r\n        };\r\n    }\r\n\r\n    //jwt-decode\r\n    //import jwtDecode from 'jwt-decode'\r\n    handleSumbit = async(e)=> {\r\n        e.preventDefault();\r\n        const {account} =  this.state;\r\n        try {\r\n              const {data: jwt} =  await authService.login(account.username);\r\n              console.log(jwt);\r\n              localStorage.setItem('token', jwt);\r\n              this.props.history.push('/');\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n\r\n        // try {\r\n        //     await userService.userAuthentication(this.state.account);\r\n        // } \r\n        // catch (ex) {\r\n        //     if (ex.response && ex.response.status === 400){\r\n        //       const errors = { ...this.state.errors };\r\n        //       errors.username =  ex.response.data;\r\n        //       this.setState({errors});\r\n        //     }\r\n        // }        \r\n        //console.log(\"Login : \", e.current);\r\n\r\n\r\n    }\r\n\r\n    handleChange = ({currentTarget: input}) => {\r\n        const account = {...this.state.account};\r\n        account[input.name] =  input.value;\r\n        this.setState({\r\n              account:account    \r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {account} =  this.state;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSumbit}>\r\n                    <Input name  = {account.name}\r\n                           id    = {account.name}  \r\n                           value = {account.name}\r\n                           label = \"Please Enter Your Number\"\r\n                           placeHolder = \"03xx xxxx xxx\" \r\n                           focus = {true}\r\n                    />        \r\n                    \r\n                    <button \r\n                           className=\"btn btn-primary mt-3\" \r\n                           type=\"submit\">Login\r\n                    </button>\r\n                </form>\r\n               \r\n                 <div>\r\n                         <img className=\"card-img-bottom\" \r\n                         src={require('../../assets/telcos/img-download.gif')} alt='NoImage'/>\r\n                 </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}