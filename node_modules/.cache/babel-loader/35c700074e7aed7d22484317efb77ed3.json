{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\common\\\\scheduleMatches.jsx\";\nimport React, { Component } from \"react\";\nimport Moment from \"moment\";\nimport \"../../assets/css/common/scheduledMatches.css\";\n\nvar ScheduleMatches =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScheduleMatches, _Component);\n\n  function ScheduleMatches(props) {\n    var _this;\n\n    _classCallCheck(this, ScheduleMatches);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScheduleMatches).call(this, props));\n\n    _this.headerTextMatchStatusClass = function (status) {\n      var isClass = status === \"Live\" ? \"sh-header-text-match-status-live\" : \"sh-header-text-match-status-normal\";\n      return isClass;\n    };\n\n    _this.renderUpcommingDate = function (match) {\n      var dateTimeString = \"\";\n\n      if (match.match_state === \"Scheduled\") {\n        dateTimeString = \" \" + Moment(new Date(match.match_start)).format(\"DD MMM, YYYY\");\n      } else {\n        dateTimeString = \"\";\n      }\n\n      return dateTimeString;\n    };\n\n    _this.renderUpcommingTime = function (match) {\n      var dateTimeString = \"\";\n\n      if (match.match_state === \"Scheduled\") {\n        dateTimeString = \" \" + Moment(new Date(match.match_start)).format(\"hh:mm a\");\n      } else {\n        dateTimeString = \"\";\n      }\n\n      return dateTimeString;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ScheduleMatches, [{\n    key: \"renderMatchTeamATag\",\n    value: function renderMatchTeamATag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703\n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs\n      var scoreString = \"\";\n      var teamA = match.team_1_id; //console.log( 'A ' ,teamA);\n      //console.log( 'Innings ' , match);\n\n      if (!match.innings) {\n        //console.log('Team=>(A) not yet Played...');\n        return \"\";\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamA;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === \"T20\" || match.format === \"ODI\") {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        } else {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        }\n\n        return \"scoreString\";\n      }); //console.log(scoreString);\n\n      return scoreString;\n    }\n  }, {\n    key: \"renderMatchTeamBTag\",\n    value: function renderMatchTeamBTag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703\n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs\n      var scoreString = \"\";\n      var teamB = match.team_2_id;\n\n      if (!match.innings) {\n        //console.log('Team=>(B) not yet Played...');\n        return \"\";\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamB;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === \"T20\" || match.format === \"ODI\") {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        } else {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        }\n\n        return \"scoreString\";\n      });\n      return scoreString;\n    } //This Method Change Color on the basic of Match Status if Live it will be red\n\n  }, {\n    key: \"renderMatchStatusAtHeader\",\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE.\n    value: function renderMatchStatusAtHeader(match) {\n      var tagText = \"\";\n\n      if (match.match_state === \"Scheduled\") {\n        tagText = \"Upcomming\";\n        return tagText;\n      }\n\n      if (match.break_type === \"\") {\n        tagText = match.match_state === 'Live' ? match.match_state : '';\n      } else {\n        tagText = match.break_type;\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match; // match_state: 'Over', detail: 'South Africa won by 6 wickets'\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"center-div\",\n        style: {\n          width: 100 + \"%\",\n          textAlign: 'left',\n          verticalAlign: 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"sh-header-text-match-status-live\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, match.match_state === 'Over' ? ' Result' : ''), React.createElement(\"h6\", {\n        className: this.headerTextMatchStatusClass(match.match_state),\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.renderMatchStatusAtHeader(match)), React.createElement(\"span\", {\n        className: \"sh-header-text-match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, match.title), \", \", React.createElement(\"span\", {\n        className: \"sh-header-text-match\",\n        style: {\n          color: \"Gray\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, match.venue.title), \" \", React.createElement(\"span\", {\n        className: \"sh-match-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.renderUpcommingDate(match)), match.match_state !== 'Over' && React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"sh-match-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.renderUpcommingTime(match)), match.match_state !== 'Over' && React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"left-div\",\n        className: \"flex-container\",\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: 50 + \"%\",\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"sh-header-flag-image\",\n        style: {\n          width: 60 + \"px\",\n          height: 60 + \"px\"\n        },\n        src: match.team_1.team.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), \" \", \"  \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        id: \"teamA-short-name\",\n        className: \"sh-header-text-teams-shortname\",\n        style: {\n          marginBottom: 0 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, match.team_1.team.name), React.createElement(\"h6\", {\n        className: \"sh-header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.renderMatchTeamATag(match))), React.createElement(\"div\", {\n        id: \"right-div\",\n        style: {\n          width: 50 + \"%\",\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"sh-header-flag-image\",\n        style: {\n          width: 60 + \"px\",\n          height: 60 + \"px\"\n        },\n        src: match.team_2.team.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        className: \"sh-header-text-teams-shortname\",\n        style: {\n          marginBottom: 0 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, match.team_2.team.name), React.createElement(\"h6\", {\n        className: \"sh-header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, this.renderMatchTeamBTag(match)))), React.createElement(\"h6\", {\n        className: \"sh-footer-text-center-match-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, match.match_state === \"Over\" ? match.match_result : \"\"));\n    }\n  }]);\n\n  return ScheduleMatches;\n}(Component);\n\nexport default ScheduleMatches;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\common\\scheduleMatches.jsx"],"names":["React","Component","Moment","ScheduleMatches","props","headerTextMatchStatusClass","status","isClass","renderUpcommingDate","match","dateTimeString","match_state","Date","match_start","format","renderUpcommingTime","state","scoreString","teamA","team_1_id","innings","maxInning","length","filter","x","batting_team_id","map","inning","inningCNT","runs","wickets","declared","innings_order","overs","teamB","team_2_id","tagText","break_type","width","textAlign","verticalAlign","float","renderMatchStatusAtHeader","title","color","venue","display","height","team_1","team","flag_url","marginBottom","name","renderMatchTeamATag","team_2","renderMatchTeamBTag","match_result"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Moment from \"moment\";\r\nimport \"../../assets/css/common/scheduledMatches.css\";\r\n\r\nclass ScheduleMatches extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderMatchTeamATag(match) {\r\n        // innings_order = 1, 2, 3, 4\r\n        // batting_team_id':  702,703\r\n        // fielding_team_id': 703,702\r\n        // inning.wickets, inning.run, inning.overs\r\n\r\n        let scoreString = \"\";\r\n        const teamA = match.team_1_id;\r\n\r\n        //console.log( 'A ' ,teamA);\r\n        //console.log( 'Innings ' , match);\r\n\r\n        if (!match.innings) {\r\n            //console.log('Team=>(A) not yet Played...');\r\n            return \"\";\r\n        }\r\n\r\n        const maxInning = match.innings.length;\r\n\r\n        const innings = match.innings.filter(x => x.batting_team_id === teamA);\r\n\r\n        innings.map((inning, inningCNT) => {\r\n            if (match.format === \"T20\" || match.format === \"ODI\") {\r\n                scoreString +=\r\n                    (inningCNT > 0 ? \" & \" : \"\") +\r\n                    inning.runs +\r\n                    (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n                    (inning.declared ? \"d\" : \"\") +\r\n                    (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n            } else {\r\n                scoreString +=\r\n                    (inningCNT > 0 ? \" & \" : \"\") +\r\n                    inning.runs +\r\n                    (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n                    (inning.declared ? \"d\" : \"\") +\r\n                    (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n            }\r\n\r\n            return \"scoreString\";\r\n        });\r\n\r\n        //console.log(scoreString);\r\n\r\n        return scoreString;\r\n    }\r\n\r\n    renderMatchTeamBTag(match) {\r\n        // innings_order = 1, 2, 3, 4\r\n        // batting_team_id':  702,703\r\n        // fielding_team_id': 703,702\r\n        // inning.wickets, inning.run, inning.overs\r\n\r\n        let scoreString = \"\";\r\n        const teamB = match.team_2_id;\r\n\r\n        if (!match.innings) {\r\n            //console.log('Team=>(B) not yet Played...');\r\n            return \"\";\r\n        }\r\n\r\n        const maxInning = match.innings.length;\r\n        const innings = match.innings.filter(x => x.batting_team_id === teamB);\r\n\r\n        innings.map((inning, inningCNT) => {\r\n            if (match.format === \"T20\" || match.format === \"ODI\") {\r\n                scoreString +=\r\n                    (inningCNT > 0 ? \" & \" : \"\") +\r\n                    inning.runs +\r\n                    (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n                    (inning.declared ? \"d\" : \"\") +\r\n                    (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n            } else {\r\n                scoreString +=\r\n                    (inningCNT > 0 ? \" & \" : \"\") +\r\n                    inning.runs +\r\n                    (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n                    (inning.declared ? \"d\" : \"\") +\r\n                    (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n            }\r\n\r\n            return \"scoreString\";\r\n        });\r\n\r\n        return scoreString;\r\n    }\r\n\r\n    //This Method Change Color on the basic of Match Status if Live it will be red\r\n    headerTextMatchStatusClass = status => {\r\n        const isClass =\r\n            status === \"Live\"\r\n                ? \"sh-header-text-match-status-live\"\r\n                : \"sh-header-text-match-status-normal\";\r\n        return isClass;\r\n    };\r\n\r\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE.\r\n    renderMatchStatusAtHeader(match) {\r\n        let tagText = \"\";\r\n\r\n        if (match.match_state === \"Scheduled\") {\r\n            tagText = \"Upcomming\";\r\n            return tagText;\r\n        }\r\n\r\n        if (match.break_type === \"\") {\r\n            tagText = (match.match_state === 'Live' ? match.match_state : '');\r\n        } else {\r\n            tagText = match.break_type;\r\n        }\r\n        return tagText;\r\n    }\r\n    //-------------------------------------------------------------------------------------------------\r\n\r\n    renderUpcommingDate = match => {\r\n        let dateTimeString = \"\";\r\n\r\n        if (match.match_state === \"Scheduled\") {\r\n            dateTimeString =\r\n                \" \" + Moment(new Date(match.match_start)).format(\"DD MMM, YYYY\");\r\n        } else {\r\n            dateTimeString = \"\";\r\n        }\r\n\r\n        return dateTimeString;\r\n    };\r\n\r\n    renderUpcommingTime = match => {\r\n        let dateTimeString = \"\";\r\n\r\n        if (match.match_state === \"Scheduled\") {\r\n            dateTimeString =\r\n                \" \" + Moment(new Date(match.match_start)).format(\"hh:mm a\");\r\n        } else {\r\n            dateTimeString = \"\";\r\n        }\r\n\r\n        return dateTimeString;\r\n    };\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n\r\n        // match_state: 'Over', detail: 'South Africa won by 6 wickets'\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"center-div\" style={{ width: 100 + \"%\", textAlign: 'left', verticalAlign: 'top' }}>\r\n\r\n                    {/* Show Result if Match Finished Display Result */}\r\n                    <h6 className='sh-header-text-match-status-live'>\r\n                        {match.match_state === 'Over' ? ' Result' : ''}\r\n                    </h6>\r\n\r\n                    {/* Following Code Render Live and Scheduled Matched */}\r\n                    {/* It Will Show Upcomming instead of Scheduled */}\r\n                    <h6 className={this.headerTextMatchStatusClass(match.match_state)} style={{ float: 'right' }}>\r\n                        {this.renderMatchStatusAtHeader(match)}\r\n                    </h6>\r\n\r\n                    <span className=\"sh-header-text-match\">\r\n                        {match.title}\r\n                    </span>\r\n                    {\", \"}\r\n                    <span className=\"sh-header-text-match\" style={{ color: \"Gray\" }}>\r\n                        {match.venue.title}\r\n                    </span>{\" \"}\r\n\r\n                    {/* Match Status/Result on the basic of match_state='Over' show Result Status */}\r\n\r\n                    <span className=\"sh-match-date\">\r\n                        {this.renderUpcommingDate(match)}\r\n                    </span>\r\n                    {match.match_state !== 'Over' && <br />}\r\n                    <span className=\"sh-match-time\">\r\n                        {this.renderUpcommingTime(match)}\r\n                    </span>\r\n                    {match.match_state !== 'Over' && <br />}\r\n\r\n                </div>\r\n\r\n                <div id=\"left-div\" className=\"flex-container\" style={{ display: \"flex\" }}>\r\n                    <div style={{ width: 50 + \"%\", textAlign: 'center' }}>\r\n\r\n                        {/* Following Code Render Flag of Team A */}\r\n                        <img className=\"sh-header-flag-image\" style={{ width: 60 + \"px\", height: 60 + \"px\" }}\r\n                            src={match.team_1.team.flag_url} alt=\"no Iamge\" />{\" \"}  <br />\r\n\r\n                        {/* Following Code Render Score team A */}\r\n                        <h6 id=\"teamA-short-name\" className=\"sh-header-text-teams-shortname\" style={{marginBottom:0+'px'}}>\r\n                            {match.team_1.team.name}\r\n                        </h6>\r\n                        <h6 className=\"sh-header-text-teama-score\">\r\n                            {this.renderMatchTeamATag(match)}\r\n                        </h6>\r\n\r\n                    </div>\r\n\r\n                    {/* Following DIVISION for team B */}\r\n\r\n                    <div id=\"right-div\" style={{ width: 50 + \"%\", textAlign: 'center' }}>\r\n                        {/* Following Code Render Flags of team B */}\r\n                        <img\r\n                            className=\"sh-header-flag-image\"\r\n                            style={{ width: 60 + \"px\", height: 60 + \"px\" }}\r\n                            src={match.team_2.team.flag_url}\r\n                            alt=\"no Iamge\"\r\n                        />\r\n                        <h6 className=\"sh-header-text-teams-shortname\" style={{marginBottom:0+'px'}}>\r\n                            {match.team_2.team.name}\r\n                        </h6>\r\n                        {/* Following Code Render Score team B */}\r\n                        <h6 className=\"sh-header-text-teama-score\">\r\n                            {this.renderMatchTeamBTag(match)}\r\n                        </h6>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Match Status/Result on the basic of match_state='Over' show Result Status */}\r\n                <h6 className=\"sh-footer-text-center-match-status\">\r\n                    {match.match_state === \"Over\" ? match.match_result : \"\"}\r\n                </h6>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScheduleMatches;\r\n"]},"metadata":{},"sourceType":"module"}