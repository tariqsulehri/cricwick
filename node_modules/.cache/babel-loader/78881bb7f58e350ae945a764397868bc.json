{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\videos\\\\allVideos.jsx\";\nimport React, { Component } from 'react';\nimport { getAllVideos } from '../../services/videoService'; //import http from '../../services/httpService';\n\nimport '../../assets/css/videos/videos.css'; //import CardImage from '../common/cardImage';\n\nvar AllVideos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllVideos, _Component);\n\n  function AllVideos(props) {\n    var _this;\n\n    _classCallCheck(this, AllVideos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllVideos).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadSeriesRecords();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, page, perPage, baseUrl, telco, Url, _ref3, _AllVideos;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, page = _this$state.page, perPage = _this$state.perPage, baseUrl = _this$state.baseUrl, telco = _this$state.telco; //https://back.cricwick.net/api/v1/user_api/get_new_series?page=1&per_page=5&telco=mobilink\n\n              Url = ''; // 1) All Videos :\n              //    Base URL =  https://back.cricwick.net/api/v1\n              //    Composed =  /user_api/get_new_series?page=1&per_page=5&telco=mobilink\n\n              Url = baseUrl + \"/user_api\" + \"/\" + \"get_new_series\" + \"?\" + \"page=\" + page + \"&\" + \"per_page=\" + perPage + \"&\" + telco;\n              _context2.prev = 3;\n              _context2.next = 6;\n              return getAllVideos();\n\n            case 6:\n              _ref3 = _context2.sent;\n              _AllVideos = _ref3.data;\n              console.log(_AllVideos);\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(\"HANLE CATCH BLOCK...\");\n              if (_context2.t0.response && _context2.t0.response.status === 400) alert(\"Bad Request......\", _context2.t0);else {}\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[3, 11]]);\n    }));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      selectedType: 'All_Videos',\n      baseUrl: 'https://back.cricwick.net/api/v1',\n      page: 1,\n      perPage: 5,\n      telco: 'telco=mobilink'\n    };\n    return _this;\n  }\n\n  _createClass(AllVideos, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          seriesData = _this$state2.seriesData; // if (error) {\n      //     return (<div> Error : {error.message}</div>);\n      // } else if (!isLoaded) {\n      //     return (<div> Loading Data.... </div>);\n      // } else {\n      //------------------------------------------------------------------- \n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Axios Checking\") // <div className='card p-2'>\n      //         {seriesData.series.map((series, i) => (\n      //             <div className='card-columns' key={series.id}>\n      //                 {series.videos.map((video, i) => (\n      //                     <div key={i}>\n      //                         <CardImage image={video.video.thumb} title={video.video.match_obj.title} detail={video.video.title}/>\n      //                     </div>\n      //                 ))}\n      //             </div>\n      //         ))}\n      // </div>\n      ;\n    }\n  }]);\n\n  return AllVideos;\n}(Component); //}\n\n\nexport default AllVideos;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\videos\\allVideos.jsx"],"names":["React","Component","getAllVideos","AllVideos","props","componentDidMount","loadSeriesRecords","state","page","perPage","baseUrl","telco","Url","data","console","log","response","status","alert","error","isLoaded","isLoading","hasMore","seriesData","selectedType"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,YAAR,QAA2B,6BAA3B,C,CACA;;AAEA,OAAO,oCAAP,C,CACA;;IAIMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AADe,UAiBnBC,iBAjBmB;AAAA;AAAA;AAAA;AAAA,6BAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACV,MAAKC,iBAAL,EADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBD;AAAA,UAqBnBA,iBArBmB;AAAA;AAAA;AAAA;AAAA,6BAqBC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC0B,MAAKC,KAD/B,EACRC,IADQ,eACRA,IADQ,EACFC,OADE,eACFA,OADE,EACOC,OADP,eACOA,OADP,EACgBC,KADhB,eACgBA,KADhB,EAEhB;;AAEIC,cAAAA,GAJY,GAIN,EAJM,EAKhB;AACA;AACA;;AAEAA,cAAAA,GAAG,GAAGF,OAAO,GAAG,WAAV,GACA,GADA,GAEA,gBAFA,GAGA,GAHA,GAIA,OAJA,GAKAF,IALA,GAMA,GANA,GAOA,WAPA,GAOcC,OAPd,GAQA,GARA,GAQME,KARZ;AATgB;AAAA;AAAA,qBAoBsBT,YAAY,EApBlC;;AAAA;AAAA;AAoBEC,cAAAA,UApBF,SAoBJU,IApBI;AAqBZC,cAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AArBY;AAAA;;AAAA;AAAA;AAAA;AAuBZW,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,kBAAI,aAAGC,QAAH,IAAe,aAAGA,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EACIC,KAAK,CAAC,mBAAD,eAAL,CADJ,KAEK,CACJ;;AA5BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBD;AAEf,UAAKX,KAAL,GAAa;AACTY,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,OAAO,EAAE,IAJA;AAKTC,MAAAA,UAAU,EAAE,EALH;AAMTC,MAAAA,YAAY,EAAE,YANL;AAOTd,MAAAA,OAAO,EAAE,kCAPA;AAQTF,MAAAA,IAAI,EAAE,CARG;AASTC,MAAAA,OAAO,EAAE,CATA;AAUTE,MAAAA,KAAK,EAAE;AAVE,KAAb;AAFe;AAelB;;;;6BAyDQ;AAAA,yBACmC,KAAKJ,KADxC;AAAA,UACGY,KADH,gBACGA,KADH;AAAA,UACUC,QADV,gBACUA,QADV;AAAA,UACoBG,UADpB,gBACoBA,UADpB,EAEL;AACA;AACA;AACA;AACA;AACA;;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAII;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdJ;AAgBH;;;;EAjGmBtB,S,GAmGxB;;;AAEA,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {getAllVideos} from '../../services/videoService';\r\n//import http from '../../services/httpService';\r\n\r\nimport '../../assets/css/videos/videos.css';\r\n//import CardImage from '../common/cardImage';\r\n\r\n\r\n\r\nclass AllVideos extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            selectedType: 'All_Videos',\r\n            baseUrl: 'https://back.cricwick.net/api/v1',\r\n            page: 1,\r\n            perPage: 5,\r\n            telco: 'telco=mobilink'\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { page, perPage, baseUrl, telco } = this.state;\r\n        //https://back.cricwick.net/api/v1/user_api/get_new_series?page=1&per_page=5&telco=mobilink\r\n\r\n        let Url = '';\r\n        // 1) All Videos :\r\n        //    Base URL =  https://back.cricwick.net/api/v1\r\n        //    Composed =  /user_api/get_new_series?page=1&per_page=5&telco=mobilink\r\n\r\n        Url = baseUrl + \"/user_api\"\r\n            + \"/\"\r\n            + \"get_new_series\"\r\n            + \"?\"\r\n            + \"page=\"\r\n            + page\r\n            + \"&\"\r\n            + \"per_page=\" + perPage\r\n            + \"&\" + telco\r\n\r\n        try {\r\n            const { data: AllVideos } = await getAllVideos();\r\n            console.log(AllVideos);\r\n        } catch (ex) {\r\n            console.log(\"HANLE CATCH BLOCK...\");\r\n\r\n            if (ex.response && ex.response.status === 400)\r\n                alert(\"Bad Request......\", ex);\r\n            else {\r\n            }\r\n        }\r\n\r\n        //  await request\r\n        //     .get(Url)\r\n        //     .set('Accept', 'application/json')\r\n        //     .then(res => {\r\n        //         this.setState({\r\n        //             isLoaded: true,\r\n        //             isLoading: false,\r\n        //             seriesData: res.body,\r\n        //             hasMore: (res.body.length < perPage)\r\n        //         });\r\n\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             isLoaded: false,\r\n        //             error\r\n        //         });\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, seriesData } = this.state;\r\n        // if (error) {\r\n        //     return (<div> Error : {error.message}</div>);\r\n        // } else if (!isLoaded) {\r\n        //     return (<div> Loading Data.... </div>);\r\n        // } else {\r\n        //------------------------------------------------------------------- \r\n        return (\r\n            <div>\r\n                Axios Checking\r\n                </div>\r\n            // <div className='card p-2'>\r\n            //         {seriesData.series.map((series, i) => (\r\n            //             <div className='card-columns' key={series.id}>\r\n            //                 {series.videos.map((video, i) => (\r\n            //                     <div key={i}>\r\n            //                         <CardImage image={video.video.thumb} title={video.video.match_obj.title} detail={video.video.title}/>\r\n            //                     </div>\r\n            //                 ))}\r\n            //             </div>\r\n            //         ))}\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n//}\r\n\r\nexport default AllVideos;\r\n\r\n"]},"metadata":{},"sourceType":"module"}