{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\home\\\\matchHeader.jsx\";\nimport React, { Component } from \"react\";\nimport Moment from 'moment';\nimport { Link } from 'react-router-dom'; //import HeaderLiveMatch from  './headerLiveMatch';\n\nimport '../../assets/css/home/matchHeader.css';\n\nvar MatchHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchHeader, _Component);\n\n  function MatchHeader(props) {\n    var _this;\n\n    _classCallCheck(this, MatchHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MatchHeader).call(this, props));\n\n    _this.headerTextMatchStatusClass = function (status) {\n      var isClass = status === 'Live' ? 'header-match-status-live' : 'header-match-status-normal-black';\n      return isClass;\n    };\n\n    _this.renderHeaderCardBody = function (match) {\n      return React.createElement(\"div\", {\n        className: \"card card-header-scroll p-1 \",\n        key: match.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-card-contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: _this.headerTextMatchStatusClass(match.match_state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, _this.renderMatchStatus(match)), React.createElement(\"span\", {\n        className: \"header-match-status-normal-black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, match.title, \", \", ' at '), React.createElement(\"span\", {\n        className: \"header-match-status-normal-gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, match.venue.title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, _this.renderUpcommingDate(match), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"header-flag\",\n        src: match.teamA.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, match.teamA.short_name), React.createElement(\"span\", {\n        className: \"header-teams-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, _this.renderMatchTeamATag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"header-flag\",\n        src: match.teamB.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, match.teamB.short_name), React.createElement(\"span\", {\n        className: \"header-teams-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, _this.renderMatchTeamBTag(match))));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      liveMatches: [],\n      selectedClassName: '',\n      isLastInning: ''\n    };\n    return _this;\n  }\n\n  _createClass(MatchHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://back.cricwick.net/api/v2/main/live_matches\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState(function () {\n          return {\n            isLoaded: true,\n            liveMatches: result\n          };\n        });\n      }, // Handling Erro\n      function (error) {\n        _this2.setState(function () {\n          return {\n            isLoaded: true,\n            error: error\n          };\n        });\n      });\n    }\n  }, {\n    key: \"renderMatchTeamATag\",\n    value: function renderMatchTeamATag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id\":  702,703 \n      // fielding_team_id\": 703,702\n      // inning.wickets, inning.run, inning.overs  \n      var scoreString = '';\n      var teamA = match.team_1_id; //console.log( \"A \" ,teamA);\n      //console.log( \"Innings \" , match);\n      // header-text-teama-score-active\n      // header-text-teama-score\n\n      if (!match.innings) {\n        //console.log(\"Team=>(A) not yet Played...\");\n        return '';\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamA;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === 'T20' || match.format === 'ODI') {\n          scoreString += (inningCNT > 0 ? \" & \" : '') + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '');\n        } else {\n          scoreString += (inningCNT > 0 ? \" & \" : '') + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '');\n        }\n\n        return '';\n      }); //console.log(scoreString); \n\n      return scoreString;\n    }\n  }, {\n    key: \"renderMatchTeamBTag\",\n    value: function renderMatchTeamBTag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id\":  702,703 \n      // fielding_team_id\": 703,702\n      // inning.wickets, inning.run, inning.overs  \n      var scoreString = '';\n      var teamB = match.team_2_id;\n\n      if (!match.innings) {\n        //console.log(\"Team=>(B) not yet Played...\");\n        return '';\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamB;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === 'T20' || match.format === 'ODI') {\n          scoreString += (inningCNT > 0 ? \" & \" : '') + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '');\n        } else {\n          scoreString += (inningCNT > 0 ? \" & \" : '') + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '');\n        }\n\n        return 'scoreString';\n      });\n      return scoreString;\n    } //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \n\n  }, {\n    key: \"renderMatchStatus\",\n    value: function renderMatchStatus(match) {\n      var tagText = '';\n\n      if (match.match_state === 'Scheduled') {\n        return tagText;\n      }\n\n      if (match.break_type === \"\") {\n        tagText = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, match.match_state, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }));\n      } else {\n        tagText = React.createElement(\"span\", {\n          style: {\n            padding: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, match.break_type, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }));\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \n\n  }, {\n    key: \"renderEmptyBreakForHeader\",\n    value: function renderEmptyBreakForHeader(match) {\n      var tagText = '';\n\n      if (match.match_state === 'Scheduled') {\n        tagText = React.createElement(\"span\", {\n          style: {\n            padding: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, '', \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }));\n        return tagText;\n      }\n    } //-------------------------------------------------------------------------------------------------\n    //This method COMPOSE DATE UPCOMING DATE depending upon match STATUS. \n\n  }, {\n    key: \"renderUpcommingDate\",\n    value: function renderUpcommingDate(match) {\n      var tagText = '';\n\n      if (match.match_state === 'Scheduled') {\n        tagText = React.createElement(\"span\", {\n          className: \"header-match-status-normal-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \" \", \" \", Moment(new Date(match.match_start)).format(\"DD MMM\"), \", \", Moment(new Date(match.match_start)).format(\"hh:mm a\"));\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          liveMatches = _this$state.liveMatches;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"scrolling-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, liveMatches.live_matches.map(function (match, i) {\n          return match.match_state !== 'Scheduled' ? React.createElement(Link, {\n            to: {\n              pathname: '/summary/',\n              state: {\n                match: match\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, _this3.renderHeaderCardBody(match)) : _this3.renderHeaderCardBody(match);\n        }));\n      }\n    }\n  }]);\n\n  return MatchHeader;\n}(Component);\n\nexport default MatchHeader;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\home\\matchHeader.jsx"],"names":["React","Component","Moment","Link","MatchHeader","props","headerTextMatchStatusClass","status","isClass","renderHeaderCardBody","match","id","match_state","renderMatchStatus","title","venue","renderUpcommingDate","teamA","flag_url","short_name","renderMatchTeamATag","teamB","renderMatchTeamBTag","state","error","isLoaded","liveMatches","selectedClassName","isLastInning","fetch","then","res","json","result","setState","scoreString","team_1_id","innings","maxInning","length","filter","x","batting_team_id","map","inning","inningCNT","format","runs","wickets","declared","innings_order","overs","team_2_id","tagText","break_type","padding","Date","match_start","message","live_matches","i","pathname"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,OAAO,uCAAP;;IAGMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAsCnBC,0BAtCmB,GAsCU,UAACC,MAAD,EAAY;AACrC,UAAMC,OAAO,GAAGD,MAAM,KAAK,MAAX,GAAoB,0BAApB,GAAiD,kCAAjE;AACA,aAAOC,OAAP;AACH,KAzCkB;;AAAA,UAoLnBC,oBApLmB,GAoLI,UAACC,KAAD,EAAW;AAE9B,aAEI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAA8C,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAM,QAAA,SAAS,EAAE,MAAKL,0BAAL,CAAgCI,KAAK,CAACE,WAAtC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAKC,iBAAL,CAAuBH,KAAvB,CADL,CAHJ,EAUI;AAAM,QAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMA,KAAK,CAACI,KADZ,QACqB,MADrB,CAVJ,EAcI;AAAM,QAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,KAAK,CAACK,KAAN,CAAYD,KADjB,CAdJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAKE,mBAAL,CAAyBN,KAAzB,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAlBJ,EA4BI;AAAK,QAAA,SAAS,EAAC,aAAf;AACI,QAAA,GAAG,EAAEA,KAAK,CAACO,KAAN,CAAYC,QADrB;AAC+B,QAAA,GAAG,EAAC,UADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BJ,EA8BI;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,KAAK,CAACO,KAAN,CAAYE,UADjB,CA9BJ,EAkCI;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAKC,mBAAL,CAAyBV,KAAzB,CADL,CAlCJ,EAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCJ,EAwCI;AAAK,QAAA,SAAS,EAAC,aAAf;AACI,QAAA,GAAG,EAAEA,KAAK,CAACW,KAAN,CAAYH,QADrB;AAC+B,QAAA,GAAG,EAAC,UADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxCJ,EA0CI;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,KAAK,CAACW,KAAN,CAAYF,UADjB,CA1CJ,EA+CI;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAKG,mBAAL,CAAyBZ,KAAzB,CADL,CA/CJ,CADJ,CAFJ;AAyDH,KA/OkB;;AAEf,UAAKa,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,iBAAiB,EAAE,EAJV;AAKTC,MAAAA,YAAY,EAAG;AALN,KAAb;AAFe;AASlB;;;;wCAEmB;AAAA;;AAEhBC,MAAAA,KAAK,CAAC,mDAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAGQ,UAACG,MAAD,EAAY;AACR,QAAA,MAAI,CAACC,QAAL,CAAc,YAAI;AACd,iBAAM;AACFT,YAAAA,QAAQ,EAAE,IADR;AAEFC,YAAAA,WAAW,EAAEO;AAFX,WAAN;AAIH,SALD;AAMH,OAVT,EAYQ;AACA,gBAACT,KAAD,EAAW;AACP,QAAA,MAAI,CAACU,QAAL,CAAc,YAAI;AACd,iBAAM;AACFT,YAAAA,QAAQ,EAAE,IADR;AAEFD,YAAAA,KAAK,EAALA;AAFE,WAAN;AAIH,SALD;AAMH,OApBT;AAsBH;;;wCAQmBd,K,EAAO;AAEvB;AACA;AACA;AACA;AAEA,UAAIyB,WAAW,GAAG,EAAlB;AACA,UAAMlB,KAAK,GAAGP,KAAK,CAAC0B,SAApB,CARuB,CAUvB;AACA;AACA;AACA;;AAEA,UAAI,CAAC1B,KAAK,CAAC2B,OAAX,EAAoB;AAChB;AACA,eAAO,EAAP;AACH;;AAED,UAAMC,SAAS,GAAG5B,KAAK,CAAC2B,OAAN,CAAcE,MAAhC;AAEA,UAAMF,OAAO,GAAG3B,KAAK,CAAC2B,OAAN,CAAcG,MAAd,CAAqB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,eAAF,KAAsBzB,KAA1B;AAAA,OAAtB,CAAhB;AAGAoB,MAAAA,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAASC,SAAT,EAAuB;AAE/B,YAAInC,KAAK,CAACoC,MAAN,KAAiB,KAAjB,IAA0BpC,KAAK,CAACoC,MAAN,KAAiB,KAA/C,EAAsD;AAElDX,UAAAA,WAAW,IAAI,CAACU,SAAS,GAAG,CAAZ,GAAgB,KAAhB,GAAwB,EAAzB,IACTD,MAAM,CAACG,IADE,IAERH,MAAM,CAACI,OAAP,GAAiB,EAAjB,GAAsB,MAAMJ,MAAM,CAACI,OAAnC,GAA6C,EAFrC,KAGRJ,MAAM,CAACK,QAAP,GAAkB,GAAlB,GAAwB,EAHhB,KAIRX,SAAS,KAAKM,MAAM,CAACM,aAArB,GAAqC,OAAON,MAAM,CAACO,KAAd,GAAsB,GAA3D,GAAiE,EAJzD,CAAf;AAMH,SARD,MAQO;AACHhB,UAAAA,WAAW,IAAI,CAACU,SAAS,GAAG,CAAZ,GAAgB,KAAhB,GAAwB,EAAzB,IACTD,MAAM,CAACG,IADE,IAERH,MAAM,CAACI,OAAP,GAAiB,EAAjB,GAAsB,MAAMJ,MAAM,CAACI,OAAnC,GAA6C,EAFrC,KAGRJ,MAAM,CAACK,QAAP,GAAkB,GAAlB,GAAwB,EAHhB,KAIRX,SAAS,KAAKM,MAAM,CAACM,aAArB,GAAqC,OAAON,MAAM,CAACO,KAAd,GAAsB,GAA3D,GAAiE,EAJzD,CAAf;AAKH;;AACD,eAAO,EAAP;AACH,OAlBD,EAzBuB,CA6CvB;;AACA,aAAQhB,WAAR;AACH;;;wCAEmBzB,K,EAAO;AACvB;AACA;AACA;AACA;AAEA,UAAIyB,WAAW,GAAG,EAAlB;AACA,UAAMd,KAAK,GAAGX,KAAK,CAAC0C,SAApB;;AAEA,UAAI,CAAC1C,KAAK,CAAC2B,OAAX,EAAoB;AAChB;AACA,eAAO,EAAP;AACH;;AAED,UAAMC,SAAS,GAAG5B,KAAK,CAAC2B,OAAN,CAAcE,MAAhC;AACA,UAAMF,OAAO,GAAG3B,KAAK,CAAC2B,OAAN,CAAcG,MAAd,CAAqB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,eAAF,KAAsBrB,KAA1B;AAAA,OAAtB,CAAhB;AAEAgB,MAAAA,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAASC,SAAT,EAAuB;AAE/B,YAAInC,KAAK,CAACoC,MAAN,KAAiB,KAAjB,IAA0BpC,KAAK,CAACoC,MAAN,KAAiB,KAA/C,EAAsD;AAElDX,UAAAA,WAAW,IAAI,CAACU,SAAS,GAAG,CAAZ,GAAgB,KAAhB,GAAwB,EAAzB,IACTD,MAAM,CAACG,IADE,IAERH,MAAM,CAACI,OAAP,GAAiB,EAAjB,GAAsB,MAAMJ,MAAM,CAACI,OAAnC,GAA6C,EAFrC,KAGRJ,MAAM,CAACK,QAAP,GAAkB,GAAlB,GAAwB,EAHhB,KAIRX,SAAS,KAAKM,MAAM,CAACM,aAArB,GAAqC,OAAON,MAAM,CAACO,KAAd,GAAsB,GAA3D,GAAiE,EAJzD,CAAf;AAMH,SARD,MAQO;AACHhB,UAAAA,WAAW,IAAI,CAACU,SAAS,GAAG,CAAZ,GAAgB,KAAhB,GAAwB,EAAzB,IACTD,MAAM,CAACG,IADE,IAERH,MAAM,CAACI,OAAP,GAAiB,EAAjB,GAAsB,MAAMJ,MAAM,CAACI,OAAnC,GAA6C,EAFrC,KAGRJ,MAAM,CAACK,QAAP,GAAkB,GAAlB,GAAwB,EAHhB,KAIRX,SAAS,KAAKM,MAAM,CAACM,aAArB,GAAqC,OAAON,MAAM,CAACO,KAAd,GAAsB,GAA3D,GAAiE,EAJzD,CAAf;AAKH;;AAED,eAAO,aAAP;AACH,OAnBD;AAqBA,aAAOhB,WAAP;AACH,K,CAED;;;;sCACkBzB,K,EAAO;AACrB,UAAI2C,OAAO,GAAG,EAAd;;AAEA,UAAI3C,KAAK,CAACE,WAAN,KAAsB,WAA1B,EAAuC;AACnC,eAAOyC,OAAP;AACH;;AAED,UAAI3C,KAAK,CAAC4C,UAAN,KAAqB,EAAzB,EAA6B;AACzBD,QAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL3C,KAAK,CAACE,WADD,OACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADd,CAAV;AAGH,OAJD,MAIO;AACHyC,QAAAA,OAAO,GAAG;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL7C,KAAK,CAAC4C,UADD,EACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ,CAAV;AAGH;;AACD,aAAOD,OAAP;AACH,K,CACD;AAEA;;;;8CAC0B3C,K,EAAO;AAC7B,UAAI2C,OAAO,GAAG,EAAd;;AACA,UAAI3C,KAAK,CAACE,WAAN,KAAsB,WAA1B,EAAuC;AACnCyC,QAAAA,OAAO,GAAG;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL,EADK,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC,CAAV;AAGA,eAAOF,OAAP;AACH;AACJ,K,CACD;AAEA;;;;wCACoB3C,K,EAAO;AACvB,UAAI2C,OAAO,GAAG,EAAd;;AACA,UAAI3C,KAAK,CAACE,WAAN,KAAsB,WAA1B,EAAuC;AACnCyC,QAAAA,OAAO,GAAG;AAAM,UAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL,GADK,OACCnD,MAAM,CAAC,IAAIsD,IAAJ,CAAS9C,KAAK,CAAC+C,WAAf,CAAD,CAAN,CAAoCX,MAApC,CAA2C,QAA3C,CADD,EAEL,IAFK,EAEC5C,MAAM,CAAC,IAAIsD,IAAJ,CAAS9C,KAAK,CAAC+C,WAAf,CAAD,CAAN,CAAoCX,MAApC,CAA2C,SAA3C,CAFD,CAAV;AAIH;;AACD,aAAOO,OAAP;AACH,K,CAED;;;;6BA+DS;AAAA;;AAAA,wBACoC,KAAK9B,KADzC;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,WADpB,eACoBA,WADpB;;AAGL,UAAIF,KAAJ,EAAW;AACP,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAeA,KAAK,CAACkC,OAArB,CAAR;AACH,OAFD,MAEO,IAAI,CAACjC,QAAL,EAAe;AAClB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AACH,OAFM,MAEA;AACH,eACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKC,WAAW,CAACiC,YAAZ,CAAyBhB,GAAzB,CAA6B,UAACjC,KAAD,EAAQkD,CAAR;AAAA,iBACtBlD,KAAK,CAACE,WAAN,KAAsB,WAAtB,GAEA,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEiD,cAAAA,QAAQ,EAAE,WAAZ;AAAyBtC,cAAAA,KAAK,EAAE;AAAEb,gBAAAA,KAAK,EAAEA;AAAT;AAAhC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,MAAI,CAACD,oBAAL,CAA0BC,KAA1B,CADL,CAFA,GAMA,MAAI,CAACD,oBAAL,CAA0BC,KAA1B,CAPsB;AAAA,SAA7B,CADL,CADJ;AAaH;AACJ;;;;EAzQqBT,S;;AA4Q1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n//import HeaderLiveMatch from  './headerLiveMatch';\r\nimport '../../assets/css/home/matchHeader.css';\r\n\r\n\r\nclass MatchHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            liveMatches: [],\r\n            selectedClassName: '',\r\n            isLastInning : '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch(\"http://back.cricwick.net/api/v2/main/live_matches\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(()=>{\r\n                        return{\r\n                            isLoaded: true,\r\n                            liveMatches: result\r\n                        }\r\n                    });\r\n                },\r\n\r\n                // Handling Erro\r\n                (error) => {\r\n                    this.setState(()=>{\r\n                        return{\r\n                            isLoaded: true,\r\n                            error\r\n                        }\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    headerTextMatchStatusClass = (status) => {\r\n        const isClass = status === 'Live' ? 'header-match-status-live' : 'header-match-status-normal-black';\r\n        return isClass;\r\n    }\r\n\r\n    renderMatchTeamATag(match) {\r\n\r\n        // innings_order = 1, 2, 3, 4\r\n        // batting_team_id\":  702,703 \r\n        // fielding_team_id\": 703,702\r\n        // inning.wickets, inning.run, inning.overs  \r\n\r\n        let scoreString = '';\r\n        const teamA = match.team_1_id;\r\n\r\n        //console.log( \"A \" ,teamA);\r\n        //console.log( \"Innings \" , match);\r\n        // header-text-teama-score-active\r\n        // header-text-teama-score\r\n\r\n        if (!match.innings) {\r\n            //console.log(\"Team=>(A) not yet Played...\");\r\n            return '';\r\n        }\r\n\r\n        const maxInning = match.innings.length;\r\n\r\n        const innings = match.innings.filter(x => x.batting_team_id === teamA)\r\n\r\n\r\n        innings.map((inning, inningCNT) => {\r\n\r\n            if (match.format === 'T20' || match.format === 'ODI') {\r\n\r\n                scoreString += (inningCNT > 0 ? \" & \" : '')\r\n                    + inning.runs\r\n                    + (inning.wickets < 10 ? \"/\" + inning.wickets : '')\r\n                    + (inning.declared ? 'd' : '')\r\n                    + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '')\r\n\r\n            } else {\r\n                scoreString += (inningCNT > 0 ? \" & \" : '')\r\n                    + inning.runs\r\n                    + (inning.wickets < 10 ? \"/\" + inning.wickets : '')\r\n                    + (inning.declared ? 'd' : '')\r\n                    + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '')\r\n            }\r\n            return '';\r\n        })\r\n\r\n        //console.log(scoreString); \r\n        return  scoreString;\r\n    }\r\n\r\n    renderMatchTeamBTag(match) {\r\n        // innings_order = 1, 2, 3, 4\r\n        // batting_team_id\":  702,703 \r\n        // fielding_team_id\": 703,702\r\n        // inning.wickets, inning.run, inning.overs  \r\n\r\n        let scoreString = '';\r\n        const teamB = match.team_2_id;\r\n\r\n        if (!match.innings) {\r\n            //console.log(\"Team=>(B) not yet Played...\");\r\n            return '';\r\n        }\r\n\r\n        const maxInning = match.innings.length;\r\n        const innings = match.innings.filter(x => x.batting_team_id === teamB)\r\n\r\n        innings.map((inning, inningCNT) => {\r\n                \r\n            if (match.format === 'T20' || match.format === 'ODI') {\r\n\r\n                scoreString += (inningCNT > 0 ? \" & \" : '')\r\n                    + inning.runs\r\n                    + (inning.wickets < 10 ? \"/\" + inning.wickets : '')\r\n                    + (inning.declared ? 'd' : '')\r\n                    + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '')\r\n\r\n            } else {\r\n                scoreString += (inningCNT > 0 ? \" & \" : '')\r\n                    + inning.runs\r\n                    + (inning.wickets < 10 ? \"/\" + inning.wickets : '')\r\n                    + (inning.declared ? 'd' : '')\r\n                    + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : '')\r\n            }\r\n\r\n            return 'scoreString';\r\n        })\r\n\r\n        return scoreString;\r\n    }\r\n\r\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \r\n    renderMatchStatus(match) {\r\n        let tagText = '';\r\n\r\n        if (match.match_state === 'Scheduled') {\r\n            return tagText;\r\n        }\r\n\r\n        if (match.break_type === \"\") {\r\n            tagText = <span>\r\n                {match.match_state} <br />\r\n            </span>\r\n        } else {\r\n            tagText = <span style={{ padding: 0 }}>\r\n                {match.break_type}<br />\r\n            </span>\r\n        }\r\n        return tagText;\r\n    }\r\n    //-------------------------------------------------------------------------------------------------\r\n\r\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \r\n    renderEmptyBreakForHeader(match) {\r\n        let tagText = '';\r\n        if (match.match_state === 'Scheduled') {\r\n            tagText = <span style={{ padding: 0 }}>\r\n                {''} <br/>\r\n            </span>\r\n            return tagText;\r\n        }\r\n    }\r\n    //-------------------------------------------------------------------------------------------------\r\n\r\n    //This method COMPOSE DATE UPCOMING DATE depending upon match STATUS. \r\n    renderUpcommingDate(match) {\r\n        let tagText = '';\r\n        if (match.match_state === 'Scheduled') {\r\n            tagText = <span className='header-match-status-normal-black'>\r\n                {\" \"} {Moment(new Date(match.match_start)).format(\"DD MMM\")}\r\n                {\", \"}{Moment(new Date(match.match_start)).format(\"hh:mm a\")}\r\n            </span>\r\n        }\r\n        return tagText;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------\r\n\r\n    renderHeaderCardBody = (match) => {\r\n\r\n        return (\r\n\r\n            <div className=\"card card-header-scroll p-1 \" key={match.id} >\r\n                <div className=\"header-card-contents\">\r\n                    {/* Following Code Render Live and Scheduled Matched */}\r\n                    {/* If Break Type is Empty Then It Will Show  Break Type Otherr Wise MATCH_STATUS */}\r\n                    <span className={this.headerTextMatchStatusClass(match.match_state)}>\r\n                        {this.renderMatchStatus(match)}\r\n                    </span>\r\n\r\n                    {/* Following Code Render Header text for Live-Matches */}\r\n                    {/* eg:  Title, Venue, Match Start Date */}\r\n                    \r\n                    <span className='header-match-status-normal-black'>\r\n                         {match.title}, {' at '} \r\n                    </span> \r\n  \r\n                    <span className='header-match-status-normal-gray'>\r\n                        {match.venue.title}\r\n                    </span>\r\n  \r\n                    <span>\r\n                        {this.renderUpcommingDate(match)}\r\n                        <br />\r\n                    </span>\r\n\r\n                    {/* <span>\r\n                        {this.renderEmptyBreakForHeader(match)}\r\n                    </span> */}\r\n\r\n                    {/* Following Code Render Flags or team A */}\r\n                    <img className='header-flag'\r\n                        src={match.teamA.flag_url} alt=\"no Iamge\" />\r\n                    <span className=\"header-teams-shortname\">\r\n                        {match.teamA.short_name}\r\n                    </span>\r\n\r\n                    <span className=\"header-teams-score\">\r\n                        {this.renderMatchTeamATag(match)}\r\n                    </span>\r\n                    <br />\r\n\r\n                    {/* Following Code Render Flags or team B */}\r\n                    <img className='header-flag'\r\n                        src={match.teamB.flag_url} alt=\"no Iamge\" />\r\n                    <span className=\"header-teams-shortname\">\r\n                        {match.teamB.short_name}\r\n                    </span>\r\n\r\n                    {/* Following Code Render Score team B */}\r\n                    <span className=\"header-teams-score\">\r\n                        {this.renderMatchTeamBTag(match)}\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, liveMatches } = this.state;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n            return (\r\n                <div className=\"scrolling-wrapper\">\r\n                    {liveMatches.live_matches.map((match, i) => (\r\n                            match.match_state !== 'Scheduled'\r\n                            ?\r\n                            <Link to={{ pathname: '/summary/', state: { match: match } }}>\r\n                                {this.renderHeaderCardBody(match)}\r\n                            </Link>\r\n                            :\r\n                            this.renderHeaderCardBody(match)\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MatchHeader;"]},"metadata":{},"sourceType":"module"}