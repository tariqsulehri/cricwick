{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\series\\\\series.jsx\";\nimport React, { Component } from 'react'; //import request                    from  'superagent';\n\nimport axios from 'axios';\n\nvar Series =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Series, _Component);\n\n  function Series(props) {\n    var _this;\n\n    _classCallCheck(this, Series);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Series).call(this));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, page, perPage, Url, resp;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, page = _this$state.page, perPage = _this$state.perPage;\n              Url = _this.state.baseUrl + '/' + '?page=' + page + '&per_page=' + perPage;\n              console.log(\"Series : \", Url);\n\n              try {\n                axios.get(Url).then(function (response) {\n                  resp = response.data;\n\n                  _this.setState({\n                    seriesData: resp\n                  });\n                });\n\n                _this.state.seriesData['live_series'].map(function (item, i) {\n                  return console.log(\"From Loop : \", item);\n                });\n              } catch (err) {\n                console.log(\"Error\", err);\n                window.location.href = '/404notfound';\n              }\n\n              ; // request\n              //     .get(Url)\n              //     .set('Accept','application/json')\n              //     .then(res => {\n              //         this.setState({\n              //             isLoaded: true,\n              //             isLoading: false,\n              //             seriesData: res.body,\n              //             hasMore: (res.length < perPage)\n              //         });\n              //     })\n              //     .catch(error => {\n              //         this.setState({\n              //             isLoaded: false,\n              //             error\n              //         });\n              //     });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      baseUrl: 'https://back.cricwick.net/api/v2/series',\n      page: 1,\n      perPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(Series, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var seriesData = this.state.seriesData; //console.log(seriesData);\n      // seriesData.live_series.map((item, i) => (\n      //     console.log(item)\n      // ));\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Series;\n}(Component);\n\nexport default Series;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\series\\series.jsx"],"names":["React","Component","axios","Series","props","loadSeriesRecords","state","page","perPage","Url","baseUrl","console","log","get","then","response","resp","data","setState","seriesData","map","item","i","err","window","location","href","error","isLoaded","isLoading","hasMore"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;AADe,UAmBnBC,iBAnBmB;AAAA;AAAA;AAAA;AAAA,6BAmBC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACU,MAAKC,KADf,EACRC,IADQ,eACRA,IADQ,EACFC,OADE,eACFA,OADE;AAGVC,cAAAA,GAHU,GAGJ,MAAKH,KAAL,CAAWI,OAAX,GAAqB,GAArB,GACN,QADM,GACKH,IADL,GAEN,YAFM,GAESC,OALL;AAOhBG,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,GAAzB;;AAEA,kBAAI;AAEAP,gBAAAA,KAAK,CAACW,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;AAC5BC,kBAAAA,IAAI,GAAGD,QAAQ,CAACE,IAAhB;;AACA,wBAAKC,QAAL,CAAc;AAAEC,oBAAAA,UAAU,EAAEH;AAAd,mBAAd;AACH,iBAHD;;AAKA,sBAAKV,KAAL,CAAWa,UAAX,CAAsB,aAAtB,EAAqCC,GAArC,CAAyC,UAACC,IAAD,EAAOC,CAAP;AAAA,yBACrCX,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BS,IAA5B,CADqC;AAAA,iBAAzC;AAIH,eAXD,CAYA,OAAOE,GAAP,EAAY;AACRZ,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,GAArB;AACAC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AACH;;AAAA,eAxBe,CA0BhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1CgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnBD;AAEf,UAAKpB,KAAL,GAAa;AACTqB,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,OAAO,EAAE,IAJA;AAKTX,MAAAA,UAAU,EAAE,EALH;AAMTT,MAAAA,OAAO,EAAE,yCANA;AAOTH,MAAAA,IAAI,EAAE,CAPG;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAFe;AAalB;;;;wCAEmB;AAChB,WAAKH,iBAAL;AACH;;;6BA+CQ;AAAA,UACGc,UADH,GACkB,KAAKb,KADvB,CACGa,UADH,EAGN;AAEC;AACA;AACA;;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH;;;;EAlFgBlB,S;;AAqFrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import request                    from  'superagent';\r\nimport axios from 'axios';\r\n\r\nclass Series extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            baseUrl: 'https://back.cricwick.net/api/v2/series',\r\n            page: 1,\r\n            perPage: 10,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { page, perPage } = this.state;\r\n\r\n        const Url = this.state.baseUrl + '/'\r\n            + '?page=' + page\r\n            + '&per_page=' + perPage;\r\n\r\n        console.log(\"Series : \", Url);\r\n       \r\n        try {\r\n            let resp;\r\n            axios.get(Url).then(response => {\r\n                resp = response.data;\r\n                this.setState({ seriesData: resp });\r\n            });\r\n            \r\n            this.state.seriesData['live_series'].map((item, i) => (\r\n                console.log(\"From Loop : \", item)\r\n            ));\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error\", err);\r\n            window.location.href = '/404notfound';\r\n        };\r\n\r\n        // request\r\n        //     .get(Url)\r\n        //     .set('Accept','application/json')\r\n        //     .then(res => {\r\n        //         this.setState({\r\n        //             isLoaded: true,\r\n        //             isLoading: false,\r\n        //             seriesData: res.body,\r\n        //             hasMore: (res.length < perPage)\r\n        //         });\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             isLoaded: false,\r\n        //             error\r\n        //         });\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        const { seriesData } = this.state;\r\n       \r\n       //console.log(seriesData);\r\n\r\n        // seriesData.live_series.map((item, i) => (\r\n        //     console.log(item)\r\n        // ));\r\n\r\n        return (\r\n            <div>\r\n                {/* {this.state.seriesData['live_series'].map((item,i)=>(\r\n                      console.log(\"From Loop : \", item)\r\n                 ))} */}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}