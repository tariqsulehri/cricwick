{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\videos\\\\allVideos.jsx\";\nimport React, { Component } from 'react';\nimport request from 'superagent';\nimport '../../assets/css/videos/videos.css';\nimport CardImage from '../common/cardImage';\n\nvar AllVideos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllVideos, _Component);\n\n  function AllVideos(props) {\n    var _this;\n\n    _classCallCheck(this, AllVideos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllVideos).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadSeriesRecords();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, page, perPage, baseUrl, telco, Url;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, page = _this$state.page, perPage = _this$state.perPage, baseUrl = _this$state.baseUrl, telco = _this$state.telco; //https://back.cricwick.net/api/v1/user_api/get_new_series?page=1&per_page=5&telco=mobilink\n\n              Url = ''; // 1) All Videos :\n              //    Base URL =  https://back.cricwick.net/api/v1\n              //    Composed =  /user_api/get_new_series?page=1&per_page=5&telco=mobilink\n\n              Url = baseUrl + \"/user_api\" + \"/\" + \"get_new_series\" + \"?\" + \"page=\" + page + \"&\" + \"per_page=\" + perPage + \"&\" + telco;\n              _context2.next = 5;\n              return request.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body,\n                  hasMore: res.length < perPage\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      selectedType: 'All_Videos',\n      baseUrl: 'https://back.cricwick.net/api/v1',\n      page: 1,\n      perPage: 5,\n      telco: 'telco=mobilink'\n    };\n    return _this;\n  }\n\n  _createClass(AllVideos, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          seriesData = _this$state2.seriesData;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        //------------------------------------------------------------------- \n        return React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, seriesData.series.map(function (series, i) {\n          return React.createElement(\"div\", {\n            key: series.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, series.videos.map(function (video, i) {\n            return React.createElement(\"div\", {\n              key: i,\n              className: \"card-columns\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            }, React.createElement(CardImage, {\n              image: video.video.thumb,\n              title: video.video.match_obj.title,\n              detail: video.video.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            }));\n          }));\n        }));\n      }\n    }\n  }]);\n\n  return AllVideos;\n}(Component);\n\nexport default AllVideos;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\videos\\allVideos.jsx"],"names":["React","Component","request","CardImage","AllVideos","props","componentDidMount","loadSeriesRecords","state","page","perPage","baseUrl","telco","Url","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","hasMore","length","catch","error","selectedType","message","series","map","i","id","videos","video","thumb","match_obj","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport request from 'superagent';\r\nimport '../../assets/css/videos/videos.css';\r\nimport CardImage from '../common/cardImage';\r\n\r\nclass AllVideos extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            selectedType: 'All_Videos',\r\n            baseUrl: 'https://back.cricwick.net/api/v1',\r\n            page: 1,\r\n            perPage: 5,\r\n            telco: 'telco=mobilink'\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { page, perPage, baseUrl, telco } = this.state;\r\n        //https://back.cricwick.net/api/v1/user_api/get_new_series?page=1&per_page=5&telco=mobilink\r\n\r\n        let Url = '';\r\n        // 1) All Videos :\r\n        //    Base URL =  https://back.cricwick.net/api/v1\r\n        //    Composed =  /user_api/get_new_series?page=1&per_page=5&telco=mobilink\r\n\r\n        Url = baseUrl + \"/user_api\"\r\n            + \"/\"\r\n            + \"get_new_series\"\r\n            + \"?\"\r\n            + \"page=\"\r\n            + page\r\n            + \"&\"\r\n            + \"per_page=\" + perPage\r\n            + \"&\" + telco\r\n\r\n        await request\r\n            .get(Url)\r\n            .set('Accept', 'application/json')\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    isLoading: false,\r\n                    seriesData: res.body,\r\n                    hasMore: (res.length < perPage)\r\n                })\r\n\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    error\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, seriesData} = this.state;\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n            //------------------------------------------------------------------- \r\n            return (\r\n                <div className='card'>\r\n                        {seriesData.series.map((series, i) => (\r\n                            <div key={series.id}>\r\n                                {series.videos.map((video, i) => (\r\n                                    <div key={i} className=\"card-columns\">\r\n                                        <CardImage image={video.video.thumb} title={video.video.match_obj.title} detail={video.video.title}/>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default AllVideos;\r\n\r\n"]},"metadata":{},"sourceType":"module"}