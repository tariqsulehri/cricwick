{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\common\\\\liveMatch.jsx\";\nimport React, { Component } from 'react';\nimport Moment from 'moment';\nimport '../../assets/css/home/homeCenterPanel.css';\n\nvar LiveMatch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LiveMatch, _Component);\n\n  function LiveMatch(props) {\n    var _this;\n\n    _classCallCheck(this, LiveMatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveMatch).call(this, props));\n\n    _this.headerTextMatchStatusClass = function (status) {\n      var isClass = status === 'Live' ? 'match-bigcard-status-live' : 'match-bigcard-status-normal';\n      return isClass;\n    };\n\n    _this.renderUpcommingDateTime = function (match) {\n      var dateTimeString = '';\n\n      if (match.match_state === 'Scheduled') {\n        dateTimeString = ' ' + Moment(new Date(match.match_start)).format('DD MMM') + ', ' + Moment(new Date(match.match_start)).format('hh:mm a');\n      } else {\n        dateTimeString = '';\n      }\n\n      return dateTimeString;\n    };\n\n    _this.renderMatchBody = function (match) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-text-match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, match.title, \", \", ' at '), React.createElement(\"span\", {\n        className: \"header-text-match\",\n        style: {\n          color: 'Gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, match.venue.title), React.createElement(\"span\", {\n        className: \"header-text-match-status-live\",\n        style: {\n          color: 'red',\n          fontSize: 12 + 'px',\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, match.match_state === 'Over' ? ' Result' : ' '), React.createElement(\"span\", {\n        className: _this.headerTextMatchStatusClass(match.match_state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, _this.renderMatchStatusAtHeader(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-match\",\n        style: {\n          color: 'Gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, Moment(new Date(match.match_start)).format('DD MMM, YYYY')), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 25 + 'px',\n          height: 25 + 'px'\n        },\n        src: match.teamA.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, match.teamA.short_name), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, _this.renderMatchTeamATag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 25 + 'px',\n          height: 25 + 'px'\n        },\n        src: match.teamB.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, match.teamB.short_name), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, _this.renderMatchTeamBTag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"footer-text-center-match-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, match.match_state === 'Over' ? match.match_result : ''), React.createElement(\"span\", {\n        className: \"footer-text-center-match-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, _this.renderUpcommingDateTime(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \" Day -\", \" \", match.day, \" \", \" , \", \" \", \"Session - \", \" \", match.session, \" \", \" \", match.match_status));\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(LiveMatch, [{\n    key: \"renderMatchTeamATag\",\n    value: function renderMatchTeamATag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703 \n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs  \n      var scoreString = '';\n      var teamA = match.team_1_id; //console.log( 'A ' ,teamA);\n      //console.log( 'Innings ' , match);\n\n      if (!match.innings) {\n        //console.log('Team=>(A) not yet Played...');\n        return '';\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamA;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === 'T20' || match.format === 'ODI') {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        } else {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        }\n\n        return 'scoreString';\n      }); //console.log(scoreString); \n\n      return scoreString;\n    }\n  }, {\n    key: \"renderMatchTeamBTag\",\n    value: function renderMatchTeamBTag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703 \n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs  \n      var scoreString = '';\n      var teamB = match.team_2_id;\n\n      if (!match.innings) {\n        //console.log('Team=>(B) not yet Played...');\n        return '';\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamB;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === 'T20' || match.format === 'ODI') {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        } else {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        }\n\n        return 'scoreString';\n      });\n      return scoreString;\n    } //This Method Change Color on the basic of Match Status if Live it will be red\n\n  }, {\n    key: \"renderMatchStatusAtHeader\",\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \n    value: function renderMatchStatusAtHeader(match) {\n      var tagText = '';\n\n      if (match.match_state === 'Scheduled') {\n        tagText = 'Upcomming';\n        return tagText;\n      }\n\n      if (match.break_type === '') {\n        tagText = match.match_state;\n      } else {\n        tagText = match.break_type;\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match; // match_state: 'Over', detail: 'South Africa won by 6 wickets'\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.renderMatchBody(match));\n    }\n  }]);\n\n  return LiveMatch;\n}(Component);\n\nexport default LiveMatch;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\common\\liveMatch.jsx"],"names":["React","Component","Moment","LiveMatch","props","headerTextMatchStatusClass","status","isClass","renderUpcommingDateTime","match","dateTimeString","match_state","Date","match_start","format","renderMatchBody","title","color","venue","fontSize","float","renderMatchStatusAtHeader","width","height","teamA","flag_url","short_name","renderMatchTeamATag","teamB","renderMatchTeamBTag","match_result","day","session","match_status","state","scoreString","team_1_id","innings","maxInning","length","filter","x","batting_team_id","map","inning","inningCNT","runs","wickets","declared","innings_order","overs","team_2_id","tagText","break_type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport '../../assets/css/home/homeCenterPanel.css';\r\n\r\nclass LiveMatch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    renderMatchTeamATag(match) {\r\n        // innings_order = 1, 2, 3, 4\r\n        // batting_team_id':  702,703 \r\n        // fielding_team_id': 703,702\r\n        // inning.wickets, inning.run, inning.overs  \r\n\r\n        let scoreString = '';\r\n        const teamA = match.team_1_id;\r\n        \r\n        //console.log( 'A ' ,teamA);\r\n        //console.log( 'Innings ' , match);\r\n\r\n        if(!match.innings){\r\n            //console.log('Team=>(A) not yet Played...');\r\n            return '';\r\n        }\r\n\r\n        const maxInning =  match.innings.length; \r\n\r\n        const innings =  match.innings.filter(x => x.batting_team_id === teamA)\r\n     \r\n     \r\n        innings.map((inning, inningCNT) => {\r\n\r\n            if (match.format === 'T20' || match.format === 'ODI') {\r\n               \r\n                scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                    + inning.runs  \r\n                    + (inning.wickets < 10 ?  '/' + inning.wickets : '')  \r\n                    + (inning.declared ? 'd' : '') \r\n                    + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n\r\n            } else {\r\n\r\n                scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                    + inning.runs \r\n                    + (inning.wickets < 10 ?  '/' + inning.wickets : '')  \r\n                    + (inning.declared ? 'd' : '') \r\n                    + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n            }\r\n\r\n            return 'scoreString';\r\n        })\r\n      \r\n        //console.log(scoreString); \r\n\r\n        return scoreString;\r\n    }\r\n\r\n    renderMatchTeamBTag(match) {\r\n       // innings_order = 1, 2, 3, 4\r\n        // batting_team_id':  702,703 \r\n        // fielding_team_id': 703,702\r\n        // inning.wickets, inning.run, inning.overs  \r\n\r\n        let scoreString = '';\r\n        const teamB = match.team_2_id;\r\n        \r\n        if(!match.innings){\r\n            //console.log('Team=>(B) not yet Played...');\r\n            return '';\r\n        }\r\n\r\n        const maxInning =  match.innings.length;\r\n        const innings =  match.innings.filter(x => x.batting_team_id === teamB) \r\n\r\n        innings.map((inning, inningCNT) => {\r\n\r\n            if (match.format === 'T20' || match.format === 'ODI') {\r\n               \r\n                scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                + inning.runs \r\n                + (inning.wickets < 10 ?  '/' + inning.wickets : '')  \r\n                + (inning.declared ? 'd' : '') \r\n                + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n\r\n            } else {\r\n                 scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                    + inning.runs\r\n                    + (inning.wickets < 10 ?  '/' + inning.wickets : '')    \r\n                    + (inning.declared ? 'd' : '') \r\n                    + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n            }\r\n\r\n            return 'scoreString';\r\n        })\r\n               \r\n        return scoreString;\r\n    }\r\n\r\n    //This Method Change Color on the basic of Match Status if Live it will be red\r\n    headerTextMatchStatusClass = (status) => {\r\n        const isClass = status === 'Live' ? 'match-bigcard-status-live' : 'match-bigcard-status-normal';\r\n        return isClass;\r\n    }\r\n\r\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \r\n    renderMatchStatusAtHeader(match) {\r\n        let tagText = '';\r\n\r\n        if (match.match_state === 'Scheduled') {\r\n            tagText = 'Upcomming'\r\n            return tagText;\r\n        }\r\n\r\n        if (match.break_type === '') {\r\n             tagText = match.match_state;\r\n        } else {\r\n             tagText = match.break_type\r\n        }\r\n        return tagText;\r\n    }\r\n    //-------------------------------------------------------------------------------------------------\r\n\r\n    renderUpcommingDateTime = (match ) => {\r\n       \r\n        let dateTimeString = '';\r\n        \r\n        if(match.match_state==='Scheduled'){\r\n            dateTimeString = ' ' +  Moment(new Date(match.match_start)).format('DD MMM')\r\n                          + ', ' +  Moment(new Date(match.match_start)).format('hh:mm a')\r\n        }else{\r\n            dateTimeString = '';\r\n        }\r\n        \r\n        return dateTimeString;\r\n    }\r\n\r\n    renderMatchBody = (match) => {\r\n\r\n        return (\r\n            <div>\r\n                {/* Following Code Render Header text for Live-Matches */}\r\n                {/* eg:  Title, Venue, Match Start Date */}\r\n                <span className='header-text-match'>\r\n                    {match.title}, {' at '}\r\n                </span>\r\n\r\n                <span className='header-text-match' style={{ color: 'Gray' }}>\r\n                    {match.venue.title}\r\n                </span>\r\n\r\n                {/* Show Result if Match Finished Display Result */}\r\n                <span className='header-text-match-status-live' style={{ color: 'red', fontSize: 12 + 'px', float: 'right' }}>\r\n                    {match.match_state === 'Over' ? ' Result' : ' '}\r\n                </span>\r\n\r\n                {/* Following Code Render Live and Scheduled Matched */}\r\n                {/* It Will Show Upcomming instead of Scheduled */}\r\n                <span className={this.headerTextMatchStatusClass(match.match_state)}>\r\n                    {this.renderMatchStatusAtHeader(match)}\r\n                </span>\r\n                <br />\r\n\r\n                <span className='header-text-match' style={{ color: 'Gray' }}>\r\n                       {Moment(new Date(match.match_start)).format('DD MMM, YYYY')}\r\n                </span> <br/> <br/>\r\n\r\n                {/* Following Code Render Flag of Team A */}\r\n                <img className='header-flag-image' style={{ width: 25 + 'px', height: 25 + 'px' }}\r\n                    src={match.teamA.flag_url} alt='no Iamge' />\r\n\r\n                <span className='header-text-teams-shortname'>\r\n                    {match.teamA.short_name}\r\n                </span>\r\n\r\n                {/* Following Code Render Score team A */}\r\n                <span className='header-text-teama-score'>\r\n                    {this.renderMatchTeamATag(match)}\r\n                </span>\r\n                <br />\r\n\r\n                {/* Following Code Render Flags of team B */}\r\n                <img className='header-flag-image' style={{ width: 25 + 'px', height: 25 + 'px' }}\r\n                    src={match.teamB.flag_url} alt='no Iamge' />\r\n                <span className='header-text-teams-shortname'>\r\n                    {match.teamB.short_name}\r\n                </span>\r\n\r\n                {/* Following Code Render Score team B */}\r\n                <span className='header-text-teama-score'>\r\n                    {this.renderMatchTeamBTag(match)}\r\n                </span>\r\n\r\n                <br />\r\n\r\n                {/* Match Status/Result on the basic of match_state='Over' show Result Status */}\r\n                <span className='footer-text-center-match-status'>\r\n                    {match.match_state === 'Over' ? match.match_result : ''}\r\n                </span>\r\n\r\n                {/* Match Status/Result on the basic of match_state='Over' show Result Status */}\r\n                <span className='footer-text-center-match-status'>\r\n                    {this.renderUpcommingDateTime(match)}\r\n                </span>\r\n\r\n                {/* Test Match Day's and Session's*/ }\r\n                <br/>\r\n                <div>\r\n                    { \" Day -\"} {match.day} { \" , \"} {\"Session - \" } {match.session}\r\n                    { \" \" } {match.match_status}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        // match_state: 'Over', detail: 'South Africa won by 6 wickets'\r\n\r\n        return (\r\n            <div>\r\n                {this.renderMatchBody(match)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LiveMatch;"]},"metadata":{},"sourceType":"module"}