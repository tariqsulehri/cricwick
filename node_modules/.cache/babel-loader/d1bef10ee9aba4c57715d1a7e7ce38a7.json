{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\leftPanel\\\\seriesSummary.jsx\";\nimport React, { Component } from \"react\";\nimport config from \"../../config.json\"; //import http from '../../services/httpService'\n\nimport http from \"superagent\";\nimport { Link } from 'react-router-dom';\nimport Articles from '../common/articles';\nimport LiveMatch from '../common/liveMatch';\nimport News from '../common/news';\nimport Tweets from '../common/tweets';\nimport Videos from '../common/videos';\nimport '../../assets/css/home/homeCenterPanel.css';\n\nvar SeriesSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SeriesSummary, _Component);\n\n  function SeriesSummary(props) {\n    var _this;\n\n    _classCallCheck(this, SeriesSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SeriesSummary).call(this, props));\n    _this._isMounted = false;\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //     this._isMounted = true;\n              //     const { viewable_type, viewable_id, page } = this.props;\n              //     this.setState({\n              //         viewable_id: viewable_id,\n              //         viewable_type: viewable_type,\n              //         page: page\n              //     });\n              console.log(\"Component Did Mount Called...\"); //     await this.getSeriesRecords();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.componentWillReceiveProps =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(nextProps) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log('component Will Recevie Props', nextProps.viewable_id, nextProps.viewable_type, nextProps.page);\n                _context2.next = 3;\n                return _this.setState({\n                  viewable_id: nextProps.viewable_id,\n                  viewable_type: nextProps.viewable_type\n                });\n\n              case 3:\n                _context2.next = 5;\n                return _this.getSeriesRecords();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.getSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$state, viewable_type, viewable_id, page, seriesData, Url;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // const { viewable_type, viewable_id, page } = this.props\n              _this$state = _this.state, viewable_type = _this$state.viewable_type, viewable_id = _this$state.viewable_id, page = _this$state.page, seriesData = _this$state.seriesData;\n              Url = config.apiEndPoint + '/v2/view_lists/get_list_items_from_viewable?viewable_type=' + viewable_type + '&viewable_id=' + viewable_id + '&page=' + page + '&telco=' + config.telco;\n              console.log(Url);\n              _context3.next = 5;\n              return http.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState({\n                  isLoading: false,\n                  isLoaded: true,\n                  seriesData: [].concat(_toConsumableArray(seriesData), _toConsumableArray(res.body))\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.state = {\n      seriesData: [],\n      isLoading: true,\n      isLoaded: false,\n      hasMore: true,\n      error: null,\n      viewable_type: _this.props.viewable_type,\n      viewable_id: _this.props.viewable_id,\n      page: 1\n    };\n    return _this;\n  } //  RECEVING PARAMETERS:-  \n  //  viewable_type : 'series',\n  //  viewable_id   : series.id,\n  //  page          : page,\n  //  telco         : telco\n  //   let Url = 'https://back.cricwick.net/api/v2/view_lists/get_list_items_from_viewable'\n  //   Url = Url + `?viewable_type=${series}`\n  //             + `&viewable_id=${seriesId}`\n  //             + `&page=${page}`\n  //             + `&telco=${telco}`\n\n\n  _createClass(SeriesSummary, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    //  https://back.cricwick.net/api/v2/view_lists/\n    //  get_list_items_from_viewable?viewable_type=series&\n    //  viewable_id=156&page=1&telco=mobilink\n    value: function render() {\n      var _this$state2 = this.state,\n          seriesData = _this$state2.seriesData,\n          error = _this$state2.error,\n          isLoading = _this$state2.isLoading;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \" Error : \", error.message, \" \");\n      } else if (isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \" Loading Data... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, seriesData.map(function (matches, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, matches.data.map(function (match, i) {\n            return React.createElement(\"div\", {\n              key: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, match.type === \"match_object\" && React.createElement(\"div\", {\n              className: \"card p-3 mb-1\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, match.data.match_state !== \"Scheduled\" ? React.createElement(Link, {\n              to: {\n                pathname: \"/summary/\",\n                state: {\n                  match: match.data\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, React.createElement(\"h6\", {\n              className: \"card-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138\n              },\n              __self: this\n            }, matches.title), React.createElement(LiveMatch, {\n              match: match.data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            })) : React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, React.createElement(\"h6\", {\n              className: \"card-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, \" \", matches.title, \" \"), React.createElement(LiveMatch, {\n              match: match.data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }))), match.type === \"videos\" && React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, React.createElement(Videos, {\n              match: match.data,\n              firstTitle: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            })), match.type === \"news\" && match.data.length !== 0 && React.createElement(\"div\", {\n              className: \"card p-3 mb-1\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, React.createElement(News, {\n              match: match.data.length !== 0 ? match.data : null,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            })), match.type === \"articles\" && React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 174\n              },\n              __self: this\n            }, React.createElement(Articles, {\n              match: match.data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175\n              },\n              __self: this\n            })), match.type === \"tweets\" && React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            }, React.createElement(Tweets, {\n              match: match.data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            })));\n          }));\n        }));\n      }\n    }\n  }]);\n\n  return SeriesSummary;\n}(Component);\n\nexport default SeriesSummary;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\leftPanel\\seriesSummary.jsx"],"names":["React","Component","config","http","Link","Articles","LiveMatch","News","Tweets","Videos","SeriesSummary","props","_isMounted","componentDidMount","console","log","componentWillReceiveProps","nextProps","viewable_id","viewable_type","page","setState","getSeriesRecords","state","seriesData","Url","apiEndPoint","telco","get","set","then","res","isLoading","isLoaded","body","catch","error","hasMore","message","map","matches","i","data","match","type","match_state","pathname","title","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport config from \"../../config.json\";\r\n//import http from '../../services/httpService'\r\nimport http from \"superagent\";\r\nimport { Link } from 'react-router-dom';\r\nimport Articles from '../common/articles';\r\nimport LiveMatch from '../common/liveMatch';\r\nimport News from '../common/news';\r\nimport Tweets from '../common/tweets';\r\nimport Videos from '../common/videos';\r\nimport '../../assets/css/home/homeCenterPanel.css';\r\n\r\nclass SeriesSummary extends Component {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            seriesData: [],\r\n            isLoading: true,\r\n            isLoaded: false,\r\n            hasMore: true,\r\n            error: null,\r\n            viewable_type: this.props.viewable_type,\r\n            viewable_id: this.props.viewable_id,\r\n            page: 1,\r\n        };\r\n    }\r\n\r\n    //  RECEVING PARAMETERS:-  \r\n    //  viewable_type : 'series',\r\n    //  viewable_id   : series.id,\r\n    //  page          : page,\r\n    //  telco         : telco\r\n\r\n    //   let Url = 'https://back.cricwick.net/api/v2/view_lists/get_list_items_from_viewable'\r\n    //   Url = Url + `?viewable_type=${series}`\r\n    //             + `&viewable_id=${seriesId}`\r\n    //             + `&page=${page}`\r\n    //             + `&telco=${telco}`\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n     componentDidMount = async () => {\r\n    //     this._isMounted = true;\r\n    //     const { viewable_type, viewable_id, page } = this.props;\r\n    //     this.setState({\r\n    //         viewable_id: viewable_id,\r\n    //         viewable_type: viewable_type,\r\n    //         page: page\r\n    //     });\r\n    \r\n          console.log(\"Component Did Mount Called...\")\r\n    //     await this.getSeriesRecords();\r\n     };\r\n    \r\n    componentWillReceiveProps = async (nextProps) =>{\r\n        \r\n        console.log('component Will Recevie Props', nextProps.viewable_id, nextProps.viewable_type, nextProps.page);        \r\n        \r\n        await this.setState({\r\n            viewable_id : nextProps.viewable_id,\r\n            viewable_type : nextProps.viewable_type,\r\n        });\r\n        \r\n        await this.getSeriesRecords();\r\n    }\r\n\r\n\r\n    getSeriesRecords = async () => {\r\n        // const { viewable_type, viewable_id, page } = this.props\r\n        const { viewable_type, viewable_id, page, seriesData } = this.state\r\n\r\n        const Url = config.apiEndPoint\r\n            + '/v2/view_lists/get_list_items_from_viewable?viewable_type='\r\n            + viewable_type\r\n            + '&viewable_id=' + viewable_id\r\n            + '&page=' + page\r\n            + '&telco=' + config.telco\r\n\r\n          console.log(Url);\r\n\r\n          await http\r\n            .get(Url)\r\n            .set('Accept', 'application/json')\r\n            .then(res => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        isLoaded: true,\r\n                        seriesData:[...seriesData, ...res.body],\r\n\r\n                    });\r\n\r\n            }).catch(error => {\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    error: error\r\n                });\r\n\r\n            })\r\n\r\n        }\r\n        \r\n        //  https://back.cricwick.net/api/v2/view_lists/\r\n        //  get_list_items_from_viewable?viewable_type=series&\r\n        //  viewable_id=156&page=1&telco=mobilink\r\n        \r\n        render() {\r\n            const { seriesData, error, isLoading } = this.state;\r\n           \r\n            if (error) {\r\n                return <div> Error : {error.message} </div>;\r\n            } else if (isLoading) {\r\n                return <div> Loading Data... </div>;\r\n            } else {\r\n                return <div>\r\n                    {seriesData.map((matches, i) => (\r\n                      <div key={i}>\r\n                        {/* <div className=\"card pt-2 pl-3 mb-1\">\r\n                        </div> */}\r\n\r\n                        {matches.data.map((match, i) => (\r\n                          <div key={i}>\r\n                            \r\n                            {match.type === \"match_object\" && (\r\n                              <div className=\"card p-3 mb-1\">\r\n                                {match.data.match_state !==\r\n                                \"Scheduled\" ? (\r\n                                  <Link to={{\r\n                                        pathname: \"/summary/\",\r\n                                        state: {\r\n                                            match: match.data\r\n                                         }\r\n                                   }}>\r\n                                            <h6 className=\"card-title\">{matches.title}</h6>\r\n                                            <LiveMatch match={match.data}/>\r\n                                  </Link>\r\n                                ) \r\n                                :(\r\n                                   <div> \r\n                                        <h6 className=\"card-title\"> {matches.title} </h6>\r\n                                         <LiveMatch match={match.data}/> \r\n                                    </div>\r\n                                )}\r\n                              </div>\r\n                            )}\r\n\r\n                            {match.type === \"videos\" && (\r\n                              <div>\r\n                                <Videos\r\n                                  match={match.data}\r\n                                  firstTitle={true}\r\n                                />\r\n                              </div>\r\n                            )}\r\n\r\n                            {match.type === \"news\" &&\r\n                              match.data.length !== 0 && (\r\n                                <div className=\"card p-3 mb-1\">\r\n                                  <News\r\n                                    match={\r\n                                      match.data.length !== 0\r\n                                        ? match.data\r\n                                        : null\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              )}\r\n\r\n                            {match.type === \"articles\" && (\r\n                              <div>\r\n                                <Articles match={match.data} />\r\n                              </div>\r\n                            )}\r\n\r\n                            {match.type === \"tweets\" && (\r\n                              <div>\r\n                                <Tweets match={match.data} />\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ))}\r\n                  </div>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default SeriesSummary;\r\n"]},"metadata":{},"sourceType":"module"}