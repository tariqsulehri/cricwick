{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\home\\\\homeRightVideoHeighLights.jsx\";\nimport React, { Component } from 'react';\n\nvar HomeRightVideoHeighLights =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomeRightVideoHeighLights, _Component);\n\n  function HomeRightVideoHeighLights(props) {\n    var _this;\n\n    _classCallCheck(this, HomeRightVideoHeighLights);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomeRightVideoHeighLights).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      videoHeighLights: []\n    };\n    return _this;\n  }\n\n  _createClass(HomeRightVideoHeighLights, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://back.cricwick.net/api/v1/user_api/home_videos?telco=mobilink\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          videoHeighLights: result\n        });\n      }, // Handling Erro\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          videoHeighLights = _this$state.videoHeighLights,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"card p-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"card-header p-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"VIDEO HIGHLIGHTS\"), videoHeighLights.timeline_videos.map(function (video, i) {\n          return React.createElement(\"div\", {\n            key: video.id,\n            className: \"card-body p-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-5 card-col-for-image\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"card-image-xs\",\n            src: video.thumb,\n            alr: \"Image not available\",\n            alt: \"NoIamge\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col-5 card-col-for-text-xs\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"home-right-panel-matchdesc-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, video.match_desc), \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }), video.title))));\n        }));\n      }\n    }\n  }]);\n\n  return HomeRightVideoHeighLights;\n}(Component);\n\nexport default HomeRightVideoHeighLights;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\home\\homeRightVideoHeighLights.jsx"],"names":["React","Component","HomeRightVideoHeighLights","props","state","error","isLoaded","videoHeighLights","fetch","then","res","json","result","setState","message","timeline_videos","map","video","i","id","thumb","match_desc","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,yB;;;;;AACF,qCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mGAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,gBAAgB,EAAE;AAHT,KAAb;AAFe;AAOlB;;;;wCAEmB;AAAA;;AAEhBC,MAAAA,KAAK,CAAC,sEAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAGQ,UAACG,MAAD,EAAY;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,gBAAgB,EAAEK;AAFR,SAAd;AAIH,OART,EAUQ;AACA,gBAACP,KAAD,EAAW;AACP,QAAA,MAAI,CAACQ,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAAE,IADA;AAEVD,UAAAA,KAAK,EAALA;AAFU,SAAd;AAIH,OAhBT;AAkBH;;;6BAEQ;AAAA,wBACyC,KAAKD,KAD9C;AAAA,UACGG,gBADH,eACGA,gBADH;AAAA,UACqBF,KADrB,eACqBA,KADrB;AAAA,UAC4BC,QAD5B,eAC4BA,QAD5B;;AAGL,UAAID,KAAJ,EAAW;AACP,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAeA,KAAK,CAACS,OAArB,CAAR;AACH,OAFD,MAEO,IAAI,CAACR,QAAL,EAAe;AAClB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AACH,OAFM,MAEA;AAEH,eACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEMC,gBAAgB,CAACQ,eAAjB,CAAiCC,GAAjC,CAAqC,UAACC,KAAD,EAAQC,CAAR;AAAA,iBAElC;AAAK,YAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAoB,YAAA,SAAS,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACQ;AAAK,YAAA,SAAS,EAAC,eAAf;AACI,YAAA,GAAG,EAAEF,KAAK,CAACG,KADf;AACsB,YAAA,GAAG,EAAC,qBAD1B;AACgD,YAAA,GAAG,EAAC,SADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,CAFJ,EAOI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACQ;AAAM,YAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKH,KAAK,CAACI,UADX,CADR,OAGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHhB,EAISJ,KAAK,CAACK,KAJf,CAPJ,CADJ,CAFJ,CAFkC;AAAA,SAArC,CAFN,CADJ;AA+BH;AACJ;;;;EAzEmCrB,S;;AA6ExC,eAAeC,yBAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass HomeRightVideoHeighLights extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            videoHeighLights: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch(\"https://back.cricwick.net/api/v1/user_api/home_videos?telco=mobilink\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        videoHeighLights: result\r\n                    });\r\n                },\r\n\r\n                // Handling Erro\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const { videoHeighLights, error, isLoaded } = this.state;\r\n        \r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"card p-0\">\r\n                    <h6 className=\"card-header p-2\">VIDEO HIGHLIGHTS</h6>\r\n                     {videoHeighLights.timeline_videos.map((video, i) => (\r\n                        \r\n                         <div key={video.id} className=\"card-body p-2\">\r\n                       \r\n                             <div className='container'>\r\n                                 <div className='row'>\r\n\r\n                                     <div className='col-5 card-col-for-image'>\r\n                                             <img className='card-image-xs'\r\n                                                 src={video.thumb} alr=\"Image not available\" alt='NoIamge' />\r\n                                     </div>\r\n\r\n                                     <div className='col-5 card-col-for-text-xs'>\r\n                                             <span className='home-right-panel-matchdesc-text'>\r\n                                                 {video.match_desc}\r\n                                             </span> <br />\r\n                                             {video.title}\r\n                                     </div>\r\n\r\n                                 </div>\r\n                             </div>\r\n\r\n\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default HomeRightVideoHeighLights;"]},"metadata":{},"sourceType":"module"}