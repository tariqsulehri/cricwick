{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\matchBallByBall.jsx\";\nimport React, { Component } from 'react';\nimport http from 'superagent';\nimport Match from 'mathjs';\nimport Loading from '../common/loading';\nimport '../../assets/css/summary/summary.css'; //https://back.cricwick.net/api/v3/innings/5087/get_previous_overs?over_number=42\n\nvar MatchBallByBall =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchBallByBall, _Component);\n\n  function MatchBallByBall(props) {\n    var _this;\n\n    _classCallCheck(this, MatchBallByBall);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MatchBallByBall).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, baseUrl, inning, overNumber, seriesData, pageSize, Url;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, baseUrl = _this$state.baseUrl, inning = _this$state.inning, overNumber = _this$state.overNumber, seriesData = _this$state.seriesData, pageSize = _this$state.pageSize; // const { match } = this.props;\n              // console.log(\"Match from Parent Object : \" , match);\n              // https://back.cricwick.net/api/v3/innings/5288/get_previous_overs?over_number=96\n              //Home Series Api  \n\n              Url = baseUrl + '/' + 'v3' + '/' + 'innings' + '/' + inning.id + '/' + 'get_previous_overs' + '?' + 'over_number=' + overNumber;\n              console.log(Url); //console.log(hasMore);\n\n              _context.next = 5;\n              return http.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: [].concat(_toConsumableArray(seriesData), _toConsumableArray(res.body.overs)),\n                  hasMore: res.body.length < pageSize\n                });\n\n                console.log(res.body.overs.length);\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.handleScroll =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var hasMore, elem, offset;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              hasMore = _this.state.hasMore;\n              console.log(_this.state.hasMore);\n\n              if (hasMore) {\n                _context2.next = 13;\n                break;\n              }\n\n              elem = document.getElementById('overs');\n              offset = elem.scrollLeft; // console.log(this.state.overNumber);\n\n              if (!(Match.ceil(offset) === 0)) {\n                _context2.next = 11;\n                break;\n              }\n\n              console.log('scrolling');\n              _context2.next = 9;\n              return _this.setState({\n                overNumber: _this.state.overNumber - _this.state.pageSize\n              });\n\n            case 9:\n              _context2.next = 11;\n              return _this.loadSeriesRecords();\n\n            case 11:\n              _context2.next = 14;\n              break;\n\n            case 13:\n              console.log(\"Further Scrolling Not Possible.....\");\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.renderOversDetail = function (overs) {\n      //https://back.cricwick.net/api/v3/innings/5068/get_previous_overs?over_number=1\n      //console.log(overs[0].overs);\n      // const _overs =  overs[0].overs;  \n      return overs.reverse().map(function (over, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"card card-for-scroll p-1\",\n          onClick: function onClick() {\n            return _this.handleClickOnOver(over);\n          },\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          className: \"uppercase\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \" \", over.title, \" \"), over.balls.map(function (ball, i) {\n          return React.createElement(\"span\", {\n            key: i,\n            className: \"badge badge-primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, ball.runs_scored);\n        }));\n      });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      tempData: [],\n      seriesData: [],\n      inning: _this.props.inning,\n      overNumber: _this.props.inning.overs + 1,\n      pageSize: 5,\n      baseUrl: 'https://back.cricwick.net/api'\n    };\n    return _this;\n  }\n\n  _createClass(MatchBallByBall, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords(); // this.state.seriesData['live_series'].map((item,i)=>(\n      //       console.log(item)\n      // ));\n      //console.log( \"From Component Did Mount : \" , this.state.seriesData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          seriesData = _this$state2.seriesData;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"overs\",\n          className: \"scrolling-wrapper mb-1\",\n          onScroll: this.handleScroll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, this.renderOversDetail(seriesData)));\n      }\n    }\n  }]);\n\n  return MatchBallByBall;\n}(Component);\n\nexport default MatchBallByBall;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\summary\\matchBallByBall.jsx"],"names":["React","Component","http","Match","Loading","MatchBallByBall","props","loadSeriesRecords","state","baseUrl","inning","overNumber","seriesData","pageSize","Url","id","console","log","get","set","then","res","setState","isLoaded","isLoading","body","overs","hasMore","length","catch","error","handleScroll","elem","document","getElementById","offset","scrollLeft","ceil","renderOversDetail","reverse","map","over","i","handleClickOnOver","cursor","title","balls","ball","runs_scored","tempData","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';   \r\nimport http from 'superagent';\r\nimport Match from 'mathjs';\r\nimport Loading from '../common/loading';\r\nimport '../../assets/css/summary/summary.css';\r\n\r\n//https://back.cricwick.net/api/v3/innings/5087/get_previous_overs?over_number=42\r\n\r\nclass MatchBallByBall  extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            tempData : [],\r\n            seriesData: [],\r\n            inning : this.props.inning,\r\n            overNumber: this.props.inning.overs+1, \r\n            pageSize : 5,\r\n            baseUrl: 'https://back.cricwick.net/api',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadSeriesRecords();\r\n        // this.state.seriesData['live_series'].map((item,i)=>(\r\n        //       console.log(item)\r\n        // ));\r\n        //console.log( \"From Component Did Mount : \" , this.state.seriesData);\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { baseUrl, inning,  overNumber, seriesData , pageSize  } = this.state;\r\n        // const { match } = this.props;\r\n\r\n        // console.log(\"Match from Parent Object : \" , match);\r\n        // https://back.cricwick.net/api/v3/innings/5288/get_previous_overs?over_number=96\r\n        //Home Series Api  \r\n\r\n        const Url = baseUrl + '/'\r\n            + 'v3'\r\n            + '/'\r\n            + 'innings'\r\n            + '/'\r\n            +  inning.id\r\n            + '/'\r\n            + 'get_previous_overs'\r\n            + '?'\r\n            + 'over_number=' + overNumber \r\n\r\n        console.log(Url);\r\n        //console.log(hasMore);\r\n         await http\r\n            .get(Url)\r\n            .set('Accept', 'application/json')\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded  : true,\r\n                    isLoading : false,\r\n                    seriesData: [ ...seriesData ,...res.body.overs],\r\n                    hasMore   : (res.body.length < pageSize )\r\n                });\r\n              console.log(res.body.overs.length);\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    error\r\n                });\r\n           });\r\n    }\r\n\r\n    // handleClickOnOver = (over) => {\r\n    //     this.setState({ over: over });\r\n    // }  \r\n\r\n    // selectedOverDetail = () => {\r\n    //     const {over} = this.state;\r\n\r\n    //     return (\r\n    //         <div className='card card-block p-4 mb-1'>\r\n    //             {over.balls.map((ball, i) => (\r\n    //               <div style={{width : 100 + \"%\"}}>   \r\n    //                 <div key={i}>\r\n    //                     <div style={{float:'left', width:20 + '%' , paddingBottom: 8 + 'px'}}>\r\n    //                         <span className='badge badge-primary'>\r\n    //                             {this.renderBallScore(ball)}\r\n    //                         </span> <br />\r\n    //                         <span className='commentry-text'>\r\n    //                             {ball.title}\r\n    //                         </span> <br />\r\n    //                     </div>\r\n\r\n    //                     <div style={{float:'right', width:80 + '%', paddingBottom: 8 + 'px'}} >\r\n    //                         <span className='commentry-text'> {ball.commentary} </span>\r\n    //                     </div>\r\n    //                 </div > \r\n                     \r\n    //                  <br/> \r\n    //                  <br/>\r\n    //                  <hr/>\r\n                         \r\n    //               </div>  \r\n    //             ))}\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    handleScroll = async () => {\r\n        const { hasMore } = this.state;\r\n        console.log(this.state.hasMore);\r\n        if (!hasMore) {\r\n            let elem = document.getElementById('overs');\r\n            var offset = elem.scrollLeft;\r\n\r\n            // console.log(this.state.overNumber);\r\n\r\n            if (Match.ceil(offset) === 0) {\r\n                console.log('scrolling')\r\n                await this.setState({ overNumber: (this.state.overNumber - this.state.pageSize) });\r\n                await this.loadSeriesRecords();\r\n            }\r\n        } else {\r\n            console.log(\"Further Scrolling Not Possible.....\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    renderOversDetail = (overs) => {\r\n        //https://back.cricwick.net/api/v3/innings/5068/get_previous_overs?over_number=1\r\n        //console.log(overs[0].overs);\r\n        // const _overs =  overs[0].overs;  \r\n\r\n        return (\r\n            overs.reverse().map((over, i) => (\r\n                <div key={i} className='card card-for-scroll p-1' onClick={() => this.handleClickOnOver(over)} style={{cursor:'pointer'}} >\r\n                    <div key={i} className='uppercase'> {over.title} </div>\r\n                     {over.balls.map((ball, i) => (\r\n                          <span key={i} className='badge badge-primary'> \r\n                                {ball.runs_scored}\r\n                         </span> \r\n                    ))}\r\n                </div>\r\n            ))\r\n        );   \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { error, isLoaded, seriesData } = this.state;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<Loading />);\r\n        } else {\r\n\r\n            return (\r\n                <div>\r\n                    <div id='overs' className='scrolling-wrapper mb-1' onScroll={this.handleScroll}>\r\n                         {this.renderOversDetail(seriesData)}\r\n                    </div>\r\n\r\n                    {/* <div>\r\n                        {overs && this.selectedOverDetail()}\r\n                    </div> */}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n \r\nexport default MatchBallByBall;"]},"metadata":{},"sourceType":"module"}