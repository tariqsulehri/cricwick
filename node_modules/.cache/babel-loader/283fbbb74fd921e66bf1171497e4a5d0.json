{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\scoreCard.jsx\";\nimport React, { Component } from 'react';\nimport http from 'superagent';\nimport '../../assets/css/summary/summary.css';\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard(props) {\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScoreCard).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var baseUrl, match, Url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              baseUrl = _this.state.baseUrl;\n              match = _this.props.match; // https://back.cricwick.net/api/2404\n\n              Url = baseUrl + '/' + match.id;\n              console.log(Url); //console.log(hasMore);\n\n              http.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.renderBattingScoreCard = function (innings) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, innings.map(function (inning, i) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, inning.batting_scorecard.map(function (score, i) {\n          return React.createElement(\"table\", {\n            className: \"table table-striped table-condensed table-hover table-borderless rank-table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"BATSMEN\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, \"R\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"B\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"4s\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"6s\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"SR\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"team-flag\",\n            src: score.player.display_picture_url,\n            alt: \"noImage\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }), score.player.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, score.player.runs_scored), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, score.player.balls_played), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, score.player.boundry_4s_scored), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, score.player.boundry_6s_scored), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, score.player.strike_rate))));\n        }));\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      over: null,\n      selectedType: 'summary',\n      baseUrl: 'https://back.cricwick.net/api'\n    };\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          seriesData = _this$state.seriesData;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, this.renderBattingScoreCard(seriesData.innings)));\n      }\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport default ScoreCard;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\summary\\scoreCard.jsx"],"names":["React","Component","http","ScoreCard","props","loadSeriesRecords","baseUrl","state","match","Url","id","console","log","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","catch","error","renderBattingScoreCard","innings","map","inning","i","batting_scorecard","score","player","display_picture_url","name","runs_scored","balls_played","boundry_4s_scored","boundry_6s_scored","strike_rate","hasMore","over","selectedType","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport http from 'superagent';\r\nimport '../../assets/css/summary/summary.css';\r\n\r\nclass ScoreCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            over: null,\r\n            selectedType: 'summary',\r\n            baseUrl: 'https://back.cricwick.net/api',\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n    }\r\n\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { baseUrl } = this.state;\r\n        const { match } = this.props;\r\n\r\n        // https://back.cricwick.net/api/2404\r\n\r\n        const Url = baseUrl + '/'\r\n            + match.id\r\n\r\n        console.log(Url);\r\n        //console.log(hasMore);\r\n\r\n        http\r\n            .get(Url)\r\n            .set('Accept', 'application/json')\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    isLoading: false,\r\n                    seriesData: res.body,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    error\r\n                });\r\n            });\r\n    }\r\n\r\n    renderBattingScoreCard = (innings) => (\r\n        <div>\r\n            {innings.map((inning, i) => (\r\n                <div>\r\n                    {inning.batting_scorecard.map((score, i) => (\r\n                        <table className='table table-striped table-condensed table-hover table-borderless rank-table'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>BATSMEN</th>\r\n                                    <th>R</th>\r\n                                    <th>B</th>\r\n                                    <th>4s</th>\r\n                                    <th>6s</th>\r\n                                    <th>SR</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {/* Batsmens */}\r\n                                <tr>\r\n                                    <td>\r\n                                        <img className='team-flag'\r\n                                            src={score.player.display_picture_url}\r\n                                            alt='noImage' />\r\n                                        {score.player.name}\r\n\r\n                                    </td>\r\n\r\n                                    <td>{score.player.runs_scored}</td>\r\n                                    <td>{score.player.balls_played}</td>\r\n                                    <td>{score.player.boundry_4s_scored}</td>\r\n                                    <td>{score.player.boundry_6s_scored}</td>\r\n                                    <td>{score.player.strike_rate}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    ))}\r\n\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        const { error, isLoaded, seriesData } = this.state;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        {this.renderBattingScoreCard(seriesData.innings)}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ScoreCard;"]},"metadata":{},"sourceType":"module"}