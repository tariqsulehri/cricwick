{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\ranking\\\\renderRanking.jsx\";\nimport React, { Component } from 'react';\nimport Loading from '../common/loading';\nimport http from 'superagent';\n\nvar RenderRanking =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RenderRanking, _Component);\n\n  function RenderRanking(props) {\n    var _this;\n\n    _classCallCheck(this, RenderRanking);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderRanking).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadSeriesRecords();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, selectedType, baseUrl, Url;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, selectedType = _this$state.selectedType, baseUrl = _this$state.baseUrl; // 1) All Videos :\n              //    Base URL =   https://back.cricwick.net/api \n              //    Composed =  /articles?page=1&page_size=6\n\n              Url = baseUrl + '/' + 'ranking' + '?' + 'type=' + selectedType;\n              console.log(Url);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return http.get(Url).then(function (res) {\n                _this.setState(function () {\n                  return {\n                    isLoaded: true,\n                    isLoading: false,\n                    seriesData: res.body,\n                    hasMore: true\n                  };\n                });\n              });\n\n            case 6:\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _this.setState(function () {\n                return {\n                  isLoaded: false,\n                  error: _context2.t0\n                };\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[3, 8]]);\n    }));\n\n    _this.renderTeamRanking = function (data) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped table-condensed table-hover table-borderless rank-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Rank\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Flag\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Team\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Matches\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Points\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Rating\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, data.map(function (ranker, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          style: {\n            alignItems: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ranking-team-flag\",\n          src: ranker.team_flag,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, ranker.team_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, ranker.match_count), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, ranker.points), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, ranker.rating));\n      }))));\n    };\n\n    _this.renderRanking = function (data) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped table-condensed table-hover table-borderless rank-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Rank\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Player\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Flag\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Team\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Rating\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, data.map(function (ranker, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            paddingLeft: 8 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, i + 1, \" \")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ranking-player-image\",\n          src: ranker.player_display_picture,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            paddingLeft: 4 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \" \", ranker.player_name, \" \")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ranking-team-flag\",\n          src: ranker.team_flag,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, ranker.team_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            paddingLeft: 8 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, ranker.rating)));\n      }))));\n    };\n\n    _this.state = {\n      selectedType: _this.props.selectedType,\n      baseUrl: 'https://back.cricwick.net/api',\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      page: 1,\n      perPage: 5\n    };\n    return _this;\n  }\n\n  _createClass(RenderRanking, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          seriesData = _this$state2.seriesData,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          selectedType = _this$state2.selectedType;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \" Error : \", error.response);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"home-ranking-main-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"ICC RANKING -\", React.createElement(\"span\", {\n          className: \"home-ranking-main-title-dynamic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, ' ', \" \", selectedType)), React.createElement(\"h6\", {\n          className: \"home-ranking-main-title-dynamic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"TEAMs\"), this.renderTeamRanking(seriesData.teams)), React.createElement(\"div\", {\n          className: \"card p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"home-ranking-main-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"home-ranking-main-title-dynamic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"BATSMEN\")), this.renderRanking(seriesData.batsmen)), React.createElement(\"div\", {\n          className: \"card p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"home-ranking-main-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"home-ranking-main-title-dynamic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"BOWLERs\")), this.renderRanking(seriesData.bowler)), React.createElement(\"div\", {\n          className: \"card p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"home-ranking-main-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"home-ranking-main-title-dynamic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"ALL ROUNDERs\")), this.renderRanking(seriesData.all_rounder)));\n      }\n    }\n  }]);\n\n  return RenderRanking;\n}(Component);\n\nexport default RenderRanking;","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\ranking\\renderRanking.jsx"],"names":["React","Component","Loading","http","RenderRanking","props","componentDidMount","loadSeriesRecords","state","selectedType","baseUrl","Url","console","log","get","then","res","setState","isLoaded","isLoading","seriesData","body","hasMore","error","renderTeamRanking","data","map","ranker","i","alignItems","team_flag","team_name","match_count","points","rating","renderRanking","paddingLeft","player_display_picture","player_name","page","perPage","response","teams","batsmen","bowler","all_rounder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Loading              from '../common/loading';\r\nimport http                 from 'superagent'; \r\n\r\nclass RenderRanking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n               selectedType : this.props.selectedType,\r\n               baseUrl : 'https://back.cricwick.net/api', \r\n               error: null,\r\n               isLoaded: false,\r\n               isLoading: false,\r\n               hasMore: true,\r\n               seriesData: [],\r\n               page: 1,\r\n               perPage: 5,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { selectedType, baseUrl } = this.state;\r\n\r\n        // 1) All Videos :\r\n        //    Base URL =   https://back.cricwick.net/api \r\n        //    Composed =  /articles?page=1&page_size=6\r\n\r\n        let Url = baseUrl\r\n            + '/'\r\n            + 'ranking'\r\n            + '?'\r\n            + 'type='\r\n            + selectedType\r\n\r\n        console.log(Url);\r\n\r\n        try {\r\n            await http\r\n                .get(Url)\r\n                .then(res => {\r\n                    this.setState(() => {\r\n                        return {\r\n                            isLoaded: true,\r\n                            isLoading: false,\r\n                            seriesData: res.body,\r\n                            hasMore: true\r\n                        }\r\n                    });\r\n                })\r\n        } catch (error) {\r\n            this.setState(() => {\r\n                return {\r\n                    isLoaded: false,\r\n                    error: error\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    renderTeamRanking = (data) => {\r\n        return (\r\n            <div>\r\n                <table className='table table-striped table-condensed table-hover table-borderless rank-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Flag</th>\r\n                            <th>Team</th>\r\n                            <th>Matches</th>\r\n                            <th>Points</th>\r\n                            <th>Rating</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((ranker, i) => (\r\n                            <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td style={{alignItems:'left'}}>\r\n                                    <img className='ranking-team-flag' src={ranker.team_flag} alt='noImage' />\r\n                                </td>\r\n                                <td>{ranker.team_name}</td>\r\n                                <td>{ranker.match_count}</td>\r\n                                <td>{ranker.points}</td>\r\n                                <td>{ranker.rating}</td>\r\n                            </tr>\r\n\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderRanking = (data) => {\r\n        return (\r\n            <div>\r\n                <table className='table table-striped table-condensed table-hover table-borderless rank-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Player</th>\r\n                            <th>Flag</th>\r\n                            <th>Team</th>\r\n                            <th>Rating</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((ranker, i) => (\r\n                            <tr key={i}>\r\n                                <td>\r\n                                <span style={{paddingLeft:8+\"px\"}}>{i + 1} </span>\r\n                                </td>\r\n                                <td>\r\n                                <img className='ranking-player-image' src={ranker.player_display_picture} alt='noImage' />\r\n                                 <span style={{paddingLeft:4+\"px\"}}> {ranker.player_name} </span>\r\n                                </td>\r\n                                <td>\r\n                                    <img className='ranking-team-flag' src={ranker.team_flag} alt='noImage' />\r\n                                </td>\r\n                                <td>{ranker.team_name}</td>\r\n                                <td><span style={{paddingLeft: 8 + \"px\"}}>{ranker.rating}</span></td>\r\n                            </tr>\r\n\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n\r\n        const { seriesData, error, isLoaded, selectedType} = this.state;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.response}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<Loading />);\r\n        } else {\r\n        return (\r\n            <div>\r\n                <div className=\"card p-3 mb-1\">\r\n                    <h6 className=\"home-ranking-main-title\">\r\n                        ICC RANKING -\r\n                            <span className='home-ranking-main-title-dynamic'>\r\n                            {' '} {selectedType}\r\n                        </span>\r\n                    </h6>\r\n                    <h6 className=\"home-ranking-main-title-dynamic\">TEAMs</h6>\r\n                    {this.renderTeamRanking(seriesData.teams)}\r\n                </div>\r\n\r\n                <div className=\"card p-3 mb-1\">\r\n                    <h6 className=\"home-ranking-main-title\">\r\n                        <span className='home-ranking-main-title-dynamic'>\r\n                            {\"BATSMEN\"}\r\n                        </span>\r\n                    </h6>\r\n                    {this.renderRanking(seriesData.batsmen)}\r\n                </div>\r\n\r\n                <div className=\"card p-3 mb-1\">\r\n                    <h6 className=\"home-ranking-main-title\">\r\n                        <span className='home-ranking-main-title-dynamic'>\r\n                            {\"BOWLERs\"}\r\n                        </span>\r\n                    </h6>\r\n                    {this.renderRanking(seriesData.bowler)}\r\n                </div>\r\n\r\n                <div className=\"card p-3 mb-1\">\r\n                    <h6 className=\"home-ranking-main-title\">\r\n                        <span className='home-ranking-main-title-dynamic'>\r\n                            {\"ALL ROUNDERs\"}\r\n                        </span>\r\n                    </h6>\r\n                    {this.renderRanking(seriesData.all_rounder)}\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n    }\r\n}\r\n\r\nexport default RenderRanking;"]},"metadata":{},"sourceType":"module"}