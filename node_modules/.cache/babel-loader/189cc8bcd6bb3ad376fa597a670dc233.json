{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\common\\\\liveMatch.jsx\";\nimport React, { Component } from 'react';\nimport Moment from 'moment';\nimport '../../assets/css/home/homeCenterPanel.css';\n\nvar LiveMatch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LiveMatch, _Component);\n\n  function LiveMatch(props) {\n    var _this;\n\n    _classCallCheck(this, LiveMatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveMatch).call(this, props));\n\n    _this.headerTextMatchStatusClass = function (status) {\n      var isClass = status === 'Live' ? 'header-text-match-status-live' : 'header-text-match-status-normal';\n      return isClass;\n    };\n\n    _this.renderUpcommingDateTime = function (match) {\n      var dateTimeString = '';\n\n      if (match.match_state === 'Scheduled') {\n        dateTimeString = ' ' + Moment(new Date(match.match_start)).format('DD MMM') + ', ' + Moment(new Date(match.match_start)).format('hh:mm a');\n      } else {\n        dateTimeString = '';\n      }\n\n      return dateTimeString;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(LiveMatch, [{\n    key: \"renderMatchTeamATag\",\n    value: function renderMatchTeamATag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703 \n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs  \n      var scoreString = '';\n      var teamA = match.team_1_id; //console.log( 'A ' ,teamA);\n      //console.log( 'Innings ' , match);\n\n      if (!match.innings) {\n        //console.log('Team=>(A) not yet Played...');\n        return '';\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamA;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === 'T20' || match.format === 'ODI') {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        } else {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        }\n\n        return 'scoreString';\n      }); //console.log(scoreString); \n\n      return scoreString;\n    }\n  }, {\n    key: \"renderMatchTeamBTag\",\n    value: function renderMatchTeamBTag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703 \n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs  \n      var scoreString = '';\n      var teamB = match.team_2_id;\n\n      if (!match.innings) {\n        //console.log('Team=>(B) not yet Played...');\n        return '';\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamB;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === 'T20' || match.format === 'ODI') {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        } else {\n          scoreString += (inningCNT > 0 ? ' & ' : '') + inning.runs + (inning.wickets < 10 ? '/' + inning.wickets : '') + (inning.declared ? 'd' : '') + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '');\n        }\n\n        return 'scoreString';\n      });\n      return scoreString;\n    } //This Method Change Color on the basic of Match Status if Live it will be red\n\n  }, {\n    key: \"renderMatchStatusAtHeader\",\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \n    value: function renderMatchStatusAtHeader(match) {\n      var tagText = '';\n\n      if (match.match_state === 'Scheduled') {\n        tagText = 'Upcomming';\n        return tagText;\n      }\n\n      if (match.break_type === '') {\n        tagText = match.match_state;\n      } else {\n        tagText = match.break_type;\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      console.log(match); // match_state: 'Over', detail: 'South Africa won by 6 wickets'\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-text-match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, match.title, \", \", ' at '), React.createElement(\"span\", {\n        className: \"header-text-match\",\n        style: {\n          color: 'Gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, match.venue.title), React.createElement(\"span\", {\n        className: \"header-text-match-status-live\",\n        style: {\n          color: 'red',\n          fontSize: 12 + 'px',\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, match.match_state === 'Over' ? ' Result' : ''), React.createElement(\"span\", {\n        className: this.headerTextMatchStatusClass(match.match_state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.renderMatchStatusAtHeader(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 25 + 'px',\n          height: 25 + 'px'\n        },\n        src: match.teamA.flag_file_name,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, match.teamA.short_name), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.renderMatchTeamATag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 25 + 'px',\n          height: 25 + 'px'\n        },\n        src: match.teamB.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, match.teamB.short_name), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.renderMatchTeamBTag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"footer-text-center-match-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, match.match_state === 'Over' ? match.match_result : ''), React.createElement(\"span\", {\n        className: \"footer-text-center-match-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.renderUpcommingDateTime(match)));\n    }\n  }]);\n\n  return LiveMatch;\n}(Component);\n\nexport default LiveMatch;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\common\\liveMatch.jsx"],"names":["React","Component","Moment","LiveMatch","props","headerTextMatchStatusClass","status","isClass","renderUpcommingDateTime","match","dateTimeString","match_state","Date","match_start","format","state","scoreString","teamA","team_1_id","innings","maxInning","length","filter","x","batting_team_id","map","inning","inningCNT","runs","wickets","declared","innings_order","overs","teamB","team_2_id","tagText","break_type","console","log","title","color","venue","fontSize","float","renderMatchStatusAtHeader","width","height","flag_file_name","short_name","renderMatchTeamATag","flag_url","renderMatchTeamBTag","match_result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport '../../assets/css/home/homeCenterPanel.css';\r\n\r\nclass LiveMatch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    renderMatchTeamATag(match) {\r\n        // innings_order = 1, 2, 3, 4\r\n        // batting_team_id':  702,703 \r\n        // fielding_team_id': 703,702\r\n        // inning.wickets, inning.run, inning.overs  \r\n\r\n        let scoreString = '';\r\n        const teamA = match.team_1_id;\r\n        \r\n        //console.log( 'A ' ,teamA);\r\n        //console.log( 'Innings ' , match);\r\n\r\n        if(!match.innings){\r\n            //console.log('Team=>(A) not yet Played...');\r\n            return '';\r\n        }\r\n\r\n        const maxInning =  match.innings.length; \r\n\r\n        const innings =  match.innings.filter(x => x.batting_team_id === teamA)\r\n     \r\n     \r\n        innings.map((inning, inningCNT) => {\r\n\r\n            if (match.format === 'T20' || match.format === 'ODI') {\r\n               \r\n                scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                    + inning.runs  \r\n                    + (inning.wickets < 10 ?  '/' + inning.wickets : '')  \r\n                    + (inning.declared ? 'd' : '') \r\n                    + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n\r\n            } else {\r\n\r\n                scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                    + inning.runs \r\n                    + (inning.wickets < 10 ?  '/' + inning.wickets : '')  \r\n                    + (inning.declared ? 'd' : '') \r\n                    + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n            }\r\n\r\n            return 'scoreString';\r\n        })\r\n      \r\n        //console.log(scoreString); \r\n\r\n        return scoreString;\r\n    }\r\n\r\n    renderMatchTeamBTag(match) {\r\n       // innings_order = 1, 2, 3, 4\r\n        // batting_team_id':  702,703 \r\n        // fielding_team_id': 703,702\r\n        // inning.wickets, inning.run, inning.overs  \r\n\r\n        let scoreString = '';\r\n        const teamB = match.team_2_id;\r\n        \r\n        if(!match.innings){\r\n            //console.log('Team=>(B) not yet Played...');\r\n            return '';\r\n        }\r\n\r\n        const maxInning =  match.innings.length;\r\n        const innings =  match.innings.filter(x => x.batting_team_id === teamB) \r\n\r\n        innings.map((inning, inningCNT) => {\r\n\r\n            if (match.format === 'T20' || match.format === 'ODI') {\r\n               \r\n                scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                + inning.runs \r\n                + (inning.wickets < 10 ?  '/' + inning.wickets : '')  \r\n                + (inning.declared ? 'd' : '') \r\n                + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n\r\n            } else {\r\n                 scoreString += (inningCNT > 0 ? ' & ' : '')\r\n                    + inning.runs\r\n                    + (inning.wickets < 10 ?  '/' + inning.wickets : '')    \r\n                    + (inning.declared ? 'd' : '') \r\n                    + (maxInning === inning.innings_order ? ' (' + inning.overs + ')' : '')\r\n            }\r\n\r\n            return 'scoreString';\r\n        })\r\n               \r\n        return scoreString;\r\n    }\r\n\r\n    //This Method Change Color on the basic of Match Status if Live it will be red\r\n    headerTextMatchStatusClass = (status) => {\r\n        const isClass = status === 'Live' ? 'header-text-match-status-live' : 'header-text-match-status-normal';\r\n        return isClass;\r\n    }\r\n\r\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE. \r\n    renderMatchStatusAtHeader(match) {\r\n        let tagText = '';\r\n\r\n        if (match.match_state === 'Scheduled') {\r\n            tagText = 'Upcomming'\r\n            return tagText;\r\n        }\r\n\r\n        if (match.break_type === '') {\r\n             tagText = match.match_state;\r\n        } else {\r\n             tagText = match.break_type\r\n        }\r\n        return tagText;\r\n    }\r\n    //-------------------------------------------------------------------------------------------------\r\n\r\n    renderUpcommingDateTime = (match ) => {\r\n       \r\n        let dateTimeString = '';\r\n        \r\n        if(match.match_state==='Scheduled'){\r\n            dateTimeString = ' ' +  Moment(new Date(match.match_start)).format('DD MMM')\r\n                          + ', ' +  Moment(new Date(match.match_start)).format('hh:mm a')\r\n        }else{\r\n            dateTimeString = '';\r\n        }\r\n        \r\n        return dateTimeString;\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n\r\n        console.log(match);\r\n        // match_state: 'Over', detail: 'South Africa won by 6 wickets'\r\n\r\n        return (\r\n            <div>\r\n                {/* Following Code Render Header text for Live-Matches */}\r\n                {/* eg:  Title, Venue, Match Start Date */}\r\n                <span className='header-text-match'>\r\n                    {match.title}, {' at '}  \r\n                </span>\r\n                \r\n                <span className='header-text-match' style={{ color: 'Gray' }}>\r\n                     {match.venue.title}\r\n                </span>\r\n\r\n                 {/* Show Result if Match Finished Display Result */} \r\n                 <span className='header-text-match-status-live' style={{ color: 'red', fontSize:12+'px', float:'right'  }}>\r\n                     {match.match_state==='Over' ? ' Result' : ''}\r\n                 </span> \r\n                   \r\n                {/* Following Code Render Live and Scheduled Matched */}\r\n                {/* It Will Show Upcomming instead of Scheduled */}\r\n                <span className={this.headerTextMatchStatusClass(match.match_state)}>\r\n                    {this.renderMatchStatusAtHeader(match)}\r\n                </span>  \r\n                <br/>\r\n\r\n                {/* Following Code Render Flag of Team A */}\r\n                <img className='header-flag-image' style={{ width: 25 + 'px', height: 25 + 'px' }}\r\n                    src={match.teamA.flag_file_name} alt='no Iamge' />\r\n\r\n                <span className='header-text-teams-shortname'>\r\n                    {match.teamA.short_name}\r\n                </span>\r\n\r\n                {/* Following Code Render Score team A */}\r\n                <span className='header-text-teama-score'>\r\n                    {this.renderMatchTeamATag(match)}\r\n                </span>\r\n                <br />\r\n\r\n                {/* Following Code Render Flags of team B */}\r\n                <img className='header-flag-image' style={{ width: 25 + 'px', height: 25 + 'px' }}\r\n                    src={match.teamB.flag_url} alt='no Iamge' />\r\n                <span className='header-text-teams-shortname'>\r\n                    {match.teamB.short_name}\r\n                </span>\r\n\r\n                {/* Following Code Render Score team B */}\r\n                <span className='header-text-teama-score'>\r\n                    {this.renderMatchTeamBTag(match)}\r\n                </span>\r\n\r\n                <br/>\r\n               \r\n                {/* Match Status/Result on the basic of match_state='Over' show Result Status */} \r\n                <span className='footer-text-center-match-status'>\r\n                   {match.match_state==='Over' ? match.match_result : ''} \r\n                </span>\r\n               \r\n                {/* Match Status/Result on the basic of match_state='Over' show Result Status */}         \r\n                <span className='footer-text-center-match-status'> \r\n                      {this.renderUpcommingDateTime(match)}\r\n                </span>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LiveMatch;"]},"metadata":{},"sourceType":"module"}