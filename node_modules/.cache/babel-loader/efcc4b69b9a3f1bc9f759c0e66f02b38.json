{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\matchSquads.jsx\";\nimport React, { Component } from 'react';\nimport http from 'superagent';\nimport { NavLink } from 'react-router-dom';\n\nvar MatchSquads =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchSquads, _Component);\n\n  function MatchSquads(props) {\n    var _this;\n\n    _classCallCheck(this, MatchSquads);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MatchSquads).call(this, props));\n\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(team_id, match_id) {\n        var baseUrl, Url;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                baseUrl = _this.state.baseUrl; // console.log(\"Match from Parent Object : \" , match);\n                // https://back.cricwick.net/api/1107/2409/squad\n                //Home Series Api  \n\n                Url = baseUrl + '/' + '/' + team_id + '/' + match_id + '/' + 'squad';\n                console.log(Url);\n                http.get(Url).set('Accept', 'application/json').then(function (res) {\n                  _this.setState({\n                    isLoaded: true,\n                    isLoading: false,\n                    seriesData: res.body\n                  });\n                }).catch(function (error) {\n                  _this.setState({\n                    isLoaded: false,\n                    error: error\n                  });\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleClick = function (team_id, match_id) {\n      _this.setState({\n        team_id: team_id,\n        match_id: match_id\n      });\n\n      _this.loadSeriesRecords(team_id, match_id);\n    };\n\n    _this.renderSquad = function (ObjectSelectedSquad) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, ObjectSelectedSquad.map(function (player, i) {\n        return console.log(player);\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      team_id: '',\n      match_id: '',\n      hasMore: true,\n      seriesData: [],\n      over: null,\n      selectedType: 'summary',\n      baseUrl: 'https://back.cricwick.net/api'\n    };\n    return _this;\n  }\n\n  _createClass(MatchSquads, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var match = this.props.match;\n      var _this$props = this.props,\n          team_id = _this$props.team_id,\n          match_id = _this$props.match_id;\n      this.setState({\n        team_id: match.team_1_id,\n        match_id: match.id\n      });\n      this.loadSeriesRecords(team_id, match_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(match.id);\n      // console.log(match.team_1_id,match.teamA.name);\n      // console.log(match.team_2_id, match.teamB.name);\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          seriesData = _this$state.seriesData;\n      var match = this.props.match;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-block mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn link-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick(match.team_1_id, match.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, match.teamA.name), React.createElement(\"button\", {\n          className: \"btn link-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick(match.team_2_id, match.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, match.teamB.name))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.renderSquad(seriesData)));\n      }\n    }\n  }]);\n\n  return MatchSquads;\n}(Component);\n\nexport default MatchSquads;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\summary\\matchSquads.jsx"],"names":["React","Component","http","NavLink","MatchSquads","props","loadSeriesRecords","team_id","match_id","baseUrl","state","Url","console","log","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","catch","error","handleClick","renderSquad","ObjectSelectedSquad","map","player","i","hasMore","over","selectedType","match","team_1_id","id","message","teamA","name","team_2_id","teamB"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport http from 'superagent';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass MatchSquads extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            team_id : '',\r\n            match_id:'',\r\n            hasMore: true,\r\n            seriesData: [],\r\n            over: null,\r\n            selectedType: 'summary',\r\n            baseUrl: 'https://back.cricwick.net/api',\r\n        };\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        const {team_id, match_id} =  this.props;\r\n       \r\n        this.setState({ team_id: match.team_1_id, match_id: match.id })\r\n        this.loadSeriesRecords(team_id, match_id);\r\n    }\r\n\r\n    loadSeriesRecords = async (team_id, match_id) => {\r\n        const { baseUrl } = this.state;\r\n\r\n\r\n        // console.log(\"Match from Parent Object : \" , match);\r\n        // https://back.cricwick.net/api/1107/2409/squad\r\n        //Home Series Api  \r\n\r\n        const Url = baseUrl + '/'\r\n            + '/'\r\n            + team_id\r\n            + '/'\r\n            + match_id\r\n            + '/'\r\n            + 'squad'\r\n\r\n        console.log(Url);\r\n\r\n        http\r\n            .get(Url)\r\n            .set('Accept', 'application/json')\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    isLoading: false,\r\n                    seriesData: res.body,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    error\r\n                });\r\n            });\r\n    }\r\n\r\n    handleClick = (team_id, match_id) => {\r\n          this.setState({ team_id: team_id, match_id: match_id });\r\n          this.loadSeriesRecords(team_id, match_id);\r\n    }\r\n\r\n   \r\n    renderSquad = (ObjectSelectedSquad) => (\r\n        <div>\r\n          {ObjectSelectedSquad.map((player, i)=>(\r\n               console.log(player)\r\n          ))}\r\n        </div>\r\n    )\r\n\r\n\r\n    render() {\r\n        // console.log(match.id);\r\n        // console.log(match.team_1_id,match.teamA.name);\r\n        // console.log(match.team_2_id, match.teamB.name);\r\n        const { error, isLoaded, seriesData} = this.state;\r\n        const {match} = this.props;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n            return (\r\n                <div>\r\n                   <div className='card card-block mb-1'>\r\n                        <span>\r\n                            <button className='btn link-button btn-link mr-2 btn-sm' onClick={() => this.handleClick(match.team_1_id, match.id)} >{match.teamA.name}</button>\r\n                            <button className='btn link-button btn-link mr-2 btn-sm' onClick={() => this.handleClick(match.team_2_id, match.id)}>{match.teamB.name}</button>\r\n                        </span>\r\n                     \r\n                    </div>\r\n\r\n                    <div>\r\n                        {this.renderSquad(seriesData)}\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MatchSquads;"]},"metadata":{},"sourceType":"module"}