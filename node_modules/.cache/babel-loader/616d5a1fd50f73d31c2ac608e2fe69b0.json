{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\series\\\\series.jsx\";\nimport React, { Component } from 'react';\nimport request from 'superagent';\nimport axios from 'axios';\n\nvar Series =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Series, _Component);\n\n  function Series(props) {\n    var _this;\n\n    _classCallCheck(this, Series);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Series).call(this));\n\n    _this.loadSeriesRecords = function () {\n      var _this$state = _this.state,\n          page = _this$state.page,\n          perPage = _this$state.perPage;\n      var Url = _this.state.baseUrl + '/' + '?page=' + page + '&per_page=' + perPage;\n      console.log(\"Series : \", Url);\n\n      try {\n        axios.get(Url, {\n          responseType: 'json'\n        }).then(function (response) {\n          _this.setState({\n            data: response.data\n          });\n\n          _this.state.data['live_series'].map(function (item, i) {\n            return console.log(\"From Loop : \", item);\n          });\n        });\n      } catch (err) {\n        console.log(\"Error\", err);\n        window.location.href = '/404notfound';\n      }\n\n      ;\n      request.get(Url).set('Accept', 'application/json').then(function (res) {\n        _this.setState({\n          isLoaded: true,\n          isLoading: false,\n          seriesData: [_this.state.seriesData].concat(_toConsumableArray(res.body)),\n          hasMore: res.length < perPage\n        });\n\n        console.log(\"From Super Agent : \", _this.state.seriesData);\n\n        _this.state.seriesData['live_series'].map(function (item, i) {\n          return console.log(\"From Super Agent : \", item);\n        });\n      }).catch(function (error) {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      data: null,\n      baseUrl: 'https://back.cricwick.net/api/v2/series',\n      page: 1,\n      perPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(Series, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var seriesData = this.state.seriesData; // seriesData['live_series'].map((item, i)=>(\n      //       console.log(i)\n      // ));\n\n      console.log(this.state.data);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Test\"));\n    }\n  }]);\n\n  return Series;\n}(Component);\n\nexport default Series;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\series\\series.jsx"],"names":["React","Component","request","axios","Series","props","loadSeriesRecords","state","page","perPage","Url","baseUrl","console","log","get","responseType","then","response","setState","data","map","item","i","err","window","location","href","set","res","isLoaded","isLoading","seriesData","body","hasMore","length","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport request              from  'superagent';\r\nimport axios                from 'axios';\r\n\r\nclass Series extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            data:null,\r\n            baseUrl: 'https://back.cricwick.net/api/v2/series',\r\n            page: 1,\r\n            perPage: 10,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = () => {\r\n        const { page, perPage } = this.state;\r\n\r\n        const Url = this.state.baseUrl + '/'\r\n            + '?page=' + page\r\n            + '&per_page=' + perPage;\r\n\r\n        console.log(\"Series : \", Url);\r\n       \r\n        try {\r\n            axios.get(Url,{responseType: 'json'}).then(response => {\r\n                this.setState({ data : response.data });\r\n                this.state.data['live_series'].map((item, i) => (\r\n                    console.log(\"From Loop : \", item)\r\n                ));\r\n\r\n            });\r\n            \r\n        }\r\n        catch (err) {\r\n            console.log(\"Error\", err);\r\n            window.location.href = '/404notfound';\r\n        };\r\n\r\n        request\r\n            .get(Url)\r\n            .set('Accept','application/json')\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    isLoading: false,\r\n                    seriesData: [this.state.seriesData,...res.body],\r\n                    hasMore: (res.length < perPage)\r\n                });\r\n                console.log( \"From Super Agent : \",this.state.seriesData);\r\n                this.state.seriesData['live_series'].map((item, i) => (\r\n                    console.log(\"From Super Agent : \", item)\r\n                ));\r\n                \r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    isLoaded: false,\r\n                    error\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { seriesData } = this.state;\r\n        // seriesData['live_series'].map((item, i)=>(\r\n        //       console.log(i)\r\n        // ));\r\n          console.log(this.state.data);\r\n\r\n        return (\r\n           <React.Fragment> \r\n            <div>\r\n                Test\r\n                 {/* {this.state.data['live_series'].map((item, i) => (\r\n                    <div> {i} </div>\r\n                ))}\r\n                 */}\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}