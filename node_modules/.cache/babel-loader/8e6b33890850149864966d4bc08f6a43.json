{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\scoreCard.jsx\";\nimport React, { Component } from 'react';\nimport http from 'superagent';\nimport '../../assets/css/summary/summary.css';\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard(props) {\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScoreCard).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var baseUrl, match, Url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              baseUrl = _this.state.baseUrl;\n              match = _this.props.match; // https://back.cricwick.net/api/2404\n\n              Url = baseUrl + \"/1612\"; // + match.id;\n\n              console.log(Url); //console.log(hasMore);\n\n              http.get(Url).set(\"Accept\", \"application/json\").then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.renderBattingScoreCard = function (inning) {\n      return inning.batting_scorecard.map(function (score, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"team-flag\",\n          src: score.player.display_picture_url,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), score.player.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), score.batsman.out_details), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, score.batsman.runs_scored), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, score.batsman.balls_played), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, score.batsman.boundry_4s_scored), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, score.batsman.boundry_6s_scored), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, score.batsman.strike_rate));\n      });\n    };\n\n    _this.renderBowlingRecord = function (inning) {\n      return console.log(inning) //bowling_scorecard\n      // <table className='table table-striped table-condensed table-hover table-borderless rank-table'>\n      //   <thead>\n      //     <tr>\n      //       <th>BOWLERS</th>\n      //       <th>O</th>\n      //       <th>M</th>\n      //       <th>R</th>\n      //       <th>W</th>\n      //       <th>EC</th>\n      //     </tr>\n      //   </thead>\n      //   <tbody>\n      //     {/* Bowler  - 2 Details */}\n      //     {inning.bowling_record.map((bowler, i) => (\n      //       < tr >\n      //         <td>\n      //           <img className='team-flag'\n      //             src={bowler.bowler.player.display_picture_url}\n      //             alt='noImage' />\n      //         </td>\n      //         <td>{bowler.bowler.overs_bowled}</td>\n      //         <td>{bowler.bowler.overs_maiden}</td>\n      //         <td>{bowler.bowler.runs_given}</td>\n      //         <td>{bowler.bowler.wickets_taken}</td>\n      //         <td>{this.renderBowlerAverage(\n      //           bowler.bowler.runs_given,\n      //           bowler.bowler.overs_bowled)}\n      //         </td>\n      //       </tr>\n      //     ))}\n      //   </tbody>\n      // </table>\n      ;\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      over: null,\n      selectedType: \"summary\",\n      baseUrl: \"https://back.cricwick.net/api\"\n    };\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          seriesData = _this$state.seriesData;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, seriesData.innings.map(function (inning, i) {\n          return React.createElement(\"div\", {\n            key: indexedDB,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"table\", {\n            className: \"table table-striped table-condensed table-hover table-borderless rank-table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"BATSMEN\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"R\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"B\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"4s\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"6s\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"SR\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, _this2.renderBattingScoreCard(inning), React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \"EXTRA's:\", \"b \", \" \", inning.extra_bye, \"lb \", \" \", inning.extra_leg_bye, \"nb \", \" \", inning.no_ball, \"wd \", \" \", inning.wide_ball, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }), \"TOTAL:\", inning.runs, \" Runs on the Loss of \", inning.wickets, \" \", \" wickets, Average run rate : \", inning.run_rate)))), _this2.renderBowlingRecord(inning));\n        })));\n      }\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport default ScoreCard;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\summary\\scoreCard.jsx"],"names":["React","Component","http","ScoreCard","props","loadSeriesRecords","baseUrl","state","match","Url","console","log","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","catch","error","renderBattingScoreCard","inning","batting_scorecard","map","score","i","player","display_picture_url","name","batsman","out_details","runs_scored","balls_played","boundry_4s_scored","boundry_6s_scored","strike_rate","renderBowlingRecord","hasMore","over","selectedType","message","innings","indexedDB","extra_bye","extra_leg_bye","no_ball","wide_ball","runs","wickets","run_rate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport http from 'superagent';\r\nimport '../../assets/css/summary/summary.css';\r\n\r\nclass ScoreCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      isLoading: false,\r\n      hasMore: true,\r\n      seriesData: [],\r\n      over: null,\r\n      selectedType: \"summary\",\r\n      baseUrl: \"https://back.cricwick.net/api\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadSeriesRecords();\r\n  }\r\n\r\n  loadSeriesRecords = async () => {\r\n    const { baseUrl } = this.state;\r\n    const { match } = this.props;\r\n\r\n    // https://back.cricwick.net/api/2404\r\n\r\n    const Url = baseUrl + \"/1612\"             // + match.id;\r\n\r\n    console.log(Url);\r\n    //console.log(hasMore);\r\n\r\n    http\r\n      .get(Url)\r\n      .set(\"Accept\", \"application/json\")\r\n      .then(res => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          isLoading: false,\r\n          seriesData: res.body\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isLoaded: false,\r\n          error\r\n        });\r\n      });\r\n  };\r\n\r\n  renderBattingScoreCard = inning => (\r\n    inning.batting_scorecard.map((score, i) => (\r\n      <tr key={i}>\r\n        <td>\r\n          <img\r\n            className=\"team-flag\"\r\n            src={score.player.display_picture_url}\r\n            alt=\"noImage\" />\r\n          {score.player.name}<br />\r\n          {score.batsman.out_details}\r\n        </td>\r\n\r\n        <td>{score.batsman.runs_scored}</td>\r\n        <td>{score.batsman.balls_played}</td>\r\n        <td>{score.batsman.boundry_4s_scored}</td>\r\n        <td>{score.batsman.boundry_6s_scored}</td>\r\n        <td>{score.batsman.strike_rate}</td>\r\n      </tr>\r\n    ))\r\n  );\r\n\r\n  renderBowlingRecord = (inning) => (\r\n    console.log(inning)\r\n    //bowling_scorecard\r\n    // <table className='table table-striped table-condensed table-hover table-borderless rank-table'>\r\n    //   <thead>\r\n    //     <tr>\r\n    //       <th>BOWLERS</th>\r\n    //       <th>O</th>\r\n    //       <th>M</th>\r\n    //       <th>R</th>\r\n    //       <th>W</th>\r\n    //       <th>EC</th>\r\n    //     </tr>\r\n    //   </thead>\r\n    //   <tbody>\r\n    //     {/* Bowler  - 2 Details */}\r\n    //     {inning.bowling_record.map((bowler, i) => (\r\n    //       < tr >\r\n    //         <td>\r\n    //           <img className='team-flag'\r\n    //             src={bowler.bowler.player.display_picture_url}\r\n    //             alt='noImage' />\r\n    //         </td>\r\n\r\n    //         <td>{bowler.bowler.overs_bowled}</td>\r\n    //         <td>{bowler.bowler.overs_maiden}</td>\r\n    //         <td>{bowler.bowler.runs_given}</td>\r\n    //         <td>{bowler.bowler.wickets_taken}</td>\r\n\r\n    //         <td>{this.renderBowlerAverage(\r\n    //           bowler.bowler.runs_given,\r\n    //           bowler.bowler.overs_bowled)}\r\n    //         </td>\r\n    //       </tr>\r\n    //     ))}\r\n    //   </tbody>\r\n    // </table>\r\n  )\r\n\r\n\r\n  render() {\r\n    const { error, isLoaded, seriesData } = this.state;\r\n\r\n    if (error) {\r\n      return <div> Error : {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div> Loading Data.... </div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div>\r\n            {seriesData.innings.map((inning, i) => (\r\n              <div key={indexedDB}>\r\n                <table className=\"table table-striped table-condensed table-hover table-borderless rank-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>BATSMEN</th>\r\n                      <th>R</th>\r\n                      <th>B</th>\r\n                      <th>4s</th>\r\n                      <th>6s</th>\r\n                      <th>SR</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.renderBattingScoreCard(inning)}\r\n                    <tr>\r\n                      <td>EXTRA's:\r\n                                     {\"b \"} {inning.extra_bye}\r\n                        {\"lb \"} {inning.extra_leg_bye}\r\n                        {\"nb \"} {inning.no_ball}\r\n                        {\"wd \"} {inning.wide_ball}\r\n                        <br />\r\n                        TOTAL:\r\n                                     {inning.runs}{\" Runs on the Loss of \"}\r\n                        {inning.wickets} {\" wickets, Average run rate : \"}\r\n                        {inning.run_rate}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                {this.renderBowlingRecord(inning)}\r\n\r\n              </div>\r\n\r\n          ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScoreCard;"]},"metadata":{},"sourceType":"module"}