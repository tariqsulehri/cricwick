{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\home\\\\seriesContentsIdentifire.jsx\";\nimport React, { Component } from 'react';\nimport Moment from 'moment';\nimport RenderMatch from './renderMatch';\nimport { Link } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport '../../assets/css/home/homeCenterPanel.css';\nimport '../../assets/css/common/videoCards.css';\nlibrary.add(faPlayCircle);\n\nvar SeriesContentsIdentifire =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SeriesContentsIdentifire, _Component);\n\n  function SeriesContentsIdentifire(props) {\n    var _this;\n\n    _classCallCheck(this, SeriesContentsIdentifire);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SeriesContentsIdentifire).call(this, props));\n    _this.state = {\n      match: '',\n      matchType: ''\n    };\n    return _this;\n  } //----------------------------------------------------------- \n  // This Method Print Series Title on the first card as header. \n\n\n  _createClass(SeriesContentsIdentifire, [{\n    key: \"printMatchCardHeader\",\n    value: function printMatchCardHeader(printSeriesTitle, seriesTitle) {\n      if (printSeriesTitle === 0) {\n        return React.createElement(\"span\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, seriesTitle, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }));\n      }\n\n      return;\n    } //-------------------------------------------------------------------------------\n    // 1) This Method Print Particular Series video's Footer the first card as header.\n    // 2) Further this function will also print the first big and remaining card \n    //    in text and image side by side format.     \n\n  }, {\n    key: \"printVideosCardHeader\",\n    value: function printVideosCardHeader(printSeriesTitle, match) {\n      if (printSeriesTitle === 0) {\n        return React.createElement(\"div\", {\n          className: \"card mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"video-card-image-size-large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: match.med_image,\n          alt: \"no Iamge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"play-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          color: \"white\",\n          icon: \"play-circle\",\n          size: \"6x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }))), React.createElement(\"h4\", {\n          className: \"video-card-title-large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, match.title))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card mb-1 p-0  small-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-3 card-col-for-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"card-image-small\",\n          src: match.med_image,\n          alt: \"no Iamge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"play-button-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          color: \"white\",\n          icon: \"play-circle\",\n          size: \"4x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"col-9 card-col-for-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"cardsmall-col-heading-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, match.title), React.createElement(\"h6\", {\n          className: \"cardsmall-col-sub-heading-gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, match.match_desc))))))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          contentType = _this$props.contentType,\n          printSeriesTitle = _this$props.printSeriesTitle,\n          seriesTitle = _this$props.seriesTitle;\n\n      if (contentType === 'matches') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, match.match_state !== 'Scheduled' && React.createElement(Link, {\n          to: {\n            pathname: '/summary/',\n            state: {\n              match: match\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-block mb-1\",\n          style: {\n            minHeight: 75 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, this.printMatchCardHeader(printSeriesTitle, seriesTitle), React.createElement(RenderMatch, {\n          match: match,\n          matchType: contentType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })))), match.match_state === 'Scheduled' && React.createElement(\"div\", {\n          className: \"card card-block mb-1\",\n          style: {\n            minHeight: 75 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, this.printMatchCardHeader(printSeriesTitle, seriesTitle), React.createElement(RenderMatch, {\n          match: match,\n          matchType: contentType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }))));\n      }\n\n      if (contentType === 'news') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"news-list\",\n          key: match.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/stories',\n            state: {\n              selectedNews: match\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, match.title))));\n      }\n\n      if (contentType === 'videos') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, this.printVideosCardHeader(printSeriesTitle, match));\n      }\n\n      if (contentType === 'article') {\n        return React.createElement(\"div\", {\n          className: \"flex-d\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card mb-1 p-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-9 card-col-for-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"cardsmall-col-heading-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, match.title), React.createElement(\"h6\", {\n          className: \"cardsmall-col-sub-heading-gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, Moment(new Date(match.created_at)).format(\"DD MMM, YYYY\"))), React.createElement(\"div\", {\n          className: \"col-3 card-col-for-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"card-image-small\",\n          src: match.image,\n          alt: \"no Iamge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"play-button-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          color: \"white\",\n          icon: \"play-circle\",\n          size: \"4x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        })))))))));\n      }\n\n      if (contentType === 'tweets') {\n        return React.createElement(Link, {\n          to: match.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card mb-1 tweets-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: match.body\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SeriesContentsIdentifire;\n}(Component);\n\nexport default SeriesContentsIdentifire;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\home\\seriesContentsIdentifire.jsx"],"names":["React","Component","Moment","RenderMatch","Link","library","faPlayCircle","FontAwesomeIcon","add","SeriesContentsIdentifire","props","state","match","matchType","printSeriesTitle","seriesTitle","med_image","title","match_desc","contentType","match_state","pathname","minHeight","printMatchCardHeader","id","selectedNews","printVideosCardHeader","Date","created_at","format","image","url","__html","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport RenderMatch from './renderMatch';\r\nimport {Link} from 'react-router-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport '../../assets/css/home/homeCenterPanel.css';\r\nimport '../../assets/css/common/videoCards.css';\r\n\r\nlibrary.add(faPlayCircle);\r\n\r\nclass SeriesContentsIdentifire extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            match: '',\r\n            matchType: '',\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------------- \r\n    // This Method Print Series Title on the first card as header. \r\n    printMatchCardHeader(printSeriesTitle, seriesTitle) {\r\n        if (printSeriesTitle === 0) {\r\n            return <span className=\"card-title\">\r\n                       {seriesTitle}\r\n                       <hr />\r\n                    </span>\r\n        }\r\n        return;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------\r\n    // 1) This Method Print Particular Series video's Footer the first card as header.\r\n    // 2) Further this function will also print the first big and remaining card \r\n    //    in text and image side by side format.     \r\n    printVideosCardHeader(printSeriesTitle, match) {\r\n\r\n        if (printSeriesTitle === 0) {\r\n\r\n            return (\r\n                <div className='card mb-1'>\r\n                    <div className='card-body p-3'>\r\n                     \r\n                        <Link to=\"\">\r\n                            <div className='video-card-image-size-large'>\r\n                                <img src={match.med_image} alt=\"no Iamge\" />\r\n                                <div className='play-button'>\r\n                                    <FontAwesomeIcon color=\"white\"\r\n                                        icon={\"play-circle\"}\r\n                                        size=\"6x\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                                 <h4 className=\"video-card-title-large\">\r\n                                    {match.title}\r\n                                </h4>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div className='d-flex'>\r\n                    <div className=\"card mb-1 p-0  small-card\">\r\n                        <div className='card-body p-3'>\r\n                            <div className='container'>\r\n                                <Link to=''>\r\n                                    <div className='row'>\r\n                                        <div className='col-3 card-col-for-image'>\r\n                                            <img className='card-image-small'\r\n                                                src={match.med_image}\r\n                                                alt=\"no Iamge\" />\r\n\r\n                                          <div className='play-button-small'>\r\n                                            <FontAwesomeIcon color=\"white\"\r\n                                                icon={\"play-circle\"}\r\n                                                size=\"4x\"\r\n                                            />\r\n                                         </div>\r\n                                         \r\n                                        </div>\r\n\r\n                                        <div className='col-9 card-col-for-text'>\r\n                                            <h4 className=\"cardsmall-col-heading-black\">\r\n                                                {match.title}\r\n                                            </h4>\r\n                                            <h6 className='cardsmall-col-sub-heading-gray'>\r\n                                                {match.match_desc}\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Link>\r\n                            </div>\r\n\r\n                            {/* <div className='left-div-30p'>\r\n                                        <div className='play-button-small-left'>\r\n                                        </div>\r\n                                    </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { match, contentType, printSeriesTitle, seriesTitle } = this.props;\r\n        if (contentType === 'matches') {\r\n            return (\r\n              <div>   \r\n                    {match.match_state !== 'Scheduled' &&\r\n                        <Link to={{ pathname: '/summary/', state: { match: match } }}>\r\n                            <div className=\"card card-block mb-1\" style={{ minHeight: 75 + \"px\" }}>\r\n                                <div className=\"card-body p-3\">\r\n                                    {this.printMatchCardHeader(printSeriesTitle, seriesTitle)}\r\n                                    <RenderMatch match={match} matchType={contentType} />\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    }\r\n\r\n                    {match.match_state === 'Scheduled' &&\r\n                        <div className=\"card card-block mb-1\" style={{ minHeight: 75 + \"px\" }}>\r\n                            <div className=\"card-body p-3\">\r\n                                {this.printMatchCardHeader(printSeriesTitle, seriesTitle)}\r\n                                <RenderMatch match={match} matchType={contentType} />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n             </div>  \r\n\r\n            );\r\n        }\r\n\r\n        if (contentType === 'news') {\r\n            return (\r\n                <div>\r\n                    <ul>\r\n                        <li className='news-list'  key={match.id}>\r\n                            <Link to={{\r\n                                pathname: '/stories',\r\n                                state: {\r\n                                    selectedNews: match,\r\n                                }\r\n                            }} >\r\n                                {match.title}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (contentType === 'videos') {\r\n            return (\r\n                <div>\r\n                    {/* Following function will render videos */}\r\n                    {this.printVideosCardHeader(printSeriesTitle, match)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (contentType === 'article') {\r\n            return (\r\n                <div className=\"flex-d\">\r\n                    <div className=\"card mb-1 p-0\">\r\n                        <div className='card-body p-3'>\r\n                           \r\n                            <div className='container'>\r\n                                <Link to=''>\r\n                                    <div className='row'>\r\n\r\n                                        <div className='col-9 card-col-for-text'>\r\n                                            <h4 className=\"cardsmall-col-heading-black\">\r\n                                                {match.title}\r\n                                            </h4>\r\n                                            <h6 className='cardsmall-col-sub-heading-gray'>\r\n                                                {Moment(new Date(match.created_at)).format(\"DD MMM, YYYY\")}\r\n                                            </h6>\r\n                                        </div>\r\n\r\n                                        <div className='col-3 card-col-for-image'>\r\n                                            <img className='card-image-small'\r\n                                                src={match.image}\r\n                                                alt=\"no Iamge\" />\r\n\r\n                                            <div className='play-button-small'>\r\n                                                <FontAwesomeIcon color=\"white\"\r\n                                                    icon={\"play-circle\"}\r\n                                                    size=\"4x\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (contentType === 'tweets') {\r\n\r\n            return (\r\n                <Link to={match.url}>\r\n                    <div className='card mb-1 tweets-card'>\r\n                        <div className='card-body p-3'>\r\n                            <span\r\n                                dangerouslySetInnerHTML={{ __html: match.body }}>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SeriesContentsIdentifire;"]},"metadata":{},"sourceType":"module"}