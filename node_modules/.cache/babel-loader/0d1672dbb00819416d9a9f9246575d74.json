{"ast":null,"code":"import _objectSpread from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport http from \"../../services/httpService\"; //import {userAuthentication}  from \"../../services/userService\";\n\nimport * as authService from \"../../services/authService\";\nimport Input from \"../common/input\";\nimport config from '../../config.json';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this));\n\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(username) {\n        var user, Url, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = _this.state.user; //login_or_sendpin?telco=mobilink&phone=03001111111&sub_type='\n\n                Url = _this.state.baseUrl + '/' + 'login_or_sendpin?telco=' + config.telco + '&phone=' + username + '&sub_type=';\n                console.log(\"Series : \", Url);\n                _context.prev = 3;\n                _context.next = 6;\n                return http.get(Url);\n\n              case 6:\n                data = _context.sent;\n                _context.next = 9;\n                return _this.setState(function () {\n                  return {\n                    user: data.data\n                  };\n                });\n\n              case 9:\n                console.log(\"Status Pushed\", data.data);\n                console.log(\"user\", data.data.generic_response);\n                localStorage.push(\"user\", data.data.generic_response);\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(\"Error\", _context.t0);\n                window.location.href = '/404notfound';\n\n              case 18:\n                ;\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSumbit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user = _this.state.user;\n                e.preventDefault();\n                console.log(\"Submit Clicked...: \", user); //await this.loadSeriesRecords(user.username);\n                // this.props.history.push('/');\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (_ref3) {\n      var input = _ref3.currentTarget;\n\n      var user = _objectSpread({}, _this.state.account);\n\n      user[input.name] = input.value;\n\n      _this.setState({\n        user: user\n      });\n    };\n\n    _this.state = {\n      errors: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      baseUrl: 'https://staging.cricwick.net:13002/api',\n      page: 1,\n      perPage: 10,\n      user: {\n        phone: \"\",\n        userid: \"\",\n        username: \"\"\n      }\n    };\n    _this.handleSumbit = _this.handleSumbit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.loadSeriesRecords();\n      //  console.log(\"url : \", config.telco_app_load);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = this.state.user;\n      return React.createElement(\"div\", {\n        className: \"card p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"username\",\n        id: \"username\",\n        value: user.username,\n        onChange: this.handleChange,\n        label: \"Please Enter Your Number\",\n        placeHolder: \"03xx xxxx xxx\",\n        focus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        value: \"submit\" // onClick = {(event) => this.handleSumbit(event.target.value)}\n        ,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Continue\")), React.createElement(\"div\", {\n        style: {\n          paddingTop: 30 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card-img-bottom\" //  src={config.telco_app_load} alt='NoImage'/>\n        ,\n        src: require('../../assets/telcos/img-download.jpg'),\n        alt: \"NoImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login; // console.log(Url);\n// try {\n//    // const { data: jwt } = await authService.login(account.username);\n//     const { data } = await authService.login(Url);\n//     console.log(data);\n//     localStorage.setItem('token', \"test\");\n//     this.props.history.push('/');\n// }\n// catch (ex) {\n//     if (ex.response && ex.response.status === 400) {\n//         const errors = { ...this.state.errors };\n//         errors.username = ex.response.data;\n//         this.setState({ errors });\n//     }\n// }\n// try {\n//     await userService.userAuthentication(this.state.account);\n// } \n// catch (ex) {\n//     if (ex.response && ex.response.status === 400){\n//       const errors = { ...this.state.errors };\n//       errors.username =  ex.response.data;\n//       this.setState({errors});\n//     }\n// }        \n//console.log(\"Login : \", e.current);","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\login\\login.jsx"],"names":["React","Component","http","authService","Input","config","Login","props","loadSeriesRecords","username","user","state","Url","baseUrl","telco","console","log","get","data","setState","generic_response","localStorage","push","window","location","href","handleSumbit","e","preventDefault","handleChange","input","currentTarget","account","name","value","errors","isLoaded","isLoading","hasMore","page","perPage","phone","userid","bind","handleSubmit","paddingTop","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport http from \"../../services/httpService\";\r\n//import {userAuthentication}  from \"../../services/userService\";\r\nimport * as authService from \"../../services/authService\";\r\nimport Input from \"../common/input\";\r\nimport config from '../../config.json';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            errors: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            baseUrl: 'https://staging.cricwick.net:13002/api',\r\n            page: 1,\r\n            perPage: 10,\r\n            user: { phone: \"\", userid: \"\", username: \"\" }\r\n        }\r\n\r\n        this.handleSumbit = this.handleSumbit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.loadSeriesRecords();\r\n        //  console.log(\"url : \", config.telco_app_load);\r\n    }\r\n\r\n    loadSeriesRecords = async (username) => {\r\n        const { user } = this.state;\r\n\r\n        //login_or_sendpin?telco=mobilink&phone=03001111111&sub_type='\r\n\r\n        const Url = this.state.baseUrl + '/'\r\n            + 'login_or_sendpin?telco=' + config.telco\r\n            + '&phone=' + username\r\n            + '&sub_type='\r\n\r\n        console.log(\"Series : \", Url);\r\n\r\n        try {\r\n            const data = await http.get(Url);\r\n            await this.setState(() => {\r\n                return {\r\n                    user: data.data\r\n                }\r\n            });\r\n\r\n            console.log(\"Status Pushed\", data.data);\r\n            console.log(\"user\", data.data.generic_response);\r\n            localStorage.push(\"user\", data.data.generic_response);\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error\", err);\r\n            window.location.href = '/404notfound';\r\n        };\r\n    }\r\n\r\n    //jwt-decode\r\n    //import jwtDecode from 'jwt-decode'\r\n    handleSumbit = async (e) => {\r\n        const { user } = this.state;\r\n        e.preventDefault();\r\n\r\n        console.log(\"Submit Clicked...: \", user);\r\n        //await this.loadSeriesRecords(user.username);\r\n        // this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const user = { ...this.state.account };\r\n        user[input.name] = input.value;\r\n        this.setState({\r\n            user: user\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n        return (\r\n            <div className='card p-4'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Input name='username'\r\n                            id='username'\r\n                            value={user.username}\r\n                            onChange = {this.handleChange}\r\n                            label=\"Please Enter Your Number\"\r\n                            placeHolder=\"03xx xxxx xxx\"\r\n                            focus={true}\r\n                     />\r\n                  \r\n                    <button\r\n                        className=\"btn btn-primary mt-3\"\r\n                        value=\"submit\"\r\n                        // onClick = {(event) => this.handleSumbit(event.target.value)}\r\n                        type=\"submit\">Continue\r\n                        </button>\r\n                </form>\r\n\r\n                <div style={{ paddingTop: 30 + 'px' }} >\r\n                    <img className=\"card-img-bottom\"\r\n                        //  src={config.telco_app_load} alt='NoImage'/>\r\n                        src={require('../../assets/telcos/img-download.jpg')} alt='NoImage' />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n // console.log(Url);\r\n\r\n        // try {\r\n        //    // const { data: jwt } = await authService.login(account.username);\r\n        //     const { data } = await authService.login(Url);\r\n        //     console.log(data);\r\n\r\n        //     localStorage.setItem('token', \"test\");\r\n        //     this.props.history.push('/');\r\n        // }\r\n        // catch (ex) {\r\n        //     if (ex.response && ex.response.status === 400) {\r\n        //         const errors = { ...this.state.errors };\r\n        //         errors.username = ex.response.data;\r\n        //         this.setState({ errors });\r\n        //     }\r\n        // }\r\n\r\n        // try {\r\n        //     await userService.userAuthentication(this.state.account);\r\n        // } \r\n        // catch (ex) {\r\n        //     if (ex.response && ex.response.status === 400){\r\n        //       const errors = { ...this.state.errors };\r\n        //       errors.username =  ex.response.data;\r\n        //       this.setState({errors});\r\n        //     }\r\n        // }        \r\n        //console.log(\"Login : \", e.current);"]},"metadata":{},"sourceType":"module"}