{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\scoreCard.jsx\";\nimport React, { Component } from 'react';\nimport http from 'superagent';\nimport '../../assets/css/summary/summary.css';\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard(props) {\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScoreCard).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var baseUrl, match, Url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              baseUrl = _this.state.baseUrl;\n              match = _this.props.match; // https://back.cricwick.net/api/2404\n\n              Url = baseUrl + \"/\" + match.id;\n              console.log(Url); //console.log(hasMore);\n\n              http.get(Url).set(\"Accept\", \"application/json\").then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.renderBattingScoreCard = function (inning) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, inning.batting_scorecard.map(function (score, i) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"team-flag\",\n          src: score.player.display_picture_url,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), score.player.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, score.player.runs_scored), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, score.player.balls_played), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, score.player.boundry_4s_scored), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, score.player.boundry_6s_scored), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, score.player.strike_rate));\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      over: null,\n      selectedType: \"summary\",\n      baseUrl: \"https://back.cricwick.net/api\"\n    };\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          seriesData = _this$state.seriesData;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, seriesData.innings.map(function (inning, i) {\n          return React.createElement(\"table\", {\n            className: \"table table-striped table-condensed table-hover table-borderless rank-table\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"BATSMEN\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"R\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"B\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"4s\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"6s\"), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, \"SR\"))), React.createElement(\"tbody\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, _this2.renderBattingScoreCard(inning)));\n        })));\n      }\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport default ScoreCard;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\summary\\scoreCard.jsx"],"names":["React","Component","http","ScoreCard","props","loadSeriesRecords","baseUrl","state","match","Url","id","console","log","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","catch","error","renderBattingScoreCard","inning","batting_scorecard","map","score","i","player","display_picture_url","name","runs_scored","balls_played","boundry_4s_scored","boundry_6s_scored","strike_rate","hasMore","over","selectedType","message","innings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport http from 'superagent';\r\nimport '../../assets/css/summary/summary.css';\r\n\r\nclass ScoreCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      isLoading: false,\r\n      hasMore: true,\r\n      seriesData: [],\r\n      over: null,\r\n      selectedType: \"summary\",\r\n      baseUrl: \"https://back.cricwick.net/api\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadSeriesRecords();\r\n  }\r\n\r\n  loadSeriesRecords = async () => {\r\n    const { baseUrl } = this.state;\r\n    const { match } = this.props;\r\n\r\n    // https://back.cricwick.net/api/2404\r\n\r\n    const Url = baseUrl + \"/\" + match.id;\r\n\r\n    console.log(Url);\r\n    //console.log(hasMore);\r\n\r\n    http\r\n      .get(Url)\r\n      .set(\"Accept\", \"application/json\")\r\n      .then(res => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          isLoading: false,\r\n          seriesData: res.body\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isLoaded: false,\r\n          error\r\n        });\r\n      });\r\n  };\r\n\r\n  renderBattingScoreCard = inning => (\r\n    <div>\r\n      {inning.batting_scorecard.map((score, i) => (\r\n        <tr>\r\n          <td>\r\n            <img\r\n              className=\"team-flag\"\r\n              src={score.player.display_picture_url}\r\n              alt=\"noImage\"\r\n            />\r\n            {score.player.name}\r\n          </td>\r\n\r\n          <td>{score.player.runs_scored}</td>\r\n          <td>{score.player.balls_played}</td>\r\n          <td>{score.player.boundry_4s_scored}</td>\r\n          <td>{score.player.boundry_6s_scored}</td>\r\n          <td>{score.player.strike_rate}</td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { error, isLoaded, seriesData } = this.state;\r\n\r\n    if (error) {\r\n      return <div> Error : {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div> Loading Data.... </div>;\r\n    } else {\r\n      return (\r\n          <div>\r\n              <div>\r\n                  {seriesData.innings.map((inning, i) => (\r\n                      <table className=\"table table-striped table-condensed table-hover table-borderless rank-table\">\r\n                          <thead>\r\n                              <tr>\r\n                                  <th>BATSMEN</th>\r\n                                  <th>R</th>\r\n                                  <th>B</th>\r\n                                  <th>4s</th>\r\n                                  <th>6s</th>\r\n                                  <th>SR</th>\r\n                              </tr>\r\n                          </thead>\r\n                          <tbody>{this.renderBattingScoreCard(inning)}</tbody>\r\n                      </table>\r\n                  ))}\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScoreCard;"]},"metadata":{},"sourceType":"module"}