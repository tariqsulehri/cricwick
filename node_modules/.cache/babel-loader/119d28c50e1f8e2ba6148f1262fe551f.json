{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\matchSquads.jsx\";\nimport React, { Component } from 'react';\nimport http from 'superagent';\nimport Loading from '../common/loading';\nimport '../../assets/css/summary/squad.css';\n\nvar MatchSquads =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchSquads, _Component);\n\n  function MatchSquads(props) {\n    var _this;\n\n    _classCallCheck(this, MatchSquads);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MatchSquads).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var match;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              match = _this.props.match;\n              _context.next = 3;\n              return _this.loadSeriesRecords(match.team_1_id, match.id);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(team_id, match_id) {\n        var baseUrl, Url;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                baseUrl = _this.state.baseUrl; // console.log(\"Match from Parent Object : \" , match);\n                // https://back.cricwick.net/api/1107/2409/squad\n                //Home Series Api  \n\n                Url = baseUrl + '/' + team_id + '/' + match_id + '/' + 'squad';\n                console.log(Url);\n                http.get(Url).set('Accept', 'application/json').then(function (res) {\n                  _this.setState(function () {\n                    return {\n                      isLoaded: true,\n                      isLoading: false,\n                      seriesData: res.body\n                    };\n                  });\n                }).catch(function (error) {\n                  _this.setState(function () {\n                    return {\n                      isLoaded: false,\n                      error: error\n                    };\n                  });\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleClick = function (team_id, match_id) {\n      _this.setState(function () {\n        return {\n          team_id: team_id,\n          match_id: match_id\n        };\n      });\n\n      _this.loadSeriesRecords(team_id, match_id);\n    };\n\n    _this.renderSquad = function (ObjectSelectedSquad) {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, ObjectSelectedSquad.map(function (player, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"card border-light shadow-sm bg-white rounded  mycard p-1 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"playerImage\",\n          src: player.player.display_picture_url,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"card-body p-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"player-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, player.player.name), player.is_captain && React.createElement(\"span\", {\n          className: \"captain\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \" - C\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"player-role\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, player.player.playing_role), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"player-role\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, player.player.batting_hand), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })));\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      team_id: '',\n      match_id: '',\n      hasMore: true,\n      seriesData: [],\n      over: null,\n      selectedType: 'summary',\n      baseUrl: 'https://back.cricwick.net/api'\n    };\n    return _this;\n  }\n\n  _createClass(MatchSquads, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(match.id);\n      // console.log(match.team_1_id,match.teamA.name);\n      // console.log(match.team_2_id, match.teamB.name);\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          seriesData = _this$state.seriesData;\n      var match = this.props.match;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" card p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"short-menu-buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-default\",\n          onClick: function onClick() {\n            return _this2.handleClick(match.team_1_id, match.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, match.teamA.name), React.createElement(\"button\", {\n          className: \"btn btn-default\",\n          onClick: function onClick() {\n            return _this2.handleClick(match.team_2_id, match.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, match.teamB.name))), React.createElement(\"div\", {\n          className: \"card-columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, this.renderSquad(seriesData)));\n      }\n    }\n  }]);\n\n  return MatchSquads;\n}(Component);\n\nexport default MatchSquads;","map":{"version":3,"sources":["D:\\projects\\react\\cric-ngif\\src\\components\\summary\\matchSquads.jsx"],"names":["React","Component","http","Loading","MatchSquads","props","componentDidMount","match","loadSeriesRecords","team_1_id","id","team_id","match_id","baseUrl","state","Url","console","log","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","catch","error","handleClick","renderSquad","ObjectSelectedSquad","map","player","i","display_picture_url","name","is_captain","playing_role","batting_hand","hasMore","over","selectedType","message","teamA","team_2_id","teamB"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport http from 'superagent';\r\nimport Loading from '../common/loading';\r\nimport '../../assets/css/summary/squad.css';\r\n\r\nclass MatchSquads extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            team_id : '',\r\n            match_id:'',\r\n            hasMore: true,\r\n            seriesData: [],\r\n            over: null,\r\n            selectedType: 'summary', \r\n            baseUrl: 'https://back.cricwick.net/api',\r\n        };\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = async ()=> {\r\n        const { match } = this.props;\r\n        await this.loadSeriesRecords(match.team_1_id, match.id);\r\n    }\r\n\r\n    loadSeriesRecords = async (team_id, match_id) => {\r\n        const { baseUrl } = this.state;\r\n\r\n\r\n        // console.log(\"Match from Parent Object : \" , match);\r\n        // https://back.cricwick.net/api/1107/2409/squad\r\n        //Home Series Api  \r\n\r\n        const Url = baseUrl\r\n            + '/'\r\n            + team_id\r\n            + '/'\r\n            + match_id\r\n            + '/'\r\n            + 'squad'\r\n\r\n        console.log(Url);\r\n\r\n        http\r\n            .get(Url)\r\n            .set('Accept', 'application/json')\r\n            .then(res => {\r\n                this.setState(()=>{\r\n                    return{\r\n                        isLoaded: true,\r\n                        isLoading: false,\r\n                        seriesData: res.body,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState(()=>{\r\n                    return{\r\n                        isLoaded: false,\r\n                        error\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    handleClick = (team_id, match_id) => {\r\n          this.setState( ()=> { return { team_id: team_id, match_id: match_id} });\r\n          this.loadSeriesRecords(team_id, match_id);\r\n    }\r\n\r\n   \r\n    renderSquad = (ObjectSelectedSquad) => (\r\n        <div className=''> \r\n          {ObjectSelectedSquad.map((player, i)=>(\r\n               <div key={i} className=\"card border-light shadow-sm bg-white rounded  mycard p-1 text-center\">\r\n                                <img\r\n                                className=\"playerImage\"\r\n                                src={player.player.display_picture_url}\r\n                                alt=\"noImage\"\r\n                                />\r\n\r\n                   <div className=\"card-body p-1\">\r\n                       <span className='player-name'> \r\n                            {player.player.name}\r\n                       </span>\r\n                     \r\n                      {player.is_captain &&\r\n                          <span className='captain'>\r\n                              {\" - C\"}\r\n                          </span>\r\n                      }\r\n                      \r\n                       <br/>\r\n                       {/* {player.is_wicket_keeper &&\r\n                       <span className='player-role'> {\"Wicket Keeper & \"} </span>\r\n                       } */}\r\n                       <span className='player-role'>{player.player.playing_role}</span><br/>\r\n                       <span className='player-role'>{player.player.batting_hand}</span>\r\n                       <br />\r\n                   </div>\r\n               </div>\r\n          ))}\r\n        </div>\r\n    )\r\n\r\n\r\n    render() {\r\n        // console.log(match.id);\r\n        // console.log(match.team_1_id,match.teamA.name);\r\n        // console.log(match.team_2_id, match.teamB.name);\r\n        const { error, isLoaded, seriesData} = this.state;\r\n        const {match} = this.props;\r\n       \r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<Loading/>);\r\n        } else {\r\n            return (\r\n                <div>\r\n                   <div className=' card p-3' >\r\n                       <span className='short-menu-buttons'>\r\n                            <button className='btn btn-default' onClick={() => this.handleClick(match.team_1_id, match.id)} >{match.teamA.name}</button>\r\n                            <button className='btn btn-default' onClick={() => this.handleClick(match.team_2_id, match.id)}>{match.teamB.name}</button>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className='card-columns'>\r\n                        {this.renderSquad(seriesData)}\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MatchSquads;"]},"metadata":{},"sourceType":"module"}