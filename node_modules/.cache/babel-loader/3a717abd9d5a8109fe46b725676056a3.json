{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\series\\\\series.jsx\";\nimport React, { Component } from 'react'; //import request                    from  'superagent';\n\nimport axios from 'axios';\n\nvar Series =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Series, _Component);\n\n  function Series(props) {\n    var _this;\n\n    _classCallCheck(this, Series);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Series).call(this));\n\n    _this.loadSeriesRecords = function () {\n      var _this$state = _this.state,\n          page = _this$state.page,\n          perPage = _this$state.perPage;\n      var Url = _this.state.baseUrl + '/' + '?page=' + page + '&per_page=' + perPage;\n      console.log(\"Series : \", Url);\n\n      try {\n        axios.get(Url, {\n          responseType: 'json'\n        }).then(function (response) {\n          _this.setState({\n            seriesData: response.data\n          });\n\n          _this.state.seriesData['live_series'].map(function (item, i) {\n            return console.log(\"From Loop : \", item);\n          });\n        });\n      } catch (err) {\n        console.log(\"Error\", err);\n        window.location.href = '/404notfound';\n      }\n\n      ; // request\n      //     .get(Url)\n      //     .set('Accept','application/json')\n      //     .then(res => {\n      //         this.setState({\n      //             isLoaded: true,\n      //             isLoading: false,\n      //             seriesData: res.body,\n      //             hasMore: (res.length < perPage)\n      //         });\n      //     })\n      //     .catch(error => {\n      //         this.setState({\n      //             isLoaded: false,\n      //             error\n      //         });\n      //     });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      baseUrl: 'https://back.cricwick.net/api/v2/series',\n      page: 1,\n      perPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(Series, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var seriesData = this.state.seriesData;\n      seriesData['live_series'].map(function (item, i) {\n        console.log(i);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"this is test\");\n    }\n  }]);\n\n  return Series;\n}(Component);\n\nexport default Series;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\series\\series.jsx"],"names":["React","Component","axios","Series","props","loadSeriesRecords","state","page","perPage","Url","baseUrl","console","log","get","responseType","then","response","setState","seriesData","data","map","item","i","err","window","location","href","error","isLoaded","isLoading","hasMore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;;AADe,UAmBnBC,iBAnBmB,GAmBC,YAAM;AAAA,wBACI,MAAKC,KADT;AAAA,UACdC,IADc,eACdA,IADc;AAAA,UACRC,OADQ,eACRA,OADQ;AAGtB,UAAMC,GAAG,GAAG,MAAKH,KAAL,CAAWI,OAAX,GAAqB,GAArB,GACN,QADM,GACKH,IADL,GAEN,YAFM,GAESC,OAFrB;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,GAAzB;;AAEA,UAAI;AACAP,QAAAA,KAAK,CAACW,GAAN,CAAUJ,GAAV,EAAc;AAACK,UAAAA,YAAY,EAAE;AAAf,SAAd,EAAsCC,IAAtC,CAA2C,UAAAC,QAAQ,EAAI;AACnD,gBAAKC,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAEF,QAAQ,CAACG;AAAvB,WAAd;;AAEA,gBAAKb,KAAL,CAAWY,UAAX,CAAsB,aAAtB,EAAqCE,GAArC,CAAyC,UAACC,IAAD,EAAOC,CAAP;AAAA,mBACrCX,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BS,IAA5B,CADqC;AAAA,WAAzC;AAIH,SAPD;AASH,OAVD,CAWA,OAAOE,GAAP,EAAY;AACRZ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,GAArB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AACH;;AAAA,OAvBqB,CAyBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA7DkB;;AAEf,UAAKpB,KAAL,GAAa;AACTqB,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,OAAO,EAAE,IAJA;AAKTZ,MAAAA,UAAU,EAAE,EALH;AAMTR,MAAAA,OAAO,EAAE,yCANA;AAOTH,MAAAA,IAAI,EAAE,CAPG;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAFe;AAalB;;;;wCAEmB;AAChB,WAAKH,iBAAL;AACH;;;6BA8CQ;AAAA,UACGa,UADH,GACkB,KAAKZ,KADvB,CACGY,UADH;AAELA,MAAAA,UAAU,CAAC,aAAD,CAAV,CAA0BE,GAA1B,CAA8B,UAACC,IAAD,EAAOC,CAAP,EAAW;AACnCX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACL,OAFD;AAIA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AASH;;;;EA/EgBrB,S;;AAkFrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import request                    from  'superagent';\r\nimport axios from 'axios';\r\n\r\nclass Series extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            baseUrl: 'https://back.cricwick.net/api/v2/series',\r\n            page: 1,\r\n            perPage: 10,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = () => {\r\n        const { page, perPage } = this.state;\r\n\r\n        const Url = this.state.baseUrl + '/'\r\n            + '?page=' + page\r\n            + '&per_page=' + perPage;\r\n\r\n        console.log(\"Series : \", Url);\r\n       \r\n        try {\r\n            axios.get(Url,{responseType: 'json'}).then(response => {\r\n                this.setState({ seriesData: response.data });\r\n\r\n                this.state.seriesData['live_series'].map((item, i) => (\r\n                    console.log(\"From Loop : \", item)\r\n                ));\r\n\r\n            });\r\n            \r\n        }\r\n        catch (err) {\r\n            console.log(\"Error\", err);\r\n            window.location.href = '/404notfound';\r\n        };\r\n\r\n        // request\r\n        //     .get(Url)\r\n        //     .set('Accept','application/json')\r\n        //     .then(res => {\r\n        //         this.setState({\r\n        //             isLoaded: true,\r\n        //             isLoading: false,\r\n        //             seriesData: res.body,\r\n        //             hasMore: (res.length < perPage)\r\n        //         });\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             isLoaded: false,\r\n        //             error\r\n        //         });\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        const { seriesData } = this.state;\r\n        seriesData['live_series'].map((item, i)=>{\r\n              console.log(i)\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {/* {this.state.seriesData['live_series'].map((item,i)=>(\r\n                      console.log(\"From Loop : \", item)\r\n                 ))} */}\r\n                 this is test\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}