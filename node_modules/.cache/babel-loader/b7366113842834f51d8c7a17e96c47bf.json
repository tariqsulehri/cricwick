{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Button from './components/buttons';\nimport Input from './components/input';\nimport Input1 from './components/input1';\nimport ClearButton from './components/clearButton';\nimport ButtonOther from './components/buttonOther';\nimport './components/buttons.css';\nimport './components/buttons.css';\nimport * as math from 'mathjs';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleAddToInput = function (val) {\n      var str = _this.state.input;\n      console.log(str);\n      console.log(_this.isInputEqualZero(str));\n\n      if (_this.isInputEqualZero(str)) {\n        _this.setState({\n          input: val\n        });\n\n        return;\n      }\n\n      if (val === \".\") {\n        if (_this.charCount(_this.state.input, \".\") > 0) {\n          _this.setState({\n            input: _this.state.input\n          });\n\n          return;\n        } else {\n          _this.setState({\n            input: _this.state.input + val\n          });\n        }\n      }\n\n      switch (val) {\n        case \"+\":\n          {\n            _this.addCalculator(val);\n\n            console.log(\"Addtion Operation\");\n            break;\n          }\n\n        case \"-\":\n          {\n            _this.addCalculator(val);\n\n            console.log(\"Subtrct Operation\");\n            break;\n          }\n\n        case \"/\":\n          {\n            _this.addCalculator(val);\n\n            console.log(\"Devide Operation\");\n            break;\n          }\n\n        case \"*\":\n          {\n            _this.addCalculator(val);\n\n            console.log(\"Multiply Operation\");\n            break;\n          }\n\n        default:\n          {\n            _this.addInputNumbers(_this.state.result, val);\n\n            console.log(\"Default Opeartion\");\n            break;\n          }\n      }\n    };\n\n    _this.handleAddToMemory = function (val) {\n      if (val === \"0\") return; //  if (this.state.memory.length === 1 && \n      //       ( val ===\"*\" || val ===\"/\" || val ===\"+\" || val ===\"-\")){\n      //       return;\n      //   }else{\n      //      this.setState({ memory: this.state.memory + this.state.input +  val});\n      //   }\n\n      console.log(val);\n\n      switch (val) {\n        case \"+\":\n          {\n            if (_this.state.memory === \" \") {\n              _this.setState({\n                memory: _this.state.input + val\n              });\n\n              console.log(\"Add\" + _this.state.input + \" : \" + val);\n            }\n\n            break;\n          }\n\n        case \"-\":\n          {\n            console.log(\"Subtrct\");\n            break;\n          }\n\n        case \"/\":\n          {\n            console.log(\"Devide\");\n            break;\n          }\n\n        case \"*\":\n          {\n            console.log(\"Multiply\");\n            break;\n          }\n\n        case \"1\":\n          {\n            _this.setState.input === \"0\" ? _this.setState({\n              input: val\n            }) : _this.setState({\n              input: _this.state.input + val\n            });\n            break;\n          }\n\n        default:\n          {\n            console.log(\"Default Case....\");\n          }\n      }\n    };\n\n    _this.handleEqual = function (val) {\n      if (_this.state.memory === 0) {\n        return;\n      }\n\n      _this.setState({\n        input: math.eval(_this.state.memory + _this.state.input)\n      });\n\n      _this.setState({\n        memory: ''\n      });\n\n      _this.setState({\n        result: true\n      });\n    };\n\n    _this.handleBackspace = function (val) {\n      var str = _this.state.input;\n      var len = _this.state.input.length;\n\n      if (str.length > 1) {\n        _this.setState({\n          input: str.substring(0, len - 1)\n        });\n      } else {\n        _this.setState({\n          input: \"0\"\n        });\n      }\n    };\n\n    _this.handleScientific = function (val) {\n      if (val === '0') return;\n\n      switch (val) {\n        case 'x2':\n          {\n            var value = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.sqrt(value)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case 'sin':\n          {\n            var _value = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.sin(_value)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case 'cos':\n          {\n            var _value2 = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.cos(_value2)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case 'tan':\n          {\n            var _value3 = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.tan(_value3)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case '10x':\n          {\n            var _value4 = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.pow(10, _value4)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case 'log':\n          {\n            var _value5 = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.log10(_value5)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case 'Exp':\n          {\n            var _value6 = _this.state.input; //This line can be Elaminate further\n\n            _this.setState({\n              input: math.exp(_value6)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        case 'Mod':\n          {\n            var _value7 = _this.state.input; //line can be Elaminate further\n\n            _this.setState({\n              input: math.mod(_value7, 2)\n            });\n\n            _this.setState({\n              result: true\n            });\n\n            break;\n          }\n\n        default:\n          {\n            console.log(\"Un know operation selected...\");\n            break;\n          }\n      } /// End Case\n\n    };\n\n    _this.state = {\n      input: '0',\n      memory: '',\n      result: false,\n      values: []\n    };\n    return _this;\n  } //DESCRIPTION :  function to handle user input\n  //PARAM       :  string (0-9) and Signs(+ , - , / *)\n  //RETURN      :  No return type  \n\n\n  _createClass(App, [{\n    key: \"isInputEqualZero\",\n    //DESCRIPTION :  function to Check Eithet first input is ZERO\n    //PARAM       :  string\n    //RETURN      :  TRUE : if first character is 0  \n    //               FALSE: if first charcter is not 0\n    value: function isInputEqualZero(str) {\n      for (var i = 0; i < str.length; i++) {\n        if (str[0] === \"0\") {\n          return true;\n        }\n\n        return false;\n      }\n    } //DESCRIPTION :  function to Check Eithet last character in Sign\n    //PARAM       :  string\n    //RETURN      :  character Sign or maybe True if Sign      \n\n  }, {\n    key: \"isLastSign\",\n    value: function isLastSign(string) {\n      if (string.len > 0) {\n        var arr = string.split(',');\n        var chr = arr[arr.length - 1];\n        console.log(chr);\n        return chr;\n      }\n    } //DESCRIPTION :  function to Check status of Result mode and Change Input \n    //PARAM       :  RESULT=Boolean, VAL= and number 0-9\n    //RETURN      :  NO RETURN      \n\n  }, {\n    key: \"addInputNumbers\",\n    value: function addInputNumbers(result, val) {\n      console.log(result);\n\n      if (result) {\n        this.setState({\n          input: val\n        });\n        this.setState({\n          result: false\n        });\n      } else {\n        this.setState({\n          input: this.state.input + val\n        });\n        this.setState({\n          result: false\n        });\n      }\n    } //DESCRIPTION :  function to Caculate values on the basis of Expression and \n    //               set the RESULT to TRUE  \n    //PARAM       :  string expression EG : 2+2+2-1/2\n    //RETURN      :  NO resutn type\n\n  }, {\n    key: \"addCalculator\",\n    value: function addCalculator(val) {\n      if (this.state.result) //if Result  mode is true Calculated value should be added to history\n        return;\n\n      if (this.state.memory.length >= 1) {\n        this.setState({\n          memory: this.state.memory + this.state.input + val\n        });\n        this.setState({\n          input: math.eval(this.state.memory + this.state.input)\n        });\n        this.setState({\n          result: true\n        });\n      } else {\n        this.setState({\n          memory: this.state.input + val\n        });\n        this.setState({\n          result: true\n        });\n      }\n\n      console.log(\"Adding Values : \" + this.state.result);\n    }\n  }, {\n    key: \"charCount\",\n    value: function charCount(input, searchChar) {\n      var num = 0;\n\n      for (var i = 0; i < input.length; i++) {\n        if (input[i] === searchChar) num = num + 1;\n        return num;\n      }\n    }\n  }, {\n    key: \"render\",\n    //DESCRIPTION :  Render Calculatror UI \n    //PARAM       :  NO PARAMETER \n    //RETURN      :  NO Return Type\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Input1, {\n        input: this.state.memory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Input, {\n        input: this.state.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"calc-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"x2\"), React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"sin\"), React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"cos\"), React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"tan\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"10x\"), React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"log\"), React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Exp\"), React.createElement(ButtonOther, {\n        handleClick: this.handleScientific.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Mod\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"7\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"8\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"9\"), React.createElement(ButtonOther, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"/\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"4\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"5\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"6\"), React.createElement(ButtonOther, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"1\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"2\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"3\"), React.createElement(ButtonOther, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"0\"), React.createElement(Button, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \".\"), React.createElement(Button, {\n        handleClick: function handleClick() {\n          return _this2.handleEqual();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"=\"), React.createElement(ButtonOther, {\n        handleClick: this.handleAddToInput.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"-\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(ClearButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }), React.createElement(ClearButton, {\n        handleClear: function handleClear() {\n          _this2.setState({\n            memory: '',\n            input: '0'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"CE\"), React.createElement(ClearButton, {\n        handleClear: function handleClear() {\n          _this2.setState({\n            input: '0'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \" C\"), React.createElement(ButtonOther, {\n        handleClick: function handleClick() {\n          return _this2.handleBackspace();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Backspace\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\App.js"],"names":["React","Component","Button","Input","Input1","ClearButton","ButtonOther","math","App","props","handleAddToInput","val","str","state","input","console","log","isInputEqualZero","setState","charCount","addCalculator","addInputNumbers","result","handleAddToMemory","memory","handleEqual","eval","handleBackspace","len","length","substring","handleScientific","value","sqrt","sin","cos","tan","pow","log10","exp","mod","values","i","string","arr","split","chr","searchChar","num","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from './components/buttons';\nimport Input from './components/input';\nimport Input1 from './components/input1';\nimport ClearButton from './components/clearButton';\nimport ButtonOther from  './components/buttonOther'; \nimport './components/buttons.css';\nimport './components/buttons.css';\nimport * as math from 'mathjs';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        input: '0',\n        memory :'',\n        result : false,\n        values :[]\n    }\n  }\n\n  //DESCRIPTION :  function to handle user input\n  //PARAM       :  string (0-9) and Signs(+ , - , / *)\n  //RETURN      :  No return type  \n   handleAddToInput = val => {\n    \n     var str =  this.state.input;  \n     console.log(str);\n     console.log(this.isInputEqualZero(str));\n      \n     if(this.isInputEqualZero(str)) {\n              this.setState({\n                    input: val\n              });\n              return;\n     }\n\n    if (val === \".\") {\n      if (this.charCount(this.state.input, \".\") > 0) {\n\n        this.setState({\n          input: this.state.input\n        });\n        return;\n\n      } else {\n\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n\n    }\n\n    switch(val){\n   \n      case \"+\":{\n           this.addCalculator(val);\n           console.log(\"Addtion Operation\");            \n           break;\n       } \n       case \"-\" :{\n           this.addCalculator(val);\n           console.log(\"Subtrct Operation\");    \n           break;\n       }\n\n       case \"/\" : {\n           this.addCalculator(val); \n           console.log(\"Devide Operation\");\n           break; \n       }\n\n       case \"*\" : {\n           this.addCalculator(val);\n           console.log(\"Multiply Operation\");\n           break;\n       }\n\n       default:{\n            this.addInputNumbers(this.state.result, val);\n            console.log(\"Default Opeartion\");\n            break;     \n\n     }\n   }\n\n}\n\n  //DESCRIPTION :  function to Check Eithet first input is ZERO\n  //PARAM       :  string\n  //RETURN      :  TRUE : if first character is 0  \n  //               FALSE: if first charcter is not 0\n\n  isInputEqualZero(str) {\n    for (let i = 0; i < str.length; i++) {\n      if (str[0] === \"0\"){\n        return true;\n      }\n      return false; \n    }\n  }\n\n  //DESCRIPTION :  function to Check Eithet last character in Sign\n  //PARAM       :  string\n  //RETURN      :  character Sign or maybe True if Sign      \n  isLastSign(string) {\n    if (string.len > 0){\n       var arr =  string.split(',');\n       var chr =  arr[arr.length-1];\n       console.log(chr);\n       return chr;         \n    }  \n\n  }\n \n //DESCRIPTION :  function to Check status of Result mode and Change Input \n //PARAM       :  RESULT=Boolean, VAL= and number 0-9\n //RETURN      :  NO RETURN      \n addInputNumbers(result, val){\n       console.log(result);    \n       if(result){\n            this.setState({input:val});\n            this.setState({ result:  false });    \n        }else{\n           this.setState({input:  this.state.input + val});\n           this.setState({result: false });\n        }\n  }\n\n  //DESCRIPTION :  function to Caculate values on the basis of Expression and \n  //               set the RESULT to TRUE  \n  //PARAM       :  string expression EG : 2+2+2-1/2\n  //RETURN      :  NO resutn type\n  \n  addCalculator(val) {\n    \n    if(this.state.result) //if Result  mode is true Calculated value should be added to history\n       return;    \n      \n    if (this.state.memory.length >= 1) {\n        this.setState({ memory: this.state.memory + this.state.input + val })\n        this.setState({ input: math.eval(this.state.memory + this.state.input) });\n        this.setState({ result: true });\n    } else {\n        this.setState({ memory: this.state.input + val });\n        this.setState({ result: true });\n    }\n\n       console.log(\"Adding Values : \" + this.state.result);\n  }\n\n\n\ncharCount(input, searchChar){\n   let num = 0;  \n   for(let i = 0 ; i < input.length ; i++){\n        if(input[i]===searchChar)\n          num = num + 1;\n          \n        return num;   \n   }\n\n}\n\nhandleAddToMemory =  val =>{\n           \n    if (val === \"0\")\n          return;\n   \n    //  if (this.state.memory.length === 1 && \n    //       ( val ===\"*\" || val ===\"/\" || val ===\"+\" || val ===\"-\")){\n    //       return;\n    //   }else{\n    //      this.setState({ memory: this.state.memory + this.state.input +  val});\n     \n    //   }\n    console.log(val); \n      \n    switch(val){\n   \n       case \"+\":{\n          if(this.state.memory === \" \"){\n             this.setState({memory : this.state.input + val});\n             console.log(\"Add\" + this.state.input + \" : \" + val);\n          }    \n          break;\n        } \n        case \"-\" :{\n          console.log(\"Subtrct\");    \n          break;\n        }\n\n        case \"/\" : {\n          console.log(\"Devide\");\n          break; \n        }\n\n        case \"*\" : {\n          console.log(\"Multiply\");\n          break;\n        }\n        case \"1\" : {\n              this.setState.input === \"0\" ? this.setState({input: val })\n                                          : this.setState({input: this.state.input + val});\n              break;     \n        }\n        \n        default:{\n             console.log(\"Default Case....\");\n      }\n    }\n\n}\n\n\n  //DESCRIPTION :  function to Caculate values on the basis of Expression  \n  //               set the RESULT to TRUE and Clear the History \n  //PARAM       :  NO PARAMETER \n  //RETURN      :  NO Return Type\n\n  handleEqual = val => {\n\n        if(this.state.memory === 0 ){\n           return; \n        }\n        \n        this.setState({ input: math.eval(this.state.memory + this.state.input) });\n        this.setState({ memory :'' });\n        this.setState({result : true});\n  }\n\n  //DESCRIPTION :  function to remove input character by Character  \n  //PARAM       :  NO PARAMETER \n  //RETURN      :  NO Return Type\n\n  handleBackspace = val => {\n    const str = this.state.input;\n    const len = this.state.input.length;\n\n    if (str.length > 1) {\n      this.setState({ input: str.substring(0, len - 1) });\n    }else{\n      this.setState({ input: \"0\" });\n    }\n\n\n  }\n\n  //DESCRIPTION :  function to perform Scientific calculations \n  //               on the basis of selection and input  \n  //               set the RESULT to TRUE History will not be effected or used. \n  //PARAM       :  NO PARAMETER \n  //RETURN      :  NO Return Type\n\nhandleScientific = val => {\n  \n  if(val==='0')\n      return;\n\n  switch (val) {\n    case 'x2': {\n      let value  =  this.state.input; //This line can be Elaminate further\n      this.setState({ input: math.sqrt(value) });\n      this.setState({result:true});\n      break;\n    }\n\n    case 'sin': {\n      let value  =  this.state.input;  //This line can be Elaminate further\n      this.setState({ input: math.sin(value) });\n      this.setState({result:true});\n      break;\n    }\n\n    case 'cos': {\n      let value  =  this.state.input; //This line can be Elaminate further\n      this.setState({ input: math.cos(value) });\n      this.setState({result:true});\n      break;\n    }\n\n    case 'tan': {\n      let value  =  this.state.input; //This line can be Elaminate further\n      this.setState({ input: math.tan(value) });\n      this.setState({result:true});\n      break;\n    }\n\n    case '10x': {\n      let value  =  this.state.input; //This line can be Elaminate further\n      this.setState({ input: math.pow(10,value) });\n      this.setState({result:true});\n      break;\n    }\n\n    case 'log': {\n      let value  =  this.state.input; //This line can be Elaminate further\n      this.setState({ input: math.log10(value)});\n      this.setState({result:true});\n      break;\n    }\n\n    case 'Exp': {\n      let value  =  this.state.input; //This line can be Elaminate further\n      this.setState({ input: math.exp(value)});\n      this.setState({result:true});\n      break;\n    }\n\n    case 'Mod': {\n      let value  =  this.state.input;  //line can be Elaminate further\n      this.setState({ input: math.mod(value,2)});\n      this.setState({result:true});   \n      break;\n\n    }\n    default:{\n         console.log(\"Un know operation selected...\");\n         break;\n    }\n\n  } /// End Case\n \n}\n\n\n\n  //DESCRIPTION :  Render Calculatror UI \n  //PARAM       :  NO PARAMETER \n  //RETURN      :  NO Return Type\n\n\nrender() {\n    return (\n      <div className=\"App\">\n      {/* <ItemsAPI/>   */}\n      <div> \n        <div className='row'>\n          <Input1 input={this.state.memory}></Input1>\n        </div>\n        <div>  \n          <Input input={this.state.input}></Input>\n        </div>\n\n        <div className=\"calc-wrapper\">\n         <div className='row'>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>x2</ButtonOther>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>sin</ButtonOther>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>cos</ButtonOther>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>tan</ButtonOther>\n        </div>\n\n        <div className='row'>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>10x</ButtonOther>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>log</ButtonOther>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>Exp</ButtonOther>\n          <ButtonOther handleClick={this.handleScientific.bind(this)}>Mod</ButtonOther>\n        </div>\n\n        <div className='row'>\n          <Button handleClick={this.handleAddToInput.bind(this)}>7</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>8</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>9</Button>\n          <ButtonOther handleClick={this.handleAddToInput.bind(this)}>/</ButtonOther>\n        </div>\n\n        <div className='row'>\n          <Button handleClick={this.handleAddToInput.bind(this)}>4</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>5</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>6</Button>\n          <ButtonOther handleClick={this.handleAddToInput.bind(this)}>*</ButtonOther>\n        </div>\n\n        <div className='row'>\n          <Button handleClick={this.handleAddToInput.bind(this)}>1</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>2</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>3</Button>\n          <ButtonOther handleClick={this.handleAddToInput.bind(this)}>+</ButtonOther>\n        </div>\n\n        <div className='row'>\n          <Button handleClick={this.handleAddToInput.bind(this)}>0</Button>\n          <Button handleClick={this.handleAddToInput.bind(this)}>.</Button>\n          <Button handleClick={() => this.handleEqual()}>=</Button>\n          <ButtonOther handleClick={this.handleAddToInput.bind(this)}>-</ButtonOther>\n        </div>\n\n        <div className='row'>\n          \n           <ClearButton/>  \n\n          <ClearButton handleClear={() => { \n                      this.setState({memory:'', input:'0'});\n                }}>CE\n          </ClearButton>\n\n           <ClearButton handleClear={() =>{ \n                      this.setState({input:'0'})}\n                  }> C\n           </ClearButton>\n           <ButtonOther handleClick={() => this.handleBackspace()}>Backspace</ButtonOther>\n        </div>\n      </div>\n   </div>\n   </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}