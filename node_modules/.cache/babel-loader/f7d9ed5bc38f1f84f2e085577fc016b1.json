{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\summary\\\\summary.jsx\";\nimport React, { Component } from 'react';\nimport request from 'superagent';\nimport Moment from 'moment';\nimport '../../assets/css/series/series.css'; //import axios                from 'axios';\n\nvar Series =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Series, _Component);\n\n  function Series(props) {\n    var _this;\n\n    _classCallCheck(this, Series);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Series).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var baseUrl, match, Url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              baseUrl = _this.state.baseUrl;\n              match = _this.props.location.state.match;\n              console.log(match); // fetch(\"http://back.cricwick.net/api/v3/view_lists/get_by_name?view=home\")\n              //Home Series Api  \n\n              Url = baseUrl + '/' + 'v3' + '/' + '/matches' + '/' + '2402' + '/' + 'summary'; //console.log(Url);\n              //console.log(hasMore);\n\n              request.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleClick = function (selectedType) {\n      if (!selectedType) {\n        _this.setState({\n          selectedType: 'summary'\n        });\n      } else {\n        _this.setState({\n          selectedType: selectedType\n        });\n      }\n    };\n\n    _this.renderSeries = function (data) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, data.map(function (series, i) {\n        return React.createElement(\"div\", {\n          key: series.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"video-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \" \", series.title, \" \"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"video-series-start-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, Moment(new Date(series.start_date)).format(\"DD MMM\"), \" \", \" - \", Moment(new Date(series.start_date)).format(\"DD MMM\")), data.length !== i + 1 ? React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }) : '');\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      selectedType: 'summary',\n      baseUrl: 'https://back.cricwick.net/api'\n    };\n    return _this;\n  }\n\n  _createClass(Series, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords(); // this.state.seriesData['live_series'].map((item,i)=>(\n      //       console.log(item)\n      // ));\n      //console.log( \"From Component Did Mount : \" , this.state.seriesData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-block mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn link-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('live_series');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Live\"), React.createElement(\"button\", {\n          className: \"btn link-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('upcoming_series');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Upcomming\"), React.createElement(\"button\", {\n          className: \"btn link-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('recent_series');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Result\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"This Summary Page\")));\n      }\n    }\n  }]);\n\n  return Series;\n}(Component);\n\nexport default Series;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\summary\\summary.jsx"],"names":["React","Component","request","Moment","Series","props","loadSeriesRecords","baseUrl","state","match","location","console","log","Url","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","catch","error","handleClick","selectedType","renderSeries","data","map","series","i","id","title","Date","start_date","format","length","hasMore","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport request              from 'superagent';\r\nimport Moment               from 'moment';\r\nimport '../../assets/css/series/series.css';\r\n//import axios                from 'axios';\r\n\r\nclass Series extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            selectedType:'summary', \r\n            baseUrl: 'https://back.cricwick.net/api',\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n        // this.state.seriesData['live_series'].map((item,i)=>(\r\n        //       console.log(item)\r\n        // ));\r\n        //console.log( \"From Component Did Mount : \" , this.state.seriesData);\r\n    }\r\n   \r\n    loadSeriesRecords = async () =>{\r\n        const { baseUrl} =  this.state;\r\n        const {match} = this.props.location.state;\r\n\r\n        console.log(match);\r\n\r\n          // fetch(\"http://back.cricwick.net/api/v3/view_lists/get_by_name?view=home\")\r\n          //Home Series Api  \r\n      \r\n          const Url = baseUrl + '/'\r\n                      + 'v3' \r\n                      + '/' \r\n                      + '/matches' \r\n                      + '/'\r\n                      + '2402'\r\n                      + '/'\r\n                      + 'summary'\r\n\r\n\r\n          //console.log(Url);\r\n          //console.log(hasMore);\r\n          \r\n          request\r\n              .get(Url)\r\n              .set('Accept','application/json')\r\n              .then(res => {\r\n                  this.setState({\r\n                      isLoaded: true,\r\n                      isLoading: false,\r\n                      seriesData: res.body,\r\n                  });\r\n              })\r\n              .catch(error => {\r\n                  this.setState({\r\n                      isLoaded: false,\r\n                      error\r\n                  });\r\n             });\r\n      }\r\n\r\n    handleClick = (selectedType) => {\r\n        \r\n        if (!selectedType) {\r\n            this.setState({ selectedType: 'summary' });\r\n        } else {\r\n            this.setState({ selectedType: selectedType });\r\n      }\r\n\r\n    }\r\n\r\n    renderSeries = (data) => {\r\n        return (\r\n            <div>\r\n                {data.map((series, i) => (\r\n                    <div key={series.id}>\r\n                        <span className='video-title'> {series.title} </span>\r\n                        <br/>\r\n                        <span className='video-series-start-end'>\r\n                            {Moment(new Date(series.start_date)).format(\"DD MMM\")} {\" - \"}\r\n                            {Moment(new Date(series.start_date)).format(\"DD MMM\")}\r\n                        </span>\r\n                        {data.length !== (i + 1) ? <hr /> : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { error, isLoaded} = this.state;\r\n                \r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n\r\n        return (\r\n            <div>\r\n                <div className='card card-block mb-1'>\r\n                    <span>\r\n                        <button className='btn link-button btn-link mr-2 btn-sm' onClick={() => this.handleClick('live_series')} >Live</button>\r\n                        <button className='btn link-button btn-link mr-2 btn-sm' onClick={() => this.handleClick('upcoming_series')}>Upcomming</button>\r\n                        <button className='btn link-button btn-link mr-2 btn-sm' onClick={() => this.handleClick('recent_series')}>Result</button>\r\n                    </span>\r\n                 \r\n                 <div>This Summary Page</div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  } \r\n}\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}