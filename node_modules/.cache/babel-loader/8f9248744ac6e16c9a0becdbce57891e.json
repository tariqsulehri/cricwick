{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\ranking\\\\ranking.jsx\";\nimport React, { Component } from 'react'; //import http from '../../services/httpService';\n\nimport http from 'superagent';\nimport '../../assets/css/ranking/ranking.css';\n\nvar Ranking =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Ranking, _Component);\n\n  function Ranking() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Ranking);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Ranking)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      selectedType: 'TEST',\n      seriesData: [],\n      baseUrl: 'https://back.cricwick.net/api',\n      page: 1,\n      perPage: 5,\n      article: [],\n      showFull: false\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadSeriesRecords();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, selectedType, baseUrl, Url;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, selectedType = _this$state.selectedType, baseUrl = _this$state.baseUrl; // 1) All Videos :\n              //    Base URL =   https://back.cricwick.net/api \n              //    Composed =  /articles?page=1&page_size=6\n\n              Url = baseUrl + '/' + 'ranking' + '?' + 'type=' + selectedType;\n              console.log(Url);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return http.get(Url).then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body,\n                  hasMore: true\n                });\n              });\n\n            case 6:\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _this.setState({\n                isLoaded: false,\n                error: _context2.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[3, 8]]);\n    }));\n\n    _this.handleClikc = function (article) {\n      _this.setState({\n        showFull: true,\n        article: article\n      });\n    };\n\n    _this.hideDetail = function () {\n      _this.setState({\n        showFull: !_this.state.showFull\n      });\n    };\n\n    _this.handleClick = function (rankingType) {\n      if (rankingType === 'ODI') {\n        _this.setState({\n          selectedType: 'ODI'\n        });\n      }\n\n      if (rankingType === 'T20') {\n        _this.setState({\n          selectedType: 'T20'\n        });\n      }\n\n      if (rankingType === 'TEST') {\n        _this.setState({\n          selectedType: 'TEST'\n        });\n      }\n    };\n\n    _this.renderRanking = function (data) {\n      return React.createElement(\"div\", {\n        className: \"card card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Rank\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Team\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Matches\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Points\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Rating\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, data.map(function (ranker, i) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, i + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: ranker.team_flag,\n          alt: \"noImage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }), ranker.team_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, ranker.match_count), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, ranker.points), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, ranker.rating));\n      }))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Ranking, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          seriesData = _this$state2.seriesData,\n          selectedType = _this$state2.selectedType,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \" Error : \", error.response);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn mybutton btn-default mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('TEST');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"TEST\"), React.createElement(\"button\", {\n          className: \"btn mybutton btn-default mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('ODI');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"ODI\"), React.createElement(\"button\", {\n          className: \"btn mybutton btn-default mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('T20');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"T20\"))), React.createElement(\"div\", {\n          className: \"card p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"home-ranking-main-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"ICC RANKING -\", React.createElement(\"span\", {\n          className: \"home-ranking-main-title-dynamic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, ' ', \" \", selectedType)), this.renderRanking(seriesData.teams)));\n      }\n    }\n  }]);\n\n  return Ranking;\n}(Component);\n\nexport default Ranking;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\ranking\\ranking.jsx"],"names":["React","Component","http","Ranking","state","error","isLoaded","isLoading","hasMore","selectedType","seriesData","baseUrl","page","perPage","article","showFull","componentDidMount","loadSeriesRecords","Url","console","log","get","then","res","setState","body","handleClikc","hideDetail","handleClick","rankingType","renderRanking","data","map","ranker","i","team_flag","team_name","match_count","points","rating","response","teams"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import http from '../../services/httpService';\r\nimport http from 'superagent' ;\r\nimport '../../assets/css/ranking/ranking.css';\r\n\r\nclass Ranking extends Component {\r\n    state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        isLoading: false,\r\n        hasMore: true,\r\n        selectedType: 'TEST',\r\n        seriesData: [],\r\n        baseUrl: 'https://back.cricwick.net/api',\r\n        page: 1,\r\n        perPage: 5,\r\n        article: [],\r\n        showFull: false,\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.loadSeriesRecords();\r\n    }\r\n\r\n    loadSeriesRecords = async () => {\r\n        const { selectedType, baseUrl } = this.state;\r\n\r\n        // 1) All Videos :\r\n        //    Base URL =   https://back.cricwick.net/api \r\n        //    Composed =  /articles?page=1&page_size=6\r\n\r\n        let Url = baseUrl\r\n            + '/'\r\n            + 'ranking'\r\n            + '?'\r\n            + 'type='\r\n            + selectedType\r\n\r\n        console.log(Url);\r\n\r\n        try {\r\n            await http\r\n                .get(Url)\r\n                .then(res => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        isLoading: false,\r\n                        seriesData: res.body,\r\n                        hasMore : true\r\n                    });\r\n                })\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoaded: false,\r\n                error: error\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleClikc = (article) => {\r\n        this.setState({\r\n            showFull: true, article\r\n        });\r\n    }\r\n\r\n    hideDetail = () => {\r\n        this.setState({\r\n            showFull: !this.state.showFull\r\n        });\r\n    }\r\n\r\n    handleClick = (rankingType) => {\r\n\r\n        if (rankingType === 'ODI') {\r\n            this.setState({ selectedType:'ODI' });\r\n        }\r\n\r\n        if (rankingType === 'T20') {\r\n            this.setState({ selectedType: 'T20' });\r\n        }\r\n\r\n        if (rankingType === 'TEST') {\r\n            this.setState({ selectedType: 'TEST' });\r\n        }\r\n\r\n    }\r\n\r\n    renderRanking = (data) => {\r\n\r\n        return (\r\n            <div className='card card-block'>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Team</th>\r\n                            <th>Matches</th>\r\n                            <th>Points</th>\r\n                            <th>Rating</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((ranker, i)=>(\r\n                        <tr>\r\n                            <td>{i+1}</td>\r\n                            <td>\r\n                                <img src={ranker.team_flag} alt='noImage'/>\r\n                                {ranker.team_name}\r\n                             </td>\r\n                            <td>{ranker.match_count}</td>\r\n                            <td>{ranker.points}</td>\r\n                            <td>{ranker.rating}</td>\r\n                        </tr>\r\n\r\n                        ))}\r\n                    </tbody>\r\n                   \r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n\r\n        const { seriesData, selectedType,error, isLoaded } = this.state;\r\n        if (error) {\r\n            return (<div> Error : {error.response}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n            return (\r\n                <div>\r\n\r\n                    <div>\r\n                        <span>\r\n                            <button className='btn mybutton btn-default mr-2 btn-sm' onClick={() => this.handleClick('TEST')}>TEST</button>\r\n                            <button className='btn mybutton btn-default mr-2 btn-sm' onClick={() => this.handleClick('ODI')} >ODI</button>\r\n                            <button className='btn mybutton btn-default mr-2 btn-sm' onClick={() => this.handleClick('T20')}>T20</button>\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n                    {/* <!-- This  following Code is for  ODI/T20/TEST Ranking  --> */}\r\n\r\n                    <div className=\"card p-3 mb-1\">\r\n                        <h6 className=\"home-ranking-main-title\">\r\n                            ICC RANKING -\r\n                                   <span className='home-ranking-main-title-dynamic'>\r\n                                {' '} {selectedType}\r\n                            </span>\r\n                        </h6>\r\n\r\n                        {this.renderRanking(seriesData.teams)}\r\n                       \r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ranking;"]},"metadata":{},"sourceType":"module"}