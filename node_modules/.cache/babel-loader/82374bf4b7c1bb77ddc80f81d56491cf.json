{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\common\\\\scheduleMatches.jsx\";\nimport React, { Component } from \"react\";\nimport Moment from \"moment\";\nimport \"../../assets/css/home/homeCenterPanel.css\";\n\nvar ScheduleMatches =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScheduleMatches, _Component);\n\n  function ScheduleMatches(props) {\n    var _this;\n\n    _classCallCheck(this, ScheduleMatches);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScheduleMatches).call(this, props));\n\n    _this.headerTextMatchStatusClass = function (status) {\n      var isClass = status === \"Live\" ? \"header-text-match-status-live\" : \"header-text-match-status-normal\";\n      return isClass;\n    };\n\n    _this.renderUpcommingDateTime = function (match) {\n      var dateTimeString = \"\";\n\n      if (match.match_state === \"Scheduled\") {\n        dateTimeString = \" \" + Moment(new Date(match.match_start)).format(\"DD MMM\") + \", \" + Moment(new Date(match.match_start)).format(\"hh:mm a\");\n      } else {\n        dateTimeString = \"\";\n      }\n\n      return dateTimeString;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ScheduleMatches, [{\n    key: \"renderMatchTeamATag\",\n    value: function renderMatchTeamATag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703\n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs\n      var scoreString = \"\";\n      var teamA = match.team_1_id; //console.log( 'A ' ,teamA);\n      //console.log( 'Innings ' , match);\n\n      if (!match.innings) {\n        //console.log('Team=>(A) not yet Played...');\n        return \"\";\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamA;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === \"T20\" || match.format === \"ODI\") {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        } else {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        }\n\n        return \"scoreString\";\n      }); //console.log(scoreString);\n\n      return scoreString;\n    }\n  }, {\n    key: \"renderMatchTeamBTag\",\n    value: function renderMatchTeamBTag(match) {\n      // innings_order = 1, 2, 3, 4\n      // batting_team_id':  702,703\n      // fielding_team_id': 703,702\n      // inning.wickets, inning.run, inning.overs\n      var scoreString = \"\";\n      var teamB = match.team_2_id;\n\n      if (!match.innings) {\n        //console.log('Team=>(B) not yet Played...');\n        return \"\";\n      }\n\n      var maxInning = match.innings.length;\n      var innings = match.innings.filter(function (x) {\n        return x.batting_team_id === teamB;\n      });\n      innings.map(function (inning, inningCNT) {\n        if (match.format === \"T20\" || match.format === \"ODI\") {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        } else {\n          scoreString += (inningCNT > 0 ? \" & \" : \"\") + inning.runs + (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") + (inning.declared ? \"d\" : \"\") + (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\n        }\n\n        return \"scoreString\";\n      });\n      return scoreString;\n    } //This Method Change Color on the basic of Match Status if Live it will be red\n\n  }, {\n    key: \"renderMatchStatusAtHeader\",\n    //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE.\n    value: function renderMatchStatusAtHeader(match) {\n      var tagText = \"\";\n\n      if (match.match_state === \"Scheduled\") {\n        tagText = \"Upcomming\";\n        return tagText;\n      }\n\n      if (match.break_type === \"\") {\n        tagText = match.match_state;\n      } else {\n        tagText = match.break_type;\n      }\n\n      return tagText;\n    } //-------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      console.log(match); // match_state: 'Over', detail: 'South Africa won by 6 wickets'\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"left-div\",\n        className: \"flex-container\",\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: 30 + \"%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 40 + \"px\",\n          height: 40 + \"px\"\n        },\n        src: match.team_1.team.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.renderMatchTeamATag(match)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"center-div\",\n        style: {\n          width: 40 + \"%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-text-match\",\n        style: {\n          color: \"Gray\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, match.venue.title), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"teamA-short-name\",\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, match.team_1.team.short_name), React.createElement(\"span\", {\n        className: \"header-text-teams-shortname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, match.team_2.team.short_name)), React.createElement(\"div\", {\n        id: \"right-div\",\n        style: {\n          width: 30 + \"%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"header-flag-image\",\n        style: {\n          width: 40 + \"px\",\n          height: 40 + \"px\"\n        },\n        src: match.team_2.team.flag_url,\n        alt: \"no Iamge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"header-text-teama-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.renderMatchTeamBTag(match)), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ScheduleMatches;\n}(Component);\n\nexport default ScheduleMatches;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\common\\scheduleMatches.jsx"],"names":["React","Component","Moment","ScheduleMatches","props","headerTextMatchStatusClass","status","isClass","renderUpcommingDateTime","match","dateTimeString","match_state","Date","match_start","format","state","scoreString","teamA","team_1_id","innings","maxInning","length","filter","x","batting_team_id","map","inning","inningCNT","runs","wickets","declared","innings_order","overs","teamB","team_2_id","tagText","break_type","console","log","display","width","height","team_1","team","flag_url","renderMatchTeamATag","color","venue","title","short_name","team_2","renderMatchTeamBTag"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Moment from \"moment\";\r\nimport \"../../assets/css/home/homeCenterPanel.css\";\r\n\r\nclass ScheduleMatches extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  renderMatchTeamATag(match) {\r\n    // innings_order = 1, 2, 3, 4\r\n    // batting_team_id':  702,703\r\n    // fielding_team_id': 703,702\r\n    // inning.wickets, inning.run, inning.overs\r\n\r\n    let scoreString = \"\";\r\n    const teamA = match.team_1_id;\r\n\r\n    //console.log( 'A ' ,teamA);\r\n    //console.log( 'Innings ' , match);\r\n\r\n    if (!match.innings) {\r\n      //console.log('Team=>(A) not yet Played...');\r\n      return \"\";\r\n    }\r\n\r\n    const maxInning = match.innings.length;\r\n\r\n    const innings = match.innings.filter(x => x.batting_team_id === teamA);\r\n\r\n    innings.map((inning, inningCNT) => {\r\n      if (match.format === \"T20\" || match.format === \"ODI\") {\r\n        scoreString +=\r\n          (inningCNT > 0 ? \" & \" : \"\") +\r\n          inning.runs +\r\n          (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n          (inning.declared ? \"d\" : \"\") +\r\n          (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n      } else {\r\n        scoreString +=\r\n          (inningCNT > 0 ? \" & \" : \"\") +\r\n          inning.runs +\r\n          (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n          (inning.declared ? \"d\" : \"\") +\r\n          (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n      }\r\n\r\n      return \"scoreString\";\r\n    });\r\n\r\n    //console.log(scoreString);\r\n\r\n    return scoreString;\r\n  }\r\n\r\n  renderMatchTeamBTag(match) {\r\n    // innings_order = 1, 2, 3, 4\r\n    // batting_team_id':  702,703\r\n    // fielding_team_id': 703,702\r\n    // inning.wickets, inning.run, inning.overs\r\n\r\n    let scoreString = \"\";\r\n    const teamB = match.team_2_id;\r\n\r\n    if (!match.innings) {\r\n      //console.log('Team=>(B) not yet Played...');\r\n      return \"\";\r\n    }\r\n\r\n    const maxInning = match.innings.length;\r\n    const innings = match.innings.filter(x => x.batting_team_id === teamB);\r\n\r\n    innings.map((inning, inningCNT) => {\r\n      if (match.format === \"T20\" || match.format === \"ODI\") {\r\n        scoreString +=\r\n          (inningCNT > 0 ? \" & \" : \"\") +\r\n          inning.runs +\r\n          (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n          (inning.declared ? \"d\" : \"\") +\r\n          (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n      } else {\r\n        scoreString +=\r\n          (inningCNT > 0 ? \" & \" : \"\") +\r\n          inning.runs +\r\n          (inning.wickets < 10 ? \"/\" + inning.wickets : \"\") +\r\n          (inning.declared ? \"d\" : \"\") +\r\n          (maxInning === inning.innings_order ? \" (\" + inning.overs + \")\" : \"\");\r\n      }\r\n\r\n      return \"scoreString\";\r\n    });\r\n\r\n    return scoreString;\r\n  }\r\n\r\n  //This Method Change Color on the basic of Match Status if Live it will be red\r\n  headerTextMatchStatusClass = status => {\r\n    const isClass =\r\n      status === \"Live\"\r\n        ? \"header-text-match-status-live\"\r\n        : \"header-text-match-status-normal\";\r\n    return isClass;\r\n  };\r\n\r\n  //This method return the MATCH_STATUS text if the break type is Empty Otherwize return BREAK_TYPE.\r\n  renderMatchStatusAtHeader(match) {\r\n    let tagText = \"\";\r\n\r\n    if (match.match_state === \"Scheduled\") {\r\n      tagText = \"Upcomming\";\r\n      return tagText;\r\n    }\r\n\r\n    if (match.break_type === \"\") {\r\n      tagText = match.match_state;\r\n    } else {\r\n      tagText = match.break_type;\r\n    }\r\n    return tagText;\r\n  }\r\n  //-------------------------------------------------------------------------------------------------\r\n\r\n  renderUpcommingDateTime = match => {\r\n    let dateTimeString = \"\";\r\n\r\n    if (match.match_state === \"Scheduled\") {\r\n      dateTimeString =\r\n        \" \" +\r\n        Moment(new Date(match.match_start)).format(\"DD MMM\") +\r\n        \", \" +\r\n        Moment(new Date(match.match_start)).format(\"hh:mm a\");\r\n    } else {\r\n      dateTimeString = \"\";\r\n    }\r\n\r\n    return dateTimeString;\r\n  };\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n\r\n    console.log(match);\r\n    // match_state: 'Over', detail: 'South Africa won by 6 wickets'\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"left-div\" className=\"flex-container\"  style={{ display: \"flex\" }}>\r\n          <div style={{ width: 30 + \"%\" }}>\r\n            {/* Following Code Render Flag of Team A */}\r\n\r\n            <img\r\n              className=\"header-flag-image\"\r\n              style={{ width: 40 + \"px\", height: 40 + \"px\" }}\r\n              src={match.team_1.team.flag_url}\r\n              alt=\"no Iamge\"\r\n            />\r\n\r\n            {/* Following Code Render Score team A */}\r\n            <span className=\"header-text-teama-score\">\r\n              {this.renderMatchTeamATag(match)}\r\n            </span>\r\n            <br />\r\n          </div>\r\n\r\n          <div id=\"center-div\" style={{ width: 40 + \"%\" }}>\r\n            <span className=\"header-text-match\" style={{ color: \"Gray\" }}>\r\n              {match.venue.title}\r\n            </span>{\" \"}\r\n            <br />\r\n            <span id=\"teamA-short-name\" className=\"header-text-teams-shortname\">\r\n              {match.team_1.team.short_name}\r\n            </span>\r\n            <span className=\"header-text-teams-shortname\">\r\n              {match.team_2.team.short_name}\r\n            </span>\r\n          </div>\r\n\r\n         \r\n          {/* Following DIVISION for team B */}\r\n          \r\n          <div id=\"right-div\" style={{ width: 30 + \"%\" }}>\r\n            {/* Following Code Render Flags of team B */}\r\n            <img\r\n              className=\"header-flag-image\"\r\n              style={{ width: 40 + \"px\", height: 40 + \"px\" }}\r\n              src={match.team_2.team.flag_url}\r\n              alt=\"no Iamge\"\r\n            />\r\n            {/* Following Code Render Score team B */}\r\n            <span className=\"header-text-teama-score\">\r\n              {this.renderMatchTeamBTag(match)}\r\n            </span>{\" \"}\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Show Result if Match Finished Display Result */}\r\n        {/* <span className='header-text-match-status-live' style={{ color: 'red', fontSize:12+'px', float:'right'  }}>\r\n                     {match.match_state==='Over' ? ' Result' : ''}\r\n                 </span>  */}\r\n\r\n        {/* Following Code Render Live and Scheduled Matched */}\r\n        {/* It Will Show Upcomming instead of Scheduled */}\r\n\r\n        {/* <span className={this.headerTextMatchStatusClass(match.match_state)}>\r\n                    {this.renderMatchStatusAtHeader(match)}\r\n                </span>  \r\n                <br/> */}\r\n\r\n        {/* Match Status/Result on the basic of match_state='Over' show Result Status */}\r\n        {/* <span className='footer-text-center-match-status'>\r\n                   {match.match_state==='Over' ? match.match_result : ''} \r\n                </span> */}\r\n\r\n        {/* Match Status/Result on the basic of match_state='Over' show Result Status */}\r\n        {/* <span className='footer-text-center-match-status'> \r\n                      {this.renderUpcommingDateTime(match)}\r\n                </span> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleMatches;\r\n"]},"metadata":{},"sourceType":"module"}