{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\home\\\\seriesContentsIdentifire.jsx\";\nimport React, { Component } from 'react';\nimport Moment from 'moment';\nimport RenderMatch from './renderMatch';\nimport { Link } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport VideoCardLink from '../common/videoCardLink';\nimport '../../assets/css/home/homeCenterPanel.css';\nimport '../../assets/css/common/videoCards.css';\nimport VideoCardLarge from '../common/videoCardLarge';\nlibrary.add(faPlayCircle);\n\nvar SeriesContentsIdentifire =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SeriesContentsIdentifire, _Component);\n\n  function SeriesContentsIdentifire(props) {\n    var _this;\n\n    _classCallCheck(this, SeriesContentsIdentifire);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SeriesContentsIdentifire).call(this, props));\n    _this.state = {\n      match: '',\n      matchType: ''\n    };\n    return _this;\n  } //----------------------------------------------------------- \n  // This Method Print Series Title on the first card as header. \n\n\n  _createClass(SeriesContentsIdentifire, [{\n    key: \"printMatchCardHeader\",\n    value: function printMatchCardHeader(printSeriesTitle, seriesTitle) {\n      if (printSeriesTitle === 0) {\n        return React.createElement(\"span\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, seriesTitle, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      }\n\n      return;\n    } //-------------------------------------------------------------------------------\n    // 1) This Method Print Particular Series video's Footer the first card as header.\n    // 2) Further this function will also print the first big and remaining card \n    //    in text and image side by side format.     \n\n  }, {\n    key: \"renderVideoCards\",\n    value: function renderVideoCards(printSeriesTitle, video) {\n      if (printSeriesTitle === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"This is Test\") //    <VideoCardLarge video={video} />\n        // <div className='card'>\n        //     <div className='card-body p-3'>\n        //             <div className='video-card-image-size-large'>\n        //                 <img src={video.med_image} alt=\"no Iamge\" />\n        //                 <div className='play-button'>\n        //                     <FontAwesomeIcon color=\"white\"\n        //                         icon={\"play-circle\"}\n        //                         size=\"6x\"\n        //                     />\n        //                 </div>\n        //             </div>\n        //                  <h4 className=\"cardslarge-col-heading-black\">\n        //                     {video.title} \n        //                 </h4>\n        //     </div>\n        // </div>\n        ;\n      } else {\n        return React.createElement(VideoCardLink, {\n          video: video,\n          left_Col: 3,\n          right_Col: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }) // <div className='d-flex'>\n        //     <div className=\"card mb-1 p-0\">\n        //         <div className='card-body p-3'>\n        //             <div className='container'>\n        //                 <Link to=''>\n        //                     <div className='row'>\n        //                         <div className='col-3 card-col-for-image'>\n        //                             <img className='card-image-small'\n        //                                 src={match.med_image}\n        //                                 alt=\"no Iamge\" />\n        //                             <div className='play-button-small'>\n        //                                 <FontAwesomeIcon color=\"white\"\n        //                                     icon={\"play-circle\"}\n        //                                     size=\"4x\"\n        //                                 />\n        //                             </div>\n        //                         </div>\n        //                         <div className='col-9 card-col-for-text'>\n        //                             <h4 className=\"cardsmall-col-heading-black\">\n        //                                 {match.title}\n        //                             </h4>\n        //                             <h6 className='cardsmall-col-sub-heading-gray'>\n        //                                 {match.match_desc}\n        //                             </h6>\n        //                         </div>\n        //                     </div>\n        //                 </Link>\n        //             </div>\n        //             {/* <div className='left-div-30p'>\n        //                         <div className='play-button-small-left'>\n        //                         </div>\n        //                     </div> */}\n        //         </div>\n        //     </div>\n        // </div>\n        ;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          contentType = _this$props.contentType,\n          printSeriesTitle = _this$props.printSeriesTitle,\n          seriesTitle = _this$props.seriesTitle;\n\n      if (contentType === 'matches') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, match.match_state !== 'Scheduled' && React.createElement(Link, {\n          to: {\n            pathname: '/summary/',\n            state: {\n              match: match\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-block mb-1\",\n          style: {\n            minHeight: 75 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, this.printMatchCardHeader(printSeriesTitle, seriesTitle), React.createElement(RenderMatch, {\n          match: match,\n          matchType: contentType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })))), match.match_state === 'Scheduled' && React.createElement(\"div\", {\n          className: \"card card-block mb-1\",\n          style: {\n            minHeight: 75 + \"px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, this.printMatchCardHeader(printSeriesTitle, seriesTitle), React.createElement(RenderMatch, {\n          match: match,\n          matchType: contentType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }))));\n      }\n\n      if (contentType === 'news') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"news-list\",\n          key: match.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/stories',\n            state: {\n              objSelectedStory: match,\n              selectedType: 'Latest_News',\n              showFull: true\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, match.title))));\n      }\n\n      if (contentType === 'videos') {\n        console.log(\"TARIQ : \", contentType, match);\n\n        if (printSeriesTitle === 0) {\n          console.log(\"In Large CArd\", match);\n          return React.createElement(VideoCardLarge, {\n            video: match,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          });\n        }\n\n        if (printSeriesTitle > 0) {\n          return React.createElement(VideoCardLink, {\n            video: match,\n            left_Col: 3,\n            right_Col: 9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          });\n        }\n      }\n\n      if (contentType === 'article') {\n        return React.createElement(\"div\", {\n          className: \"flex-d\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card mb-1 p-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/stories',\n            state: {\n              objSelectedStory: match,\n              selectedType: 'Articles',\n              showFull: true\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-9 card-col-for-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"cardsmall-col-heading-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, match.title), React.createElement(\"h6\", {\n          className: \"cardsmall-col-sub-heading-gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, Moment(new Date(match.created_at)).format(\"DD MMM, YYYY\"))), React.createElement(\"div\", {\n          className: \"col-3 card-col-for-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"card-image-small\",\n          src: match.image,\n          alt: \"no Iamge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }))))))));\n      }\n\n      if (contentType === 'tweets') {\n        return React.createElement(\"a\", {\n          href: match.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card mb-1 tweets-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: match.body\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SeriesContentsIdentifire;\n}(Component);\n\nexport default SeriesContentsIdentifire;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\home\\seriesContentsIdentifire.jsx"],"names":["React","Component","Moment","RenderMatch","Link","library","faPlayCircle","FontAwesomeIcon","VideoCardLink","VideoCardLarge","add","SeriesContentsIdentifire","props","state","match","matchType","printSeriesTitle","seriesTitle","video","contentType","match_state","pathname","minHeight","printMatchCardHeader","id","objSelectedStory","selectedType","showFull","title","console","log","Date","created_at","format","image","url","__html","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment               from 'moment';\r\nimport RenderMatch          from './renderMatch';\r\nimport {Link}               from 'react-router-dom';\r\nimport { library }          from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlayCircle }     from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon }  from \"@fortawesome/react-fontawesome\";\r\nimport VideoCardLink        from '../common/videoCardLink';\r\n\r\nimport '../../assets/css/home/homeCenterPanel.css';\r\nimport '../../assets/css/common/videoCards.css';\r\nimport VideoCardLarge from '../common/videoCardLarge';\r\n\r\nlibrary.add(faPlayCircle);\r\n\r\nclass SeriesContentsIdentifire extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            match: '',\r\n            matchType: '',\r\n        }\r\n    }\r\n\r\n    \r\n  \r\n    \r\n    //----------------------------------------------------------- \r\n    // This Method Print Series Title on the first card as header. \r\n    printMatchCardHeader(printSeriesTitle, seriesTitle) {\r\n        if (printSeriesTitle === 0) {\r\n            return <span className=\"card-title\">\r\n                       {seriesTitle}\r\n                       <hr />\r\n                    </span>\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    //-------------------------------------------------------------------------------\r\n    // 1) This Method Print Particular Series video's Footer the first card as header.\r\n    // 2) Further this function will also print the first big and remaining card \r\n    //    in text and image side by side format.     \r\n    renderVideoCards(printSeriesTitle, video) {\r\n\r\n        if (printSeriesTitle === 0) {\r\n            return (\r\n                <div>This is Test</div>\r\n                //    <VideoCardLarge video={video} />\r\n                // <div className='card'>\r\n                //     <div className='card-body p-3'>\r\n                     \r\n                //             <div className='video-card-image-size-large'>\r\n                //                 <img src={video.med_image} alt=\"no Iamge\" />\r\n                //                 <div className='play-button'>\r\n                //                     <FontAwesomeIcon color=\"white\"\r\n                //                         icon={\"play-circle\"}\r\n                //                         size=\"6x\"\r\n                //                     />\r\n                //                 </div>\r\n                //             </div>\r\n                //                  <h4 className=\"cardslarge-col-heading-black\">\r\n                //                     {video.title} \r\n                //                 </h4>\r\n                //     </div>\r\n                    \r\n                // </div>\r\n            )\r\n\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <VideoCardLink video={video} left_Col={3} right_Col={9} />\r\n                // <div className='d-flex'>\r\n                //     <div className=\"card mb-1 p-0\">\r\n                //         <div className='card-body p-3'>\r\n                //             <div className='container'>\r\n                //                 <Link to=''>\r\n                //                     <div className='row'>\r\n                //                         <div className='col-3 card-col-for-image'>\r\n                //                             <img className='card-image-small'\r\n                //                                 src={match.med_image}\r\n                //                                 alt=\"no Iamge\" />\r\n\r\n                //                             <div className='play-button-small'>\r\n                //                                 <FontAwesomeIcon color=\"white\"\r\n                //                                     icon={\"play-circle\"}\r\n                //                                     size=\"4x\"\r\n                //                                 />\r\n                //                             </div>\r\n\r\n                //                         </div>\r\n\r\n                //                         <div className='col-9 card-col-for-text'>\r\n                //                             <h4 className=\"cardsmall-col-heading-black\">\r\n                //                                 {match.title}\r\n                //                             </h4>\r\n                //                             <h6 className='cardsmall-col-sub-heading-gray'>\r\n                //                                 {match.match_desc}\r\n                //                             </h6>\r\n                //                         </div>\r\n                //                     </div>\r\n\r\n                //                 </Link>\r\n                //             </div>\r\n\r\n                //             {/* <div className='left-div-30p'>\r\n                //                         <div className='play-button-small-left'>\r\n                //                         </div>\r\n                //                     </div> */}\r\n                //         </div>\r\n                //     </div>\r\n                // </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { match, contentType, printSeriesTitle, seriesTitle } = this.props;\r\n        if (contentType === 'matches') {\r\n            return (\r\n              <div>   \r\n                    {match.match_state !== 'Scheduled' &&\r\n                        <Link to={{ pathname: '/summary/', state: { match: match } }}>\r\n                            <div className=\"card card-block mb-1\" style={{ minHeight: 75 + \"px\" }}>\r\n                                <div className=\"card-body p-3\">\r\n                                    {this.printMatchCardHeader(printSeriesTitle, seriesTitle)}\r\n                                    <RenderMatch match={match} matchType={contentType} />\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    }\r\n\r\n                    {match.match_state === 'Scheduled' &&\r\n                        <div className=\"card card-block mb-1\" style={{ minHeight: 75 + \"px\" }}>\r\n                            <div className=\"card-body p-3\">\r\n                                {this.printMatchCardHeader(printSeriesTitle, seriesTitle)}\r\n                                <RenderMatch match={match} matchType={contentType} />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n             </div>  \r\n\r\n            );\r\n        }\r\n\r\n        if (contentType === 'news') {\r\n            return (\r\n                <div>\r\n                    <ul>\r\n                        <li className='news-list'  key={match.id}>\r\n                            <Link to={{\r\n                                pathname: '/stories',\r\n                                state: {\r\n                                    objSelectedStory: match,\r\n                                    selectedType: 'Latest_News',\r\n                                    showFull: true\r\n                                }\r\n                            }}>\r\n\r\n                                {match.title}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (contentType === 'videos') {\r\n            console.log(\"TARIQ : \",contentType, match);              \r\n            \r\n            if(printSeriesTitle===0){\r\n                console.log(\"In Large CArd\", match)\r\n                return(<VideoCardLarge video={match}/>)\r\n            }\r\n            \r\n            if(printSeriesTitle > 0){\r\n                return(<VideoCardLink video={match} left_Col={3} right_Col={9} />)\r\n            }\r\n\r\n        }\r\n\r\n        if (contentType === 'article') {\r\n            return (\r\n                <div className=\"flex-d\">\r\n                    <div className=\"card mb-1 p-0\">\r\n                        <div className='card-body p-3'>\r\n                            <div className='container'>\r\n                                <Link to={{\r\n                                    pathname: '/stories',\r\n                                    state: {\r\n                                        objSelectedStory: match,\r\n                                        selectedType: 'Articles',\r\n                                        showFull: true }}}>\r\n                                        \r\n                                    <div className='row'>\r\n                                        <div className='col-9 card-col-for-text'>\r\n                                            <h4 className=\"cardsmall-col-heading-black\">\r\n                                                {match.title}\r\n                                            </h4>\r\n                                            <h6 className='cardsmall-col-sub-heading-gray'>\r\n                                                {Moment(new Date(match.created_at)).format(\"DD MMM, YYYY\")}\r\n                                            </h6>\r\n                                        </div>\r\n\r\n                                        <div className='col-3 card-col-for-image'>\r\n                                            <img className='card-image-small'\r\n                                                src={match.image}\r\n                                                alt=\"no Iamge\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (contentType === 'tweets') {\r\n\r\n            return (\r\n                <a href={match.url} target='_blank' rel='noopener noreferrer' >\r\n                    <div className='card mb-1 tweets-card'>\r\n                        <div className='card-body p-3'>\r\n                            <span\r\n                                dangerouslySetInnerHTML={{ __html: match.body }}>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SeriesContentsIdentifire;"]},"metadata":{},"sourceType":"module"}