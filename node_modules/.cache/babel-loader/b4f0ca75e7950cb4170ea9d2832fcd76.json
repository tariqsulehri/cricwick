{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\cric-ngif\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\cric-ngif\\\\src\\\\components\\\\series\\\\series.jsx\";\nimport React, { Component } from 'react';\nimport request from 'superagent';\nimport Moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport '../../assets/css/series/series.css'; //import axios                from 'axios';\n\nvar Series =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Series, _Component);\n\n  function Series(props) {\n    var _this;\n\n    _classCallCheck(this, Series);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Series).call(this, props));\n    _this.loadSeriesRecords =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, page, perPage, baseUrl, Url;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, page = _this$state.page, perPage = _this$state.perPage, baseUrl = _this$state.baseUrl; // fetch(\"http://back.cricwick.net/api/v3/view_lists/get_by_name?view=home\")\n              //Home Series Api  \n\n              Url = baseUrl + '/' + '?page=' + page + '&per_page=' + perPage; //console.log(Url);\n              //console.log(hasMore);\n\n              request.get(Url).set('Accept', 'application/json').then(function (res) {\n                _this.setState({\n                  isLoaded: true,\n                  isLoading: false,\n                  seriesData: res.body,\n                  hasMore: res.length < perPage\n                });\n              }).catch(function (error) {\n                _this.setState({\n                  isLoaded: false,\n                  error: error\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleClick = function (selectedType) {\n      if (!selectedType) {\n        _this.setState({\n          selectedType: 'live_series'\n        });\n      } else {\n        _this.setState({\n          selectedType: selectedType\n        });\n      }\n    };\n\n    _this.renderSeries = function (data) {\n      var _this$state2 = _this.state,\n          page = _this$state2.page,\n          telco = _this$state2.telco;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, data.map(function (series, i) {\n        return React.createElement(\"div\", {\n          key: series.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: '/leftPanel',\n            state: {\n              viewable_type: 'series',\n              viewable_id: series.id,\n              page: page,\n              telco: telco,\n              seriesTitle: series.title\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"video-series-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \" \", series.title, \" \"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"video-series-subtitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, Moment(new Date(series.start_date)).format(\"DD MMM\"), \" \", \" - \", Moment(new Date(series.start_date)).format(\"DD MMM\"))), data.length !== i + 1 ? React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }) : '');\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      isLoading: false,\n      hasMore: true,\n      seriesData: [],\n      selectedType: 'live_series',\n      baseUrl: 'https://back.cricwick.net/api/v2/series',\n      page: 1,\n      telco: 'mobilink',\n      perPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(Series, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSeriesRecords(); // this.state.seriesData['live_series'].map((item,i)=>(\n      //       console.log(item)\n      // ));\n      //console.log( \"From Component Did Mount : \" , this.state.seriesData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          error = _this$state3.error,\n          isLoaded = _this$state3.isLoaded,\n          seriesData = _this$state3.seriesData,\n          selectedType = _this$state3.selectedType;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \" Error : \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \" Loading Data.... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-block mb-1 p-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn link-series-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('live_series');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Live\"), React.createElement(\"button\", {\n          className: \"btn link-series-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('upcoming_series');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Upcomming\"), React.createElement(\"button\", {\n          className: \"btn link-series-button btn-link mr-2 btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleClick('recent_series');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Result\"))), React.createElement(\"div\", {\n          className: \"card card-block p-3 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, this.renderSeries(seriesData[selectedType])));\n      }\n    }\n  }]);\n\n  return Series;\n}(Component);\n\nexport default Series;","map":{"version":3,"sources":["D:\\react\\cric-ngif\\src\\components\\series\\series.jsx"],"names":["React","Component","request","Moment","Link","Series","props","loadSeriesRecords","state","page","perPage","baseUrl","Url","get","set","then","res","setState","isLoaded","isLoading","seriesData","body","hasMore","length","catch","error","handleClick","selectedType","renderSeries","data","telco","map","series","i","id","pathname","viewable_type","viewable_id","seriesTitle","title","Date","start_date","format","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport request              from 'superagent';\r\nimport Moment               from 'moment';\r\nimport {Link}               from 'react-router-dom';\r\nimport '../../assets/css/series/series.css';\r\n//import axios                from 'axios';\r\n\r\nclass Series extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            hasMore: true,\r\n            seriesData: [],\r\n            selectedType:'live_series', \r\n            baseUrl: 'https://back.cricwick.net/api/v2/series',\r\n            page: 1,\r\n            telco:'mobilink',\r\n            perPage: 10,\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSeriesRecords();\r\n        // this.state.seriesData['live_series'].map((item,i)=>(\r\n        //       console.log(item)\r\n        // ));\r\n        //console.log( \"From Component Did Mount : \" , this.state.seriesData);\r\n    }\r\n   \r\n    loadSeriesRecords = async () =>{\r\n        const {page, perPage, baseUrl} =  this.state;\r\n          // fetch(\"http://back.cricwick.net/api/v3/view_lists/get_by_name?view=home\")\r\n          //Home Series Api  \r\n      \r\n          const Url = baseUrl + '/'\r\n                      + '?page=' + page\r\n                      + '&per_page=' + perPage;\r\n\r\n          //console.log(Url);\r\n          //console.log(hasMore);\r\n          \r\n          request\r\n              .get(Url)\r\n              .set('Accept','application/json')\r\n              .then(res => {\r\n                  this.setState({\r\n                      isLoaded: true,\r\n                      isLoading: false,\r\n                      seriesData: res.body,\r\n                      hasMore: (res.length < perPage)\r\n                  });\r\n              })\r\n              .catch(error => {\r\n                  this.setState({\r\n                      isLoaded: false,\r\n                      error\r\n                  });\r\n             });\r\n      }\r\n\r\n    handleClick = (selectedType) => {\r\n        \r\n        if (!selectedType) {\r\n            this.setState({ selectedType: 'live_series' });\r\n        } else {\r\n            this.setState({ selectedType: selectedType });\r\n        }\r\n        \r\n    }\r\n    \r\n    renderSeries = (data) => {\r\n        const {page, telco} =  this.state;\r\n        \r\n        return (\r\n            <div>\r\n                {data.map((series, i) => (\r\n                    <div key={series.id}>\r\n                        <Link to={{\r\n                            pathname: '/leftPanel',\r\n                            state: {\r\n                                viewable_type: 'series',\r\n                                viewable_id: series.id,\r\n                                page: page,\r\n                                telco: telco,\r\n                                seriesTitle: series.title\r\n                            }\r\n                        }}>\r\n                            <span className='video-series-title'> {series.title} </span>\r\n                            <br />\r\n                            <span className='video-series-subtitle'>\r\n                                {Moment(new Date(series.start_date)).format(\"DD MMM\")} {\" - \"}\r\n                                {Moment(new Date(series.start_date)).format(\"DD MMM\")}\r\n                            </span>\r\n                        </Link>\r\n\r\n                        {data.length !== (i + 1) ? <hr /> : ''}\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { error, isLoaded, seriesData, selectedType} = this.state;\r\n\r\n        if (error) {\r\n            return (<div> Error : {error.message}</div>);\r\n        } else if (!isLoaded) {\r\n            return (<div> Loading Data.... </div>);\r\n        } else {\r\n\r\n        return (\r\n            <div>\r\n                <div className='card card-block mb-1 p-3'>\r\n                    <span>\r\n                        <button className='btn link-series-button btn-link mr-2 btn-sm' onClick={() => this.handleClick('live_series')} >Live</button>\r\n                        <button className='btn link-series-button btn-link mr-2 btn-sm' onClick={() => this.handleClick('upcoming_series')}>Upcomming</button>\r\n                        <button className='btn link-series-button btn-link mr-2 btn-sm' onClick={() => this.handleClick('recent_series')}>Result</button>\r\n                    </span>\r\n                </div>\r\n                  \r\n                <div className=\"card card-block p-3 mb-1\">\r\n                    {this.renderSeries(seriesData[selectedType])}        \r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n  } \r\n}\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}